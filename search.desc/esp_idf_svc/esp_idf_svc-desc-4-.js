searchState.loadedDescShard("esp_idf_svc", 4, "Task states returned by eTaskGetState.\n&lt; The task being queried is in the Blocked state.\n&lt; The task being queried has been deleted, but its TCB has …\n&lt; Used as an ‘invalid state’ value.\n&lt; The task being queried is in a ready or pending ready …\n&lt; A task is querying the state of itself, so must be …\n&lt; The task being queried is in the Suspended state, or is …\n&lt; The efuse block where the ECDSA key is stored\n&lt; The efuse block where the ECDSA key is stored\n&lt; Which kind of edge can trigger the ETM event module\n&lt; Array of kinds of edges to trigger the ETM event module …\n&lt; The ediv value\n&lt; element ID, vendor specific, 221\n&lt;  XTS encryption and decryption key\n&lt; Should be set to WIFI_VENDOR_IE_ELEMENT_ID (0xDD)\n@brief RMII Clock GPIO number Options\n@brief Output RMII Clock from internal APLL Clock …\n@brief MAC will get RMII clock from outside at this GPIO.\n@brief Inverted Output RMII Clock from internal APLL Clock …\n@brief Output RMII Clock from internal APLL Clock …\n@brief RMII Clock Mode Options\n@brief Default values configured using Kconfig are going …\n@brief Input RMII Clock from external. EMAC Clock GPIO …\n@brief Output RMII Clock from internal APLL Clock. EMAC …\n&lt;enable proximity function for sleep pad\n&lt; Enable or disable beacon monitor\n&lt; Indicate whether STA’s HT2040 coexist management is …\n@brief Enable flow control on MAC layer or not\n@brief Enable flow control on MAC layer or not\n&lt; Enable smartconfig logs.\n&lt; bool to enable/disable linger\n&lt; bool to enable/disable linger\n@brief Encode the user data into RMT symbols and write …\n&lt; ESPNOW data that this peer sends/receives is encrypted …\nFunction which implements the encryption algorithm\n&lt; ESPNOW data that this peer sends/receives is encrypted …\nFunction which implements the encryption algorithm\n&lt; Number of encrypted ESPNOW peers, maximum value is …\n&lt; Number of encrypted ESPNOW peers, maximum value is …\n&lt; flag is set to true if partition is encrypted\nCalled after completing any flash operation.\n&lt; The service end handle, it’s valid only when the type …\n&lt; The end handle of the service\n&lt; Service end handle\n&lt; Gatt  end handle value of included service\n&lt; Gatt  end handle value of included 128 bit service\nget_socket_select_semaphore returns semaphore allocated in …\n&lt; The CRL entries containing the certificate revocation …\n&lt; Entry address\nDirect access to the list of CRL entry extensions (an …\nErase a specific block by its start address.\nErase a specific block by its start address.\nErase whole flash chip.\nErase whole flash chip.\n&lt; data state on card after erase whether 0 or 1 (card …\nErase a specific sector by its start address.\nErase a specific sector by its start address.\n&lt; size the erase operation should be aligned to\nDefinitions for error constants.\nConnection aborted.\nAlready connecting.\nIllegal argument.\nBuffer error.\nConnection closed.\nNot connected.\nLow-level netif error\nOperation in progress\nConn already established.\nOut of memory error.\nNo error, everything OK.\nConnection reset.\nRouting problem.\nTimeout.\nAddress in use.\nIllegal value.\nOperation would block.\n&lt; error returned from transfer\n&lt; esp-mqtt error handle including esp-tls errors as well …\n&lt; error type referring to the source of the error\n&lt; error type referring to the source of the error\n&lt; ESPNOW using ersu send frame\n&lt; ESPNOW using ersu send frame\nConvert an <code>esp_err_t</code> into a <code>Result&lt;(), EspError&gt;</code>.\n@brief Structure storing characteristics of an ADC\n@brief Characterize an ADC at a particular attenuation\n@brief Checks if ADC calibration values are burned into …\n@brief   Reads an ADC and converts the reading to a …\n@brief   Convert an ADC reading to voltage in mV\n@brief Type of calibration value used in characterization\n&lt; Characterization based on default reference voltage\n&lt; Characterization based on Two Point values stored in …\n&lt; Characterization based on Two Point values and fitting …\n&lt; Characterization based on reference voltage stored in …\n@brief The AES 128 decrypt callback function used by …\n@brief The AES 128 encrypt callback function used by …\n\\brief Lock access to AES hardware unit\n\\brief          AES context structure\n\\brief          AES-CBC buffer encryption/decryption …\n\\brief          AES-CFB128 buffer encryption/decryption.\n\\brief          AES-CFB8 buffer encryption/decryption.\n\\brief               AES-CTR buffer encryption/decryption\n\\brief          AES-ECB block encryption/decryption\n\\brief       This function performs an AES-OFB (Output …\nXTS-AES buffer encryption/decryption\nDeprecated, see esp_aes_internal_decrypt\n@brief Deinitialize AES decryption callback function\n@brief Initialize AES callback function for decryption\n@brief Decrypt one AES block callback function\nDeprecated, see esp_aes_internal_encrypt\n@brief Deinitialize AES encryption callback function\n@brief Initialize AES callback function for encryption\n@brief Encrypt one AES block callback function\n\\brief          Clear AES context\n\\brief           This function performs a GCM …\n\\brief           This function performs GCM encryption or …\n\\brief           This function finishes the GCM operation …\n\\brief           This function clears a GCM context\n\\brief           This function initializes the specified …\n\\brief           This function associates a GCM context …\n\\brief           This function starts a GCM encryption or …\n\\brief           This function feeds an input buffer into …\n\\brief           This function feeds an input buffer as …\n@brief One-Key GMAC hash callback function with AES for …\n\\brief          Initialize AES context\n\\brief Unlock access to AES hardware unit\n\\brief          AES set key schedule (encryption or …\n@brief The AES unwrap callback function used by esp_wifi.\n@brief The AES wrap callback function used by esp_wifi.\n\\brief The AES XTS context-type definition.\n\\brief          This function releases and clears the …\n\\brief          This function initializes the specified …\n\\brief          This function prepares an XTS context for …\n\\brief          This function prepares an XTS context for …\n@brief callback called when an allocation operation fails, …\n@brief Description about application.\n@brief   Return esp_app_desc structure. This structure …\n@brief   Fill the provided buffer with SHA256 of the ELF …\n@brief attribute auto response flag\n@brief Attribute description (used to create database)\n@brief set the attribute value type\nGet the next frame on a stack for backtracing\nGet the first frame of the current stack’s backtrace\n@brief Print the backtrace of the current stack\n@brief Print the backtrace from specified frame.\n@brief  Return base MAC address which is set using …\n@brief  Set base MAC address with the MAC address which is …\nBluetooth device address\nBLE device address type\n&lt; Public Device Address\n&lt; Random Device Address. To set this address, use the …\n&lt; Resolvable Private Address (RPA) with public identity …\n&lt; Resolvable Private Address (RPA) with random identity …\nAdvertising channel mask\nAdvertising data content, according to “Supplement to …\nThe type of advertising data(not adv_type)\nAllow both scan and connection requests from anyone\nAllow both scan req from anyone and connection req from …\nAllow both scan req from White List devices only and …\nAllow scan and connection requests from White List devices …\nAdvertising parameters\nAdvertising mode\n@brief Structure associated with ESP_AUTH_CMPL_EVT\n@brief  struct type of the bond device value\n@brief  struct type of the bond key information value\n@brief type of BLE connection event length computation\n&lt; use CE_LEN parameter from HCI commands\n&lt; original\n&lt; Espressif vendor defined\n@brief           Reply the confirm value to the peer …\nConnection update parameters\n@brief           This function is called to create the OOB …\n@brief           This function is used to start a test …\n@brief DTM RX parameters\n@brief           This function is used to start a test …\n@brief DTM TX parameters\n@brief           This function is used to start a test …\n@brief DTM RX parameters\n@brief           This function is used to stop any test …\n@brief           This function is used to start a test …\n@brief DTM TX parameters\nDTM RX start event\nDTM test end event\nDTM TX start event\n&lt; BLE advertising address , device info will be added into …\n&lt; BLE mesh beacon AD type, the format is | Len | 0x2B | …\n&lt; BLE mesh link ID, it is for BLE mesh, device info will …\n&lt; BLE mesh provisioning service uuid, the format is | 0x02 …\n&lt; BLE mesh adv with proxy service uuid, the format is | …\n&lt; BLE mesh adv with proxy service uuid, the format is | …\n&lt; BLE mesh URI adv, the format is …| Len | 0x24 | data |…\n@brief Ble scan result event type, to indicate the result …\n&lt; Connectable undirected advertising (ADV_IND)\n&lt; Connectable directed advertising (ADV_DIRECT_IND)\n&lt; Scannable undirected advertising (ADV_SCAN_IND)\n&lt; Non connectable undirected advertising (ADV_NONCONN_IND)\n&lt; Scan Response (SCAN_RSP)\n@brief ext scan config\n@brief ext scan parameters\n@brief           This function is called to add a device …\n@brief Gap callback parameters union\n@brief ESP_GAP_BLE_ADV_CLEAR_COMPLETE_EVT\n@brief ESP_GAP_BLE_ADV_DATA_SET_COMPLETE_EVT\n@brief ESP_GAP_BLE_ADV_DATA_RAW_SET_COMPLETE_EVT\n@brief ESP_GAP_BLE_ADV_START_COMPLETE_EVT\n@brief ESP_GAP_BLE_ADV_STOP_COMPLETE_EVT\n@brief ESP_GAP_BLE_ADV_TERMINATED_EVT\n@brief ESP_GAP_BLE_CHANNEL_SELECT_ALGORITHM_EVT\n@brief ESP_GAP_BLE_CLEAR_BOND_DEV_COMPLETE_EVT\n@brief ESP_GAP_BLE_DTM_TEST_UPDATE_EVT\n@brief ESP_GAP_BLE_EXT_ADV_DATA_SET_COMPLETE_EVT\n@brief ESP_GAP_BLE_EXT_ADV_REPORT_EVT\n@brief ESP_GAP_BLE_EXT_SCAN_RSP_DATA_SET_COMPLETE_EVT\n@brief ESP_GAP_BLE_EXT_ADV_SET_CLEAR_COMPLETE_EVT\n@brief ESP_GAP_BLE_EXT_ADV_SET_PARAMS_COMPLETE_EVT\n@brief ESP_GAP_BLE_EXT_ADV_SET_RAND_ADDR_COMPLETE_EVT\n@brief ESP_GAP_BLE_EXT_ADV_SET_REMOVE_COMPLETE_EVT\n@brief ESP_GAP_BLE_EXT_ADV_START_COMPLETE_EVT\n@brief ESP_GAP_BLE_EXT_ADV_STOP_COMPLETE_EVT\n@brief ESP_GAP_BLE_PREFER_EXT_CONN_PARAMS_SET_COMPLETE_EVT\n@brief ESP_GAP_BLE_EXT_SCAN_START_COMPLETE_EVT\n@brief ESP_GAP_BLE_EXT_SCAN_STOP_COMPLETE_EVT\n@brief ESP_GAP_BLE_GET_BOND_DEV_COMPLETE_EVT\n@brief ESP_GAP_BLE_GET_DEV_NAME_COMPLETE_EVT\n@brief ESP_GAP_BLE_SET_LOCAL_PRIVACY_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_ADD_DEV_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_CLEAR_DEV_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_CREATE_SYNC_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_REMOVE_DEV_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_SYNC_CANCEL_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_SYNC_TERMINATE_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_DATA_SET_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_RECV_ENABLE_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_REPORT_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_SET_INFO_TRANS_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_SET_PARAMS_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_START_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_STOP_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_SYNC_ESTAB_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_SYNC_LOST_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_SYNC_TRANS_COMPLETE_EVT\n@brief ESP_GAP_BLE_PERIODIC_ADV_SYNC_TRANS_RECV_EVT\n@brief ESP_GAP_BLE_PHY_UPDATE_COMPLETE_EVT\n@brief ESP_GAP_BLE_SET_PKT_LENGTH_COMPLETE_EVT\n@brief ESP_GAP_BLE_READ_PHY_COMPLETE_EVT\n@brief ESP_GAP_BLE_READ_RSSI_COMPLETE_EVT\n@brief ESP_GAP_BLE_REMOVE_BOND_DEV_COMPLETE_EVT\n@brief ESP_GAP_BLE_SCAN_PARAM_SET_COMPLETE_EVT\n@brief ESP_GAP_BLE_SCAN_REQ_RECEIVED_EVT\n@brief ESP_GAP_BLE_SCAN_RESULT_EVT\n@brief ESP_GAP_BLE_SCAN_RSP_DATA_SET_COMPLETE_EVT\n@brief ESP_GAP_BLE_SCAN_RSP_DATA_RAW_SET_COMPLETE_EVT\n@brief ESP_GAP_BLE_SCAN_START_COMPLETE_EVT\n@brief ESP_GAP_BLE_SCAN_STOP_COMPLETE_EVT\n@brief ESP_GAP_BLE_SET_CHANNELS_EVT\n@brief ESP_GAP_BLE_SET_EXT_SCAN_PARAMS_COMPLETE_EVT\n@brief ESP_GAP_BLE_SET_PAST_PARAMS_COMPLETE_EVT\n@brief ESP_GAP_BLE_SET_PREFERRED_DEFAULT_PHY_COMPLETE_EVT\n@brief ESP_GAP_BLE_SET_PREFERRED_PHY_COMPLETE_EVT\n@brief ESP_GAP_BLE_SET_STATIC_RAND_ADDR_EVT\n@brief ESP_GAP_BLE_UPDATE_CONN_PARAMS_EVT\n@brief …\n@brief ESP_GAP_BLE_UPDATE_WHITELIST_COMPLETE_EVT\n@brief ESP_GAP_BLE_VENDOR_CMD_COMPLETE_EVT\n@brief           This function is called to clean the …\n@brief           This function is used to clear legacy …\n@brief           This function clears the random address …\n@brief            Clear all white list\n@brief           This function is called to override the …\n@brief           This function is called to set raw …\n@brief           This function is used to set the data …\n@brief           This function is used to provide scan …\n@brief           set local gap appearance icon\n@brief           Enable/disable privacy (including address …\n@brief           This function is used to set the data …\n@brief           This function is called to set raw scan …\n@brief create extend connection parameters\n@brief           This function is to disconnect the …\n@brief ext adv parameters\n@brief extend adv report parameters\n@brief           This function is used to remove all …\n@brief           This function is used by the Host to set …\n@brief           This function is used by the Host to set …\n@brief           This function is used to remove an …\n@brief           This function is used to request the …\n@brief           This function is used to request the …\n@brief extend adv enable parameters\n@brief           This function is called to get the …\n@brief           Get device name of the local device\n@brief          This function is called to get local used …\n@brief            Get the whitelist size in the controller\n@brief periodic adv sync transfer parameters\n@brief           This function is used to add a single …\n@brief           This function is used to remove all …\n@brief           This function is used to synchronize with …\n@brief periodic adv parameters\n@brief           This function is used to set periodic …\n@brief           This function is used to remove one …\n@brief periodic adv report parameters\n@brief           This function is used to transfer …\n@brief           This function is used by the Host to set …\n@brief           This function is used to request the …\n@brief           This function is used to request the …\n@brief           This function is used to cancel the …\n@brief perodic adv sync establish parameters\n@brief periodic adv sync parameters\n@brief           This function is used to stop reception …\n@brief           This function is used to transfer …\n@brief           This function is used to set aux …\n@brief           This function is used to read the current …\n@brief           This function is called to read the RSSI …\n@brief           This function is called to occur gap …\n@brief           This function is called to remove a …\n@brief             Grant security request access.\n@brief           Set device name to the local device Note: …\n@brief           This function is used to set the extended …\n@brief           This function is used to set periodic …\n@brief           This function is to set maximum LE data …\n@brief            This function is called to set the …\n@brief           This function is used to allows the Host …\n@brief           This function is used to set the PHY …\n@brief           This function allows configuring either a …\n@brief           This function is called to set scan …\n@brief             Set a GAP security parameter value. …\n@brief           This function is called to start …\n@brief           This function is used to enable scanning.\n@brief           This procedure keep the device scanning …\n@brief           This function is called to stop …\n@brief           This function is used to disable scanning.\n@brief          This function call to stop the device …\n@brief           Update connection parameters, can only be …\n@brief            Add or remove device from white list\n@brief           This function is called to send vendor …\n@brief           This function is called to set local MTU, …\n@brief           This function is called to register …\n@brief           This function is called to unregister an …\n@brief           Add or delete the associated address with …\n@brief           Clean the service cache of this device in …\n@brief           Get the address list which has store the …\n@brief           Refresh the server cache store in the …\n@brief Gatt client callback parameters union\n@brief ESP_GATTC_CFG_MTU_EVT\n@brief ESP_GATTC_CLOSE_EVT\n@brief ESP_GATTC_CONGEST_EVT\n@brief ESP_GATTC_CONNECT_EVT\n@brief ESP_GATTC_DIS_SRVC_CMPL_EVT\n@brief ESP_GATTC_DISCONNECT_EVT\n@brief ESP_GATTC_EXEC_EVT\n@brief ESP_GATTC_GET_ADDR_LIST_EVT\n@brief ESP_GATTC_NOTIFY_EVT\n@brief ESP_GATTC_OPEN_EVT\n@brief ESP_GATTC_QUEUE_FULL_EVT\n@brief ESP_GATTC_READ_CHAR_EVT, ESP_GATTC_READ_DESCR_EVT, …\n@brief ESP_GATTC_REG_EVT\n@brief ESP_GATTC_REG_FOR_NOTIFY_EVT\n@brief ESP_GATTC_SEARCH_CMPL_EVT\n@brief ESP_GATTC_SEARCH_RES_EVT\n@brief ESP_GATTC_SET_ASSOC_EVT\n@brief ESP_GATTC_SRVC_CHG_EVT\n@brief ESP_GATTC_UNREG_FOR_NOTIFY_EVT\n@brief ESP_GATTC_WRITE_CHAR_EVT, ESP_GATTC_PREP_WRITE_EVT, …\n@brief           Close the virtual connection to the GATT …\n@brief           This function is called to execute write …\n@brief           Find all the characteristic with the …\n@brief           Find all the descriptor with the given …\n@brief           Find the attribute count with the given …\n@brief           This function is called to get the …\n@brief           Find the characteristic with the given …\n@brief           This function is called to get the GATT …\n@brief           Find the descriptor with the given …\n@brief           Find the descriptor with the given …\n@brief           Find the include service with the given …\n@brief           Find all the service with the given …\n@brief           Open a direct connection or add a …\n@brief           This function is called to prepare write …\n@brief           This function is called to prepare write …\n@brief           This function is called to read a service…\n@brief           This function is called to read a service…\n@brief           This function is called to read a …\n@brief           This function is called to read multiple …\n@brief           This function is called to read multiple …\n@brief           This function is called to register …\n@brief           This function is called to register for …\n@brief           This function is called to get service …\n@brief           Configure the MTU size in the GATT …\n@brief           This function is called to de-register …\n@brief           This function is called to write …\n@brief           This function is called to write …\n@brief           This function is called to add a …\n@brief           This function is called to add …\n@brief           This function is called to add an …\n@brief           This function is called to register …\n@brief           unregister with GATT Server.\n@brief Gatt server callback parameters union\n@brief ESP_GATTS_CREAT_ATTR_TAB_EVT\n@brief ESP_GATTS_ADD_CHAR_DESCR_EVT\n@brief ESP_GATTS_ADD_CHAR_EVT\n@brief ESP_GATTS_ADD_INCL_SRVC_EVT\n@brief ESP_GATTS_CANCEL_OPEN_EVT\n@brief ESP_GATTS_CLOSE_EVT\n@brief ESP_GATTS_CONF_EVT\n@brief ESP_GATTS_LISTEN_EVT / /** @brief …\n@brief ESP_GATTS_CONNECT_EVT\n@brief ESP_GATTS_CREATE_EVT\n@brief ESP_GATTS_DELETE_EVT\n@brief ESP_GATTS_DISCONNECT_EVT\n@brief ESP_GATTS_EXEC_WRITE_EVT\n@brief ESP_GATTS_MTU_EVT\n@brief ESP_GATTS_OPEN_EVT\n@brief ESP_GATTS_READ_EVT\n@brief ESP_GATTS_REG_EVT\n@brief ESP_GATTS_RESPONSE_EVT\n@brief ESP_GATTS_SEND_SERVICE_CHANGE_EVT\n@brief ESP_GATTS_SET_ATTR_VAL_EVT\n@brief ESP_GATTS_START_EVT\n@brief ESP_GATTS_STOP_EVT\n@brief ESP_GATTS_WRITE_EVT\n@brief           Close a connection  a remote device.\n@brief               Create a service attribute tab. @param…\n@brief           Create a service. When service creation …\n@brief           This function is called to delete a …\n@brief       Retrieve attribute value\n@brief           This function is called to get the …\n@brief           Open a direct open connection or add a …\n@brief           This function is called to register …\n@brief           Send indicate or notify to GATT client. …\n@brief           This function is called to send a …\n@brief           Send service change indication\n@brief           This function is called to set the …\n@brief           Print local database (GATT service table)\n@brief           This function is called to start a …\n@brief           This function is called to stop a service.\n@brief           Get the device from the security database …\n@brief           Get the device number from the security …\n@brief           This function is called to read the …\n@brief  union type of the security key value\n@brief  union type of the security key value\n@brief  BLE SRK keys\n@brief  BLE Encryption reproduction keys\n@brief  structure type of the ble local id keys value\n@brief  structure type of the ble local oob data value\n@brief           This function is called to provide the …\n@brief          Reply the key value to the peer device in …\n@brief  BLE CSRK keys\n@brief BLE encryption keys\n@brief  BLE pid keys\n@brief BLE pkt date length keys\n@brief BLE tx power type ESP_BLE_PWR_TYPE_CONN_HDL0-8: for …\n&lt; For advertising\n&lt; For connection handle 0\n&lt; For connection handle 1\n&lt; For connection handle 2\n&lt; For connection handle 3\n&lt; For connection handle 4\n&lt; For connection handle 5\n&lt; For connection handle 6\n&lt; For connection handle 7\n&lt; For connection handle 8\n&lt; For default, if not set other, it will use default value\n&lt; TYPE numbers\n&lt; For scan\n@brief           Removes a device from the security …\n@brief          This function is called to get ADV data …\n@brief           This function is called to provide the …\nBle scan duplicate type\n&lt; the Link Layer should generate advertising reports to …\n&lt; the Link Layer should filter out duplicate advertising …\n&lt; Duplicate filtering enabled, reset for each scan period, …\n&lt; Reserved for future use.\nBle scan filter type\n&lt; Accept all :\n&lt; Accept only :\n&lt; Accept all :\n&lt; Accept all :\nBle scan parameters\nBle scan type\n&lt; Active scan\n&lt; Passive scan\n&lt; relate to BTA_DM_BLE_SEC_ENCRYPT in bta/bta_api.h. If …\n&lt; relate to BTA_DM_BLE_SEC_ENCRYPT_MITM in bta/bta_api.h. …\n&lt; relate to BTA_DM_BLE_SEC_ENCRYPT_NO_MITM in …\n@brief  Structure associated with ESP_KEY_NOTIF_EVT\n@brief  Structure of the security request\n@brief union associated with ble security\n@brief             Set a gap parameter value. Use this …\n@brief  Get BLE TX power Connection Tx power should only …\n@brief  Set BLE TX power Connection Tx power should only …\n@brief Vendor HCI command parameters\nwhite list address type\n&lt; add address to whitelist\n&lt; clear all device in whitelist\n&lt; remove mac from whitelist\n@brief Bluetooth stack configuration\n@brief     Deinit and free the resource for bluetooth, …\n@brief     Disable bluetooth, must prior to …\n@brief     Enable bluetooth, must after …\n@brief     Get bluetooth stack status\n@brief     Init and alloc the resource for bluetooth, must …\n@brief     Init and alloc the resource for bluetooth, must …\n@brief Bluetooth stack status type, to indicate whether …\n&lt; Bluetooth initialized and enabled\n&lt; Bluetooth initialized but not enabled\n&lt; Bluetooth not initialized\n@brief Bootloader description structure\n@brief   Return esp_bootloader_desc structure.\n@brief           This function is used to update the path …\n@brief Controller config options, depend on config mask. …\n@brief  De-initialize BT controller to free resource and …\n@brief  Disable BT controller @return       ESP_OK - …\n@brief Enable BT controller. Due to a known issue, you …\n@brief  Get BT controller is …\n@brief       Initialize BT controller to allocate task and …\n@brief to check whether bluetooth controller is sleeping …\n@brief esp_bt_controller_mem_release release the …\n@brief Bluetooth controller …\n@brief request controller to wakeup from sleeping state …\n@brief Type of controller HCI transport layer\n&lt; HCI UART h4 transport layer\n&lt; VHCI interface\n@brief           Config bluetooth device coexis status. …\n@brief Bluetooth device coex type\n@brief      Get bluetooth device address.  Must use after …\n@brief           Set bluetooth device name. This function …\nBluetooth device type\n&lt; Add device info into duplicate scan exceptional list\n&lt; Clean duplicate scan exceptional list\n&lt; Remove device info from duplicate scan exceptional list\n@brief Get the Bluetooth module sleep clock source.\n@brief notify bluetooth controller task to process the …\n@brief callback function for HCI Transport Layer …\n@brief Controller HCI transport layer function structure …\n@brief esp_bt_mem_release release controller memory and …\n@brief Bluetooth mode for controller enable/disable\n&lt; Run BLE mode\n&lt; Run dual mode\n&lt; Run Classic BT mode\n&lt; Bluetooth is not running\n@brief Bluetooth sleep clock\n&lt; External 32.768kHz crystal\n&lt; Hardwired 32KHz clock temporarily used for FPGA\n&lt; SoC main crystal\n&lt; Sleep clock not configured\n&lt; Internal 136kHz RC oscillator\n@brief disable bluetooth modem sleep\n@brief enable bluetooth to enter modem sleep\n@brief Bluetooth sleep mode\n&lt; Bluetooth sleep mode 1\n&lt; Bluetooth sleep mode disabled\nStatus Return Value\nUUID type\n@brief Decrypt data callback function using CCMP (Counter …\n@brief Encrypt data callback function using CCMP (Counter …\n@brief ESP chip ID\n&lt; chip ID: ESP32\n&lt; chip ID: ESP32-C2\n&lt; chip ID: ESP32-C3\n&lt; chip ID: ESP32-C6\n&lt; chip ID: ESP32-H2\n&lt; chip ID: ESP32-P4\n&lt; chip ID: ESP32-S2\n&lt; chip ID: ESP32-S3\n&lt; Invalid chip ID (we defined it to make sure the …\n&lt; The long hold GPIO\n&lt; If the GPIO input is not low\n&lt; The short hold GPIO\n@brief Console command main function @param argc number of …\n@brief Register console command @param cmd pointer to the …\n@brief Console command description\n@brief Parameters for console initialization\n@brief de-initialize console module @note  Call this once …\n@brief Parameters for console device: UART\n@brief Callback which provides command completion for …\n@brief Callback which provides command hints for linenoise …\n@brief initialize console module @param config console …\n@brief Establish a console REPL environment over UART …\n@brief Register a ‘help’ command\n@brief Parameters for console REPL (Read Eval Print Loop)\n@brief Console REPL base structure\n@brief Type defined for console REPL\n@brief Run command line @param cmdline command line …\n@brief Split command line into arguments in place @verbatim\n@brief Start REPL environment @param[in] repl REPL handle …\n@brief  Check integrity of coredump data in flash. This …\n@brief  Erases coredump data in flash. …\n@brief  Retrieves address and size of coredump data in …\n@brief  Initializes core dump module internal data.\n@brief  Print/store coredump data to the selected …\n@brief Clear a hardware breakpoint on the current CPU\n@brief Clear a hardware watchpoint on the current CPU\n@brief Atomic compare-and-set operation\n@brief Configure the CPU to disable access to invalid …\n@brief CPU cycle count type\n@brief CPU interrupt descriptor\n@brief Get a CPU interrupt’s descriptor\n@brief CPU interrupt handler type\n@brief CPU interrupt type\n@brief Reset a CPU core\n@brief Set and enable a hardware breakpoint on the current …\n@brief Set and enable a hardware watchpoint on the current …\n@brief Stall a CPU core\n@brief Resume a previously stalled CPU core\n@brief Wait for Interrupt\n@brief CPU watchpoint trigger type\n@brief CRC32 value callback function in little endian.\n@brief      Attach and enable use of a bundle for …\n@brief      Disable and dealloc the certification bundle\n@brief      Set the default certificate bundle used for …\n@brief Enter deep-sleep mode\n@brief Unregister an deepsleep callback\n@brief Disable logging from the ROM code after deep sleep.\n@brief Enable wakeup using specific gpio pins\n@brief Register a callback to be called from the deep …\n@brief Enter deep sleep with the configured wakeup options\n@brief Enter deep-sleep mode\n@brief Enter deep sleep with the configured wakeup options\n@brief Function type for stub to run on wake from sleep.\n@brief The default esp-idf-provided esp_wake_deep_sleep() …\n@brief  Unregister an idle callback. If the idle callback …\n@brief  Unregister an idle callback from the idle hook of …\n@brief  Unregister a tick callback. If the tick callback …\n@brief  Unregister a tick callback from the tick hook of …\n@brief Derive local MAC address from universal MAC address.\n&lt; duplicate scan exceptional addr list\n&lt; duplicate scan exceptional all list\n&lt; duplicate scan exceptional mesh beacon type list\n&lt; duplicate scan exceptional mesh link ID list\n&lt; duplicate scan exceptional mesh adv with provisioning …\n&lt; duplicate scan exceptional mesh adv with proxy …\n&lt; duplicate scan exceptional mesh adv with proxy service …\n&lt; duplicate scan exceptional URI list\n@brief Clear the previously set Certificate Authority (CA) …\n@brief Clear the previously set client certificate and …\n@brief Clear the previously set identity for PEAP/TTLS …\n@brief Clear new password for MSCHAPv2 method.\n@brief Clear password for PEAP/TTLS method.\n@brief Clear username for PEAP/TTLS method.\n@brief Get EAP client certificates time check status.\n@brief Set CA certificate for EAP authentication.\n@brief Set client certificate and private key for EAP …\n@brief Set EAP client certificates time check (disable or …\n@brief Set the parameters for EAP-FAST Phase 1 …\n@brief Set identity for PEAP/TTLS authentication method.\n@brief Set a new password for MSCHAPv2 authentication …\n@brief Set the PAC (Protected Access Credential) file for …\n@brief Set password for PEAP/TTLS authentication method.\n@brief Enable or disable Suite-B 192-bit certification …\n@brief Set EAP-TTLS phase 2 method.\n@brief Set username for PEAP/TTLS authentication method.\n@brief Use the default certificate bundle for EAP …\n@brief Configuration settings for EAP-FAST (Extensible …\n@brief Enumeration of phase 2 authentication types for …\n&lt; CHAP (Challenge Handshake Authentication Protocol)\n&lt; EAP (Extensible Authentication Protocol)\n&lt; MS-CHAP (Microsoft Challenge Handshake Authentication …\n&lt; MS-CHAPv2 (Microsoft Challenge Handshake Authentication …\n&lt; PAP (Password Authentication Protocol)\n@brief Set the batch mode of writing fields.\n@brief Reset the batch mode of writing fields.\n@brief Writes all prepared data for the batch mode.\n@brief Checks that the given block is empty.\n@brief Type of eFuse blocks ESP32C3\n&lt; Number of eFuse BLOCK0. REPEAT_DATA\n&lt; Number of eFuse BLOCK1. MAC_SPI_8M_SYS\n&lt; Number of eFuse BLOCK10. SYS_DATA_PART2\n&lt; Number of eFuse BLOCK2. SYS_DATA_PART1\n&lt; Number of eFuse BLOCK3. USER_DATA\n&lt; Number of eFuse BLOCK4. KEY0\n&lt; Number of eFuse BLOCK5. KEY1\n&lt; Number of eFuse BLOCK6. KEY2\n&lt; Number of eFuse BLOCK7. KEY3\n&lt; Number of eFuse BLOCK8. KEY4\n&lt; Number of eFuse BLOCK9. KEY5\n&lt; Number of eFuse BLOCK4. KEY0\n&lt; Number of eFuse BLOCK5. KEY1\n&lt; Number of eFuse BLOCK6. KEY2\n&lt; Number of eFuse BLOCK7. KEY3\n&lt; Number of eFuse BLOCK8. KEY4\n&lt; Number of eFuse BLOCK9. KEY5\n&lt; Number of eFuse BLOCK2. SYS_DATA_PART1\n&lt; Number of eFuse BLOCK10. SYS_DATA_PART2\n&lt; Number of eFuse BLOCK3. USER_DATA\n@brief   Checks eFuse errors in BLOCK0.\n@brief Check secure_version from app and secure_version …\n@brief Type of coding scheme\n&lt; None\n&lt; Reed-Solomon coding\n@brief Return the number of unused efuse key blocks in the …\n@brief Type definition for an eFuse field\n@brief Disable ROM Download Mode via eFuse\n@brief Switch ROM Download Mode to Secure Download mode …\n@brief Find a key block with the particular purpose set.\n@brief Search for an unused key block and return the first …\n@brief   Return efuse coding scheme for blocks.\n@brief Returns the status of the Secure Boot public key …\n@brief   Returns the number of bits used by field.\n@brief Returns a pointer to a key block.\n@brief Returns a read protection for the key block.\n@brief Returns a write protection for the key block.\n@brief Returns the current purpose set for an efuse key …\n@brief Returns a write protection of the key purpose field …\n@brief   Returns chip package from efuse\n@brief Returns a pointer to a key purpose for an efuse key …\n@brief Returns a write protection of the Secure Boot …\n@brief Returns true if the key block is unused, false …\n@brief  Return base MAC address which was previously …\n@brief  Return base MAC address which is …\n@brief Type of key purpose\n&lt; HMAC Downstream mode\n&lt; Digital Signature peripheral key (uses HMAC Downstream …\n&lt; JTAG soft enable key (uses HMAC Downstream mode)\n&lt; HMAC Upstream mode\n&lt; MAX PURPOSE\n&lt; Reserved\n&lt; SECURE_BOOT_DIGEST0 (Secure Boot key digest)\n&lt; SECURE_BOOT_DIGEST1 (Secure Boot key digest)\n&lt; SECURE_BOOT_DIGEST2 (Secure Boot key digest)\n&lt; User purposes (software-only use)\n&lt; XTS_AES_128_KEY (flash/PSRAM encryption)\n@brief   Read key to efuse block starting at the offset …\n@brief Read a single bit eFuse field as a boolean value.\n@brief   Reads bits from EFUSE field and writes it into an …\n@brief   Reads bits from EFUSE field and returns number of …\n@brief   Returns value of efuse register.\n@brief Return secure_version from efuse field. @return …\n@brief Reset efuse write registers\n@brief Type definition for ROM log scheme\n&lt; Disable ROM logging permanently\n&lt; Always enable ROM logging\n&lt; ROM logging is enabled when specific GPIO level is high …\n&lt; ROM logging is enabled when specific GPIO level is low …\n@brief Sets the Secure Boot public key digest revocation …\n@brief Sets a read protection for the key block.\n@brief Sets a write protection for the key block.\n@brief Sets a key purpose for an efuse key block.\n@brief Sets a write protection of the key purpose field …\n@brief   Sets a read protection for the whole block.\n@brief Set boot ROM log scheme via eFuse\n@brief   Sets a write protection for the whole block.\n@brief Sets a write protection of the Secure Boot public …\n@brief Write efuse field by secure_version value.\n@brief   Write key to efuse block starting at the offset …\n@brief Write a single bit eFuse field to 1\n@brief   Writes array to EFUSE field.\n@brief   Writes a required count of bits as “1” to …\n@brief Program a block of key data to an efuse block\n@brief Program keys to unused efuse blocks\n@brief   Write value to efuse register.\n@brief Returns string for esp_err_t error codes\n@brief Returns string for esp_err_t and system error codes\n@brief     Set timeout of SmartConfig process.\n@brief Configuration of Ethernet driver\n@brief Decrease Ethernet driver reference\n@brief Delete netif glue of Ethernet driver\n@brief Install Ethernet driver\n@brief Uninstall Ethernet driver @note It’s not …\n@brief Handle of Ethernet driver\n@brief Increase Ethernet driver reference @note Ethernet …\n@brief Command list for ioctl API\n&lt; Get PHY Auto Negotiation\n&lt; Get Duplex mode\n&lt; Get MAC address\n&lt; Get PHY address\n&lt; Get Speed\n&lt; Read PHY register\n&lt; Set PHY Auto Negotiation\n&lt; Set Duplex mode\n&lt; Set flow control\n&lt; Set MAC address\n&lt; Set PHY address\n&lt; Set PHY loopback\n&lt; Set promiscuous mode\n&lt; Set Speed\n&lt; Write PHY register\n@brief Misc IO function of Etherent driver\n@brief Create DM9051 Ethernet MAC instance\n@brief Create KSZ8851SNL Ethernet MAC instance\n@brief Create W5500 Ethernet MAC instance\n@brief Ethernet MAC\n@brief Ethernet MAC\n@brief Ethernet mediator\n@brief Ethernet mediator\n@brief Handle of netif glue - an intermediate layer …\n@brief Create a netif glue for Ethernet driver @note netif …\n@brief Create a PHY instance of DM9051\n@brief Create a PHY instance of DP83848\n@brief Create a PHY instance of IP101\n@brief Create a PHY instance of KSZ80xx\n@brief Create a PHY instance of KSZ8851SNL\n@brief Create a PHY instance of LAN87xx\n@brief Create a PHY instance of RTL8201\n@brief Create a PHY instance of W5500\n@brief Data structure to Read/Write PHY register via ioctl …\n@brief Ethernet PHY\n@brief Ethernet PHY\n@brief Start Ethernet driver <strong>ONLY</strong> in standalone mode (i.e. …\n@brief Ethernet driver state\n&lt; Deinit done\n&lt; Duplex updated\n&lt; Link status changed\n&lt; Lowlevel init done\n&lt; Pause ability updated\n&lt; Speed updated\n@brief Stop Ethernet driver\n@brief General Transmit\n@brief Special Transmit with variable number of arguments\n@brief Update Ethernet data input path (i.e. specify where …\n@brief ETM channel configuration\n@brief Connect an ETM event to an ETM task via a …\n@brief Disable ETM channel\n@brief Enable ETM channel\n@brief ETM channel handle\n@brief Delete an ETM channel\n@brief Delete ETM event\n@brief Delete ETM task\n@brief Dump ETM channel usages to the given IO stream\n@brief ETM event handle\n@brief Allocate an ETM channel\n@brief ETM task handle\n@brief Dumps statistics of all event loops.\n@brief Register an instance of event handler to the …\n@brief Register an instance of event handler to a specific …\n@brief Unregister a handler from the system event loop.\n@brief Unregister a handler instance from a specific event …\n@brief Register an event handler to the system event loop …\n@brief Register an event handler to a specific loop …\n@brief Unregister a handler with the system event loop …\n@brief Unregister a handler from a specific event loop …\n@brief Special variant of esp_event_post for posting …\n@brief Special variant of esp_event_post_to for posting …\nConfiguration for creating event loops\n@brief Create a new event loop.\n@brief Create default event loop\n@brief Delete an existing event loop.\n@brief Delete the default event loop\n@brief Dispatch events posted to an event loop.\n@brief Posts an event to the system default event loop. …\n@brief Posts an event to the specified event loop. The …\n@brief Fill a buffer with random bytes from hardware RNG\nCheck if appropriate chip driver is set.\n@brief Pointer to the “default” SPI flash chip, ie the …\n@brief Erase flash chip contents\n@brief Erase a region of the flash chip\n@brief Read if the entire chip is write protected\n@brief Detect flash size based on flash ID.\n@brief Read the list of individually protectable regions …\n@brief Detect if a region of the SPI flash chip is …\n@brief Detect flash size based on flash ID.\n@brief Initialise SPI flash chip interface.\n@brief Mode used for reading from SPI flash\n&lt; Both address &amp; data transferred using dual I/O\n&lt; Data read using dual I/O\n&lt; Data read using single I/O, no limit on speed\n&lt; Only support on OPI flash, flash read and write under …\n&lt; Only support on OPI flash, flash read and write under …\n&lt; Both address &amp; data transferred using quad I/O\n&lt; Data read using quad I/O\n&lt; The fastest io mode supported by the host is …\n&lt; Data read using single I/O, some limits on speed\n@brief OS-level integration hooks for accessing flash …\n@brief Read data from the SPI flash chip\n@brief Read and decrypt data from the SPI flash chip using …\n@brief Read flash ID via the common “RDID” SPI flash …\n@brief Read flash unique ID via the common “RDUID” SPI …\n@brief Structure for describing a region of flash\n@brief Set write protection for the SPI flash chip\n@brief Update the protected status for a region of the SPI …\n@brief SPI flash clock speed values, always refer to them …\n&lt; The flash runs under 10MHz\n&lt; The flash runs under 120MHz, 120MHZ can only be used by …\n&lt; The flash runs under 20MHz\n&lt; The flash runs under 26MHz\n&lt; The flash runs under 40MHz\n&lt; The flash runs under 5MHz\n&lt; The flash runs under 80MHz\n&lt; The maximum frequency supported by the host is …\n@brief SPI flash clock speed values, always refer to them …\n@brief Structure to describe a SPI flash chip connected to …\n@brief Write data to the SPI flash chip\n@brief Encrypted and write data to the SPI flash chip …\nGAP BLE callback event type\n&lt; When clear advertising complete, the event comes\n&lt; When raw advertising data set complete, the event comes\n&lt; When advertising data set complete, the event comes\n&lt; When start advertising complete, the event comes\n&lt; When stop adv complete, the event comes\n&lt; when advertising terminate data complete, the event comes\n&lt; Authentication complete indication.\n&lt; when channel select algorithm complete, the event comes\n&lt; When clear the bond device clear complete, the event …\n&lt; when direct test mode state changes, the event comes\n&lt; when maximum advertising event complete, the event comes\n&lt; when extended advertising data complete, the event comes\n&lt; when extended advertising report complete, the event …\n&lt; when extended advertising set clear complete, the event …\n&lt; when extended advertising parameter complete, the event …\n&lt; when extended set random address complete, the event …\n&lt; when extended advertising set remove complete, the event …\n&lt; when extended advertising start complete, the event comes\n&lt; when extended advertising stop complete, the event comes\n&lt; when extended scan response data complete, the event …\n&lt; when extended scan start complete, the event comes\n&lt; when extended scan stop complete, the event comes\n&lt; When get the bond device list complete, the event comes\n&lt; When getting BT device name complete, the event comes\n&lt; BLE  key event for peer device keys\n&lt; BLE local ER (Encryption Root vakue used to genrate …\n&lt; BLE local IR (identity Root 128-bit random static value …\n&lt; Numeric Comparison request event\n&lt; OOB request event\n&lt; passkey notification event\n&lt; passkey request event\n&lt; when extended advertising add device complete , the …\n&lt; when extended advertising clear device, the event comes\n&lt; when periodic advertising create sync complete, the …\n&lt; when periodic advertising data complete, the event comes\n&lt; when set periodic advertising receive enable complete, …\n&lt; when extended advertising remove device complete, the …\n&lt; when periodic report advertising complete, the event …\n&lt; when periodic advertising set info transfer complete, …\n&lt; when periodic advertising parameter complete, the event …\n&lt; when periodic advertising start complete, the event comes\n&lt; when periodic advertising stop complete, the event comes\n&lt; when extended advertising sync cancel complete, the …\n&lt; when periodic advertising sync establish complete, the …\n&lt; when periodic advertising sync lost complete, the event …\n&lt; when extended advertising sync terminate complete, the …\n&lt; when periodic advertising sync transfer complete, the …\n&lt; when periodic advertising sync transfer received, the …\n&lt; when ble phy update complete, the event comes\n&lt; when extended prefer connection parameter set complete, …\n&lt; when reading phy complete, this event comes\n&lt; When read the rssi complete, the event comes\n&lt; When remove the bond device complete, the event comes\n&lt; When scan parameters set complete, the event comes\n&lt; when scan req received complete, the event comes\n&lt; When one scan result ready, the event comes each time\n&lt; When raw scan response data set complete, the event comes\n&lt; When scan response data set complete, the event comes\n&lt; When start scan complete, the event comes\n&lt; When stop scan complete, the event comes\n&lt; when scan timeout complete, the event comes\n&lt; Secure Connection create OOB data complete event\n&lt; Secure Connection OOB request event\n&lt; BLE  security request\n&lt; When setting BLE channels complete, the event comes\n&lt; when extended scan parameter complete, the event comes\n&lt; When  Enable/disable privacy on the local device …\n&lt; when set periodic advertising sync transfer params …\n&lt; When set pkt length complete, the event comes\n&lt; when preferred default phy complete, this event comes\n&lt; when preferred phy complete , this event comes\n&lt; When set the static rand address complete, the event …\n&lt; When update connection parameters complete, the event …\n&lt; When update duplicate exceptional list complete, the …\n&lt; When add or remove whitelist complete, the event comes\n&lt; When vendor hci command complete, the event comes\n@brief GAP callback function type @param event : Event type\n@brief           This function is called to authorized a …\n@brief            BLE set channels\nconnection parameters information\nSub Event of ESP_GAP_BLE_SCAN_RESULT_EVT\n&lt; Discovery result for BLE GATT based service on a peer …\n&lt; Discovery complete.\n&lt; Discovery result for a peer device.\n&lt; Discovery complete.\n&lt; Inquiry complete.\n&lt; The number of pkt discarded by flow control\n&lt; Inquiry result for a peer device.\n&lt; Search cancelled\n@brief Gatt authentication request type\n@brief Connection parameters information\n@brief Gatt Connection reason enum\n&lt; L2CAP connection cancelled\n&lt; Connection fail to establish\n&lt; General L2cap failure\n&lt; Connection fail for LMP response tout\n&lt; No connection to cancel\n&lt; Connection terminated by local host\n&lt; Connection terminate by peer user\n&lt; Connection timeout\n&lt; Gatt connection unknown\n@brief the type of attribute element\n&lt; Gattc all the attribute (primary service &amp; secondary …\n&lt; Gattc characteristic attribute type in the cache\n&lt; Gattc characteristic descriptor attribute type in the …\n&lt; Gattc include service attribute type in the cache\n&lt; Gattc primary service attribute type in the cache\n&lt; Gattc secondary service attribute type in the cache\n@brief Gatt id, include uuid and instance id\nAttribute write data type from the client\n&lt; Prepare write cancel\n&lt; Prepare write execute\nGATT remote read request response type\n@brief Gatt service id, include id (uuid and instance id) …\n@brief GATT success code and error codes\nGatt attribute value\n@brief Gatt write type\n&lt; Gatt write attribute need no response\n&lt; Gatt write attribute need remote response\nGATT Client callback function events\n&lt; When ACL connection is up, the event comes\n&lt; When advertising of data, the event comes\n&lt; When advertising vendor spec content event is reported, …\n&lt; When batch scan storage is configured, the event comes\n&lt; When Batch scan is disabled, the event comes\n&lt; When batch scan is enabled, the event comes\n&lt; When Batch scan parameters are set, the event comes\n&lt; When Batch scan read event is reported, the event comes\n&lt; When Batch scan threshold is set, the event comes\n&lt; When GATT client ongoing connection is cancelled, the …\n&lt; When configuration of MTU completes, the event comes\n&lt; When GATT virtual connection is closed, the event comes\n&lt; When GATT connection congestion comes, the event comes\n&lt; When the ble physical connection is set up, the event …\n&lt; When the ble physical connection disconnected, the event …\n&lt; When the ble discover service complete, the event comes\n&lt; When encryption procedure completes, the event comes\n&lt; When write execution completes, the event comes\n&lt; When the ble get gattc address list in cache finish, the …\n&lt; When multi-advertising data arrives, the event comes\n&lt; When multi-advertising is disabled, the event comes\n&lt; When multi-advertising is enabled, the event comes\n&lt; When multi-advertising parameters are updated, the event …\n&lt; When GATT notification or indication arrives, the event …\n&lt; When GATT virtual connection is set up, the event comes\n&lt; When GATT prepare-write operation completes, the event …\n&lt; When the gattc command queue full, the event comes\n&lt; When GATT characteristic is read, the event comes\n&lt; When GATT characteristic descriptor read completes, the …\n&lt; When the ble characteristic or descriptor multiple …\n&lt; When read multiple variable characteristic complete, the …\n&lt; When GATT client is registered, the event comes\n&lt; When register for notification of a service completes, …\n&lt; When Scan filter configuration completes, the event comes\n&lt; When Scan filter parameters are set, the event comes\n&lt; When Scan filter status is reported, the event comes\n&lt; When GATT service discovery is completed, the event comes\n&lt; When GATT service discovery result is got, the event …\n&lt; When the ble gattc set the associated address complete, …\n&lt; When “service changed” occurs, the event comes\n&lt; When GATT client is unregistered, the event comes\n&lt; When unregister for notification of a service completes, …\n&lt; When GATT characteristic write operation completes, the …\n&lt; When GATT characteristic descriptor write completes, the …\n@brief GATT Client callback function type @param event : …\n@brief characteristic element\n@brief data base attribute element\n@brief descriptor element\n@brief include service element\n@brief read multiple attribute\n@brief service element\n@brief attribute type added to the gatt server database\nGATT Server callback function events\n&lt; When add descriptor complete, the event comes\n&lt; When add characteristic complete, the event comes\n&lt; When add included service complete, the event comes\n&lt; When disconnect from peer, the event comes\n&lt; When gatt server close, the event comes\n&lt; When receive confirm, the event comes\n&lt; When congest happen, the event comes\n&lt; When gatt client connect, the event comes\n&lt; When create service complete, the event comes\n&lt; When gatt create table complete, the event comes\n&lt; When delete service complete, the event comes\n&lt; When gatt client disconnect, the event comes\n&lt; When gatt client request execute write, the event comes\n&lt; When gatt listen to be connected the event comes\n&lt; When set mtu complete, the event comes\n&lt; When connect to peer, the event comes\n&lt; When gatt client request read operation, the event comes\n&lt; When register application id, the event comes\n&lt; When gatt send response complete, the event comes\n&lt; When gatt send service change indication complete, the …\n&lt; When gatt set attr value complete, the event comes\n&lt; When start service complete, the event comes\n&lt; When stop service complete, the event comes\n&lt; When unregister application id, the event comes\n&lt; When gatt client request write operation, the event comes\n@brief GATT Server callback function type @param event : …\n@brief Gatt  include 128 bit service entry element\n@brief Gatt  include service entry element\n\\brief          The GCM context structure.\n@brief Get current wake from deep sleep stub @return …\n@brief  Get the size of available heap.\n@brief  Get the size of available internal heap.\nReturn full IDF version string, same as ‘git describe’ …\n@brief Get the minimum heap that has ever been available\n@brief HMAC-MD5 callback function over data buffer (RFC …\n@brief HMAC-MD5 callback function over data vector (RFC …\n@brief HMAC-SHA1 callback function over data buffer (RFC …\n@brief HMAC-SHA1 callback function over data vector (RFC …\n@brief The SHA256 callback function used by esp_wifi.\n@brief      On receiving HTTP Status code 401, this API …\n@brief HTTP Authentication type\n&lt; HTTP Basic authentication\n&lt; HTTP Disgest authentication\n&lt; No authention\n@brief       Cancel an ongoing HTTP request. This API …\n@brief      This function must be the last function to …\n@brief      Close http connection, still kept all http …\n@brief HTTP configuration\n@brief      Delete http request header\n@brief      HTTP Client events data\n@brief   HTTP Client events id\n&lt; The connection has been disconnected\n&lt; This event occurs when there are any errors during …\n&lt; After sending all the headers to the server\n&lt; This header has been kept for backward compatability and …\n&lt; Once the HTTP has been connected to the server, no data …\n&lt; Occurs when receiving data from the server, possibly …\n&lt; Occurs when finish a HTTP session\n&lt; Occurs when receiving each header sent from the server\n&lt; Intercepting HTTP redirects to handle them manually\n@brief      HTTP Client events data\n@brief      This function need to call after …\n@brief       Process all remaining response data This uses …\n@brief          Get Chunk-Length from client\n@brief      Get http response content length (from header …\n@brief      Get HTTP client session errno\n@brief      Get http request header. The value parameter …\n@brief      Get http request password. The address of …\n@brief      Get current post field information\n@brief      Get http response status code, the valid value …\n@brief      Get transport type\n@brief          Get URL from client\n@brief      Get http request user_data. The value stored …\n@brief      Get http request username. The address of …\n@brief      Start a HTTP session This function must be the …\n@brief      Check response data is chunked\n@brief      Checks if entire data in the response has been …\n@brief HTTP method\n&lt; HTTP COPY Method\n&lt; HTTP DELETE Method\n&lt; HTTP GET Method\n&lt; HTTP HEAD Method\n&lt; HTTP LOCK Method\n&lt; HTTP MKCOL Method\n&lt; HTTP MOVE Method\n&lt; HTTP NOTIFY Method\n&lt; HTTP OPTIONS Method\n&lt; HTTP PATCH Method\n&lt; HTTP POST Method\n&lt; HTTP PROPFIND Method\n&lt; HTTP PROPPATCH Method\n&lt; HTTP PUT Method\n&lt; HTTP SUBSCRIBE Method\n&lt; HTTP UNLOCK Method\n&lt; HTTP UNSUBSCRIBE Method\n@brief      Argument structure for HTTP_EVENT_ON_DATA event\n@brief      Argument structure for HTTP_EVENT_ON_DATA event\n@brief      This function will be open the connection, …\n@brief      Invoke this function after <code>esp_http_client_init</code>…\n@brief      Read data from http stream\n@brief      Helper API to read larger data chunks This is …\n@brief      Argument structure for HTTP_EVENT_REDIRECT …\n@brief      Argument structure for HTTP_EVENT_REDIRECT …\n@brief      On receiving a custom authentication header, …\n@brief      Set http request auth_type.\n@brief      Set http request header, this function must be …\n@brief      Set http request method\n@brief      Set http request password. The value of …\n@brief      Set post data, this function must be called …\n@brief      Set redirection URL. When received the 30x …\n@brief      Set http request timeout\n@brief      Set URL for client, when performing this …\n@brief      Set http request user_data. The value passed …\n@brief      Set http request username. The value of …\n@brief      HTTP Client transport\n&lt; Transport over ssl\n&lt; Transport over tcp\n&lt; Unknown\n@brief     This function will write data to the HTTP …\nArgument structure for HTTP_SERVER_EVENT_ON_DATA and …\n@brief   HTTP Server events id\n&lt; The connection has been disconnected\n&lt; This event occurs when there are any errors during …\n&lt; After sending all the headers to the client\n&lt; Once the HTTP Server has been connected to the client, …\n&lt; Occurs when receiving data from the client\n&lt; Occurs when receiving each header sent from the client\n&lt; Occurs when an ESP HTTP server session is finished\n&lt; This event occurs when HTTP Server is started\n&lt; This event occurs when HTTP Server is stopped\n@brief  Set custom MAC address of the interface. This …\n@brief Supported SPI flash sizes\n&lt; SPI flash size 128 MB\n&lt; SPI flash size 16 MB\n&lt; SPI flash size 1 MB\n&lt; SPI flash size 2 MB\n&lt; SPI flash size 32 MB\n&lt; SPI flash size 4 MB\n&lt; SPI flash size 64 MB\n&lt; SPI flash size 8 MB\n&lt; SPI flash size MAX\n@brief Get the flash size of the image\n@brief Get metadata of app\n@brief Main header of binary image\n@brief Header of binary image segment\n@brief SPI flash clock division factor.\n&lt; The SPI flash clock frequency equals to the clock source\n&lt; The SPI flash clock frequency is divided by 2 of the …\n&lt; The SPI flash clock frequency is divided by 3 of the …\n&lt; The SPI flash clock frequency is divided by 4 of the …\n@brief SPI flash mode, used in esp_image_header_t\n&lt; SPI mode DIO\n&lt; SPI mode DOUT\n&lt; SPI mode FAST_READ\n&lt; SPI mode QIO\n&lt; SPI mode QOUT\n&lt; SPI mode SLOW_READ\n@brief Verify an app image.\n@brief Verify the bootloader image.\n@brief Verify the bootloader image.\n@brief Enable the interrupt watchdog on the current CPU.\n@brief Initialize the non-CPU-specific parts of interrupt …\n&lt; Ethernet interface\n&lt; Soft-AP interface\n&lt; NAN interface\n&lt; Station interface\n\\brief           Internal AES block decryption function …\n\\brief           Internal AES block encryption function …\n@brief Allocate an interrupt with the given parameters.\n@brief Allocate an interrupt with the given parameters.\n@brief Interrupt CPU core affinity\n&lt; Install the peripheral interrupt to CPU core 0\n&lt; Install the peripheral interrupt to CPU core 1\n&lt; Install the peripheral interrupt to ANY CPU core, …\n@brief Disable the interrupt associated with the handle\n@brief disable the interrupt source based on its number …\n@brief Dump the status of allocated interrupts @param …\n@brief Enable the interrupt associated with the handle\n@brief enable the interrupt source based on its number …\n@brief Disable and free an interrupt.\n@brief Get CPU number an interrupt is tied to\n@brief Get the allocated interrupt for a certain handle\n@brief Mark an interrupt as a shared interrupt\n@brief Disable interrupts that aren’t specifically …\n@brief Re-enable interrupts disabled by …\n@brief Reserve an interrupt to be used outside of this …\n@brief Set the “in IRAM” status of the handler.\n@brief IPv4 address\n@brief IPv4 address\n@brief Ascii internet address interpretation routine The …\n@brief Converts numeric IP address into decimal dotted …\n@brief IPv6 address\n@brief IPv6 address\n@brief IP address\n@cond <em>/ /</em>* @brief LCD color space type definition (WRONG!) …\n&lt; Color space: BGR\n&lt; Color space: monochrome\n&lt; Color space: RGB\n@brief Create LCD panel IO handle, for I2C interface in …\n@brief Create LCD panel IO handle, for I2C interface in …\n@brief Create LCD panel IO handle, for SPI interface\n@brief Create LCD panel for model NT35510\n@brief Create LCD panel for model SSD1306\n@brief Create LCD panel for model ST7789\n@brief Deinitialize the LCD panel\n@brief Configuration structure for panel device\n@brief Turn off the display\n@brief Turn on or off the display\n@brief Enter or exit sleep mode\n@brief Draw bitmap on LCD panel\n@brief Initialize LCD panel\n@brief Invert the color (bit-wise invert the color data …\n@brief Type of LCD panel IO callbacks\n@brief Declare the prototype of the function that will be …\n@brief Destroy LCD panel IO handle (deinitialize panel and …\n@brief Type of LCD panel IO event data\n@brief Panel IO configuration structure, for I2C interface\n@brief Register LCD panel IO callbacks\n@brief Transmit LCD command and receive corresponding …\n@brief Panel IO configuration structure, for SPI interface\n@brief LCD panel IO interface\n@brief Transmit LCD RGB data\n@brief Transmit LCD command and corresponding parameters\n@brief Mirror the LCD panel on specific axis\n@brief Reset LCD panel\n@brief Set extra gap in x and y axis\n@brief Swap/Exchange x and y axis\n@brief LCD panel interface\n@brief Enter light sleep with the configured wakeup options\n@brief Line ending settings\n!&lt; CR\n!&lt; CR + LF\n!&lt; LF\n@brief Default log level\n@brief Function which returns timestamp to be used in log …\n@brief Get log level for a given tag, can be used to avoid …\n@brief Set log level for given tag\n@brief Log level\n&lt; Extra information which is not necessary for normal use …\n&lt; Critical errors, software module can not recover on its …\n&lt; Information messages which describe normal flow of events\n&lt; No log output\n&lt; Bigger chunks of debugging information, or frequent …\n&lt; Error conditions from which recovery measures have been …\n@brief Set function used to output log entries\n@brief Function which returns system timestamp to be used …\n@brief Function which returns timestamp to be used in log …\n@brief Write message into the log\n@brief  Return the size of the MAC type in bytes.\n&lt; Base MAC for that used for other MAC types (6 bytes)\n&lt; MAC for Bluetooth (6 bytes)\n&lt; MAC_CUSTOM eFuse which was can be burned by customer (6 …\n&lt; if CONFIG_SOC_IEEE802154_SUPPORTED=y, MAC_EXT eFuse …\n&lt; MAC_FACTORY eFuse which was burned by Espressif in …\n&lt; MAC for Ethernet (6 bytes)\n&lt; if CONFIG_SOC_IEEE802154_SUPPORTED=y, MAC for IEEE802154 …\n&lt; MAC for WiFi Soft-AP (6 bytes)\n&lt; MAC for WiFi Station (6 bytes)\n\\brief          Clone (the state of) an MD5 context\n\\brief          MD5 final digest\n\\brief          Clear MD5 context\n\\brief          Initialize MD5 context\n\\brief          MD5 process data block (internal use only)\n\\brief          MD5 process buffer\n@brief MD5 hash callback function for data vector\n@brief      Set whether allow more than one root existing …\n@brief      Return the number of packets could be accepted …\n@brief      Connect to current parent\n@brief      Mesh de-initialization\n@brief      Delete group ID addresses\n@brief      Disable mesh Power Save function\n@brief      Disconnect from current parent\n@brief      Enable mesh Power Save function\n@brief      Enable network Fixed Root Setting - Enabling …\n@brief      Flush scan result\n@brief      Flush upstream packets pending in to_parent …\n@brief      Get device duty cycle and type\n@brief      Get announce interval\n@brief      Get mesh softAP associate expired time\n@brief      Get mesh softAP authentication mode\n@brief      Get mesh max connection configuration\n@brief      Get attempts for mesh self-organized networking\n@brief      Get mesh softAP beacon interval\n@brief      Get mesh network capacity\n@brief      Get mesh stack configuration\n@brief      Get group ID addresses\n@brief      Get the number of group ID addresses\n@brief      Get mesh network ID\n@brief      Get mesh IE crypto key\n@brief      Get current layer value over the mesh network\n@brief      Get max layer value\n@brief      Get the network duty cycle, duration, type and …\n@brief      Get non-mesh max connection configuration\n@brief      Get the parent BSSID\n@brief      Get passive scan time\n@brief      Get delay time before network starts root …\n@brief      Get router configuration\n@brief      Get the router BSSID\n@brief      Get routing table of this device’s …\n@brief      Get the number of devices in this device’s …\n@brief      Get RSSI threshold of current parent\n@brief      Get the running active duty cycle - The …\n@brief      Return the number of packets available in the …\n@brief      Return whether enable self-organized …\n@brief      Get nodes in the subnet of a specific child\n@brief      Get the number of nodes in the subnet of a …\n@brief      Get parameters for parent switch\n@brief      Get mesh topology\n@brief      Get total number of devices in current network …\n@brief      Get the TSF time\n@brief      Return the number of packets pending in the …\n@brief      Get device type over mesh network\n@brief      Get vote percentage threshold for approval of …\n@brief      Get queue size\n@brief      Check whether the device is in active state - …\n@brief      Check whether the specified group address is …\n@brief      Check whether the mesh Power Save function is …\n@brief      Return whether the device is the root node of …\n@brief      Check whether allow more than one root to …\n@brief      Check whether network Fixed Root Setting is …\n@brief      Post the toDS state to the mesh stack\n@brief      Print the number of rxQ waiting\n@brief      Enable mesh print scan result\n@brief      Print the number of txQ waiting\n@brief Mesh power save duties\n@brief      Duty signaling\n@brief      Get the running duties of device, parent and …\n@brief      Receive a packet targeted to self over the …\n@brief      Receive a packet targeted to external IP …\n@brief      Get mesh networking IE length of one AP\n@brief      Get AP record\n@brief      Send a packet over the mesh network - Send a …\n@brief      Set blocking time of esp_mesh_send()\n@brief      Enable the minimum rate to 6 Mbps\n@brief      Set the device duty cycle and type - The range …\n@brief      Set announce interval - The default short …\n@brief      Set mesh softAP associate expired time …\n@brief      Set mesh softAP authentication mode\n@brief      Set mesh max connection value - Set mesh …\n@brief      Set mesh softAP password\n@brief     Set attempts for mesh self-organized networking\n@brief      Set mesh network capacity (max:1000, …\n@brief      Set mesh stack configuration - Use …\n@brief      Set group ID addresses\n@brief      Set mesh network ID\n@brief      Set mesh IE crypto functions\n@brief      Set mesh IE crypto key\n@brief      Set network max layer value - for tree …\n@brief      Set the network duty cycle, duration and rule …\n@brief      Set a specified parent for the device\n@brief      Set passive scan time\n@brief      Set delay time before starting root healing\n@brief      Get router configuration\n@brief      Set RSSI threshold of current parent - The …\n@brief      Enable/disable self-organized networking - …\n@brief      Set parameters for parent switch\n@brief      Set mesh topology. The default value is …\n@brief      Designate device type over the mesh network - …\n@brief      Set vote percentage threshold for approval of …\n@brief      Set the number of RX queue for the node, the …\n@brief      Start mesh - Initialize mesh IE. - Start mesh …\n@brief      Stop mesh - Deinitialize mesh IE. - Disconnect …\n@brief      Cause the root device to add Channel Switch …\n@brief Mesh topology\n&lt; chain topology\n&lt; tree topology\n@brief      Cause the root device to give up (waive) its …\n@brief Lock access to RSA Accelerator (MPI/bignum …\n@brief Unlock access to RSA Accelerator (MPI/bignum …\n<em>MQTT</em> client configuration structure\nBroker related configuration\nBroker address\nBroker identity verification\nClient buffer size configuration\nClient related credentials for authentication.\nClient authentication\nNetwork related configuration\nClient outbox configuration options.\n<em>MQTT</em> Session related configuration\nLast Will and Testament message configuration.\nClient task configuration\n@brief Destroys the client handle\n@brief This api is typically used to force disconnection …\n@brief Enqueue a message to the outbox, to be sent later. …\n@brief Get outbox size\n@brief Creates <em>MQTT</em> client handle based on the …\n@brief Client to send a publish message to the broker\n@brief This api is typically used to force reconnection …\n@brief Registers <em>MQTT</em> event\n@brief Sets <em>MQTT</em> connection URI. This API is usually used …\n@brief Starts <em>MQTT</em> client with already created client …\n@brief Stops <em>MQTT</em> client tasks\n@brief Subscribe the client to a list of defined topics …\n@brief Subscribe the client to defined topic with defined …\n@brief Unregisters mqtt event\n@brief Unsubscribe the client from defined topic\n<em>MQTT</em> connection error codes propagated via ERROR event\n&lt; Connection accepted\n&lt; <em>MQTT</em> connection refused reason: Wrong user\n&lt; <em>MQTT</em> connection refused reason: ID rejected\n&lt; <em>MQTT</em> connection refused reason: Wrong username or …\n&lt; <em>MQTT</em> connection refused reason: Wrong protocol\n&lt; <em>MQTT</em> connection refused reason: Server unavailable\n@brief Dispatch user event to the mqtt internal event loop\n@brief <em>MQTT</em> error code structure to be passed as a …\n@brief <em>MQTT</em> error code structure to be passed as a …\n<em>MQTT</em> connection error codes propagated via ERROR event\n@brief <em>MQTT</em> event types.\n&lt; The event occurs before connecting\n&lt; connected event, additional context: session_present flag\n&lt; data event, additional context:\n&lt; Notification on delete of one message from the internal …\n&lt; disconnected event\n&lt; published event, additional context:  msg_id\n&lt; subscribed event, additional context:\n&lt; unsubscribed event, additional context:  msg_id\n&lt; Custom event used to queue tasks into mqtt event handler …\n<em>MQTT</em> event configuration structure\n<em>MQTT</em> protocol version used for connection\n@brief Set configuration structure, typically used when …\nTopic definition struct\n&lt; <em>MQTT</em> over SSL, using scheme: <code>MQTTS</code>\n&lt; <em>MQTT</em> over TCP, using scheme: <code>MQTT</code>\n&lt; <em>MQTT</em> over Websocket, using scheme:: <code>ws</code>\n&lt; <em>MQTT</em> over Websocket Secure, using scheme: <code>wss</code>\n@brief      End NAN Datapath that is active\n@brief      Send Datapath Request to the Publisher with …\n@brief      Send Datapath Response to accept or reject the …\n@brief      Start Publishing a service in the NAN cluster\n@brief      Send Follow-up to the Publisher with matching …\n@brief      Subscribe for a service within the NAN cluster\n&lt; Pointer to corresponding esp-netif object\n&lt; Pointer to corresponding esp-netif object\n&lt; Pointer to the associated netif handle\n@brief Default building block for network interface action …\n@brief Default building block for network interface action …\n@brief Default building block for network interface action …\n@brief Default building block for network interface action …\n@brief Default building block for network interface action …\n@brief Default building block for network interface action …\n@brief Default building block for network interface action …\n@brief Default building block for network interface action …\n@brief Default building block for network interface action …\n@brief   Attaches esp_netif instance to the io driver …\n@brief Attaches wifi soft AP interface to supplied netif\n@brief Attaches wifi station interface to supplied netif\n@brief  TCPIP thread safe callback used with …\n@brief  Generic esp_netif configuration\n@brief  Generic esp_netif configuration\n@brief Creates default WIFI AP. In case of any init error …\n@brief Creates default STA and AP network interfaces for …\n@brief Creates default WIFI NAN. In case of any init error …\n@brief Creates default WIFI STA. In case of any init error …\n@brief  Create interface link-local IPv6 address\n@brief Creates esp_netif WiFi object based on the custom …\n@brief  Deinitialize the esp-netif component (and the …\n@brief   Destroys the esp_netif object\n@brief Destroys default WIFI netif created with …\n@brief Supported options for DHCP client or DHCP server\n&lt; Domain name server\n&lt; Request IP address lease time\n&lt; Request IP address retry counter\n&lt; Request specific IP address\n&lt; Solicitation router address\n&lt; Network mask\n&lt; Vendor Class Identifier of a DHCP client\n&lt; Vendor Specific Information of a DHCP server\n@brief Mode for DHCP client or DHCP server option functions\n&lt; Get option\n&lt; Set option\n@brief Status of DHCP client or DHCP server\n&lt; DHCP client/server is in initial state (not yet started)\n&lt; DHCP client/server has been started\n&lt; DHCP client/server has been stopped\n@brief  Get DHCP client status\n@brief  Set or Get DHCP client option\n@brief Start DHCP client (only if enabled in interface …\n@brief  Stop DHCP client (only if enabled in interface …\n@brief  Populate IP addresses of clients connected to DHCP …\n@brief  Get DHCP Server status\n@brief  Set or Get DHCP server option\n@brief  Start DHCP server (only if enabled in interface …\n@brief  Stop DHCP server (only if enabled in interface …\n@brief DNS server info\n@brief Type of DNS server\n&lt; DNS backup server address (Wi-Fi STA and Ethernet only)\n&lt; DNS fallback server address (Wi-Fi STA and Ethernet only)\n&lt; DNS main server address\n@brief ESP-netif driver base handle\n@brief ESP-netif driver base handle\n@brief  Specific IO driver configuration\n@brief  Specific IO driver configuration\n@brief Return a netif pointer for the first interface that …\n@brief Predicate callback for esp_netif_find_if() used to …\n@brief  Get all IPv6 addresses of the specified interface\n@brief Getter function of the default netif\n@brief Returns configured interface type for this …\n@brief  Get DNS Server information\n@brief Returns configured event for this esp-netif …\n@brief Returns configured flags for this interface\n@brief Searches over a list of created objects to find an …\n@brief  Get interface hostname.\n@brief Returns configured interface key for this esp-netif …\n@brief Gets media driver handle for this esp-netif instance\n@brief  Get interface global IPv6 address\n@brief  Get interface link-local IPv6 address\n@brief  Get interface’s IP address information\n@brief Get the mac address for the interface instance\n@brief  Get net interface index from network stack …\n@brief  Get net interface name from network stack …\n@brief Returns number of registered esp_netif objects\n@brief  Get interface’s old IP information\n@brief Returns configured routing priority number\n@brief ESP-netif inherent config parameters\n@brief ESP-netif inherent config parameters\n@brief  Initialize the underlying TCP/IP stack\n@brief  IO driver handle type\n@brief  Get the IPv6 address type\n@brief IPV6 IP address information\nEvent structure for IP_EVENT_STA_GOT_IP, …\n@brief  Test if supplied interface is up or down\n@brief  Cause the TCP/IP stack to join a IPv6 multicast …\n@brief  Cause the TCP/IP stack to leave a IPv6 multicast …\n@brief  Disable NAPT on an interface.\n@brief  Enable NAPT on an interface\n@brief free the netstack buffer\n@brief increase the reference counter of net stack buffer\n@brief  Specific L3 network stack configuration\n@brief   Creates an instance of new esp-netif object based …\n@brief Iterates over list of interfaces. Returns first …\n@brief Iterates over list of interfaces without list …\n@brief Type of esp_netif_object server\n@brief DHCP client’s addr info (pair of MAC and IP …\n@brief  Passes the raw packets from communication media to …\n@brief  ESP-NETIF Receive function type\n@brief Manual configuration of the default netif\n@brief  Set DNS Server information\n@brief   Configures driver related options of esp_netif …\n@brief  Set the hostname of an interface\n@brief Sets IPv4 address to the specified octets\n@brief  Set interface’s IP address information\n@brief Set the mac address for the interface instance\n@brief  Set interface old IP information\n@brief Deinitialize esp_netif SNTP module\n@brief Initialize SNTP with supplied config struct @param …\n@brief Start SNTP service if it wasn’t started during …\n@brief Wait for time sync event @param tout Specified …\n@brief Converts Ascii internet IPv4 address into …\n@brief Converts Ascii internet IPv6 address into …\n@brief Utility to execute the supplied callback in TCP/IP …\nFunction which sets up newlib in ROM for use with ESP-IDF\nPostponed _GLOBAL_REENT stdio FPs initialization.\nInitialize newlib static locks\nPanic with an error-specific message if <code>err</code> is not <code>ESP_OK</code>.\n@brief     Add a peer to peer list\n@brief     De-initialize ESPNOW function\n@brief     Delete a peer from peer list\n@brief     Fetch a peer from peer list. Only return the …\n@brief     Get a peer whose MAC address matches peer_addr …\n@brief     Get the number of peers\n@brief     Get the version of ESPNOW\n@brief     Initialize ESPNOW function\n@brief     Peer exists or not\n@brief     Modify a peer\n@brief ESPNOW peer information parameters.\n@brief ESPNOW peer information parameters.\n@brief Number of ESPNOW peers which exist currently.\n@brief Number of ESPNOW peers which exist currently.\n@brief ESPNOW rate config\n@brief ESPNOW rate config\n@brief     Callback function of receiving ESPNOW data …\n@brief ESPNOW packet information\n@brief ESPNOW packet information\n@brief     Register callback function of receiving ESPNOW …\n@brief     Register callback function of sending ESPNOW …\n@brief     Send ESPNOW data\n@brief     Callback function of sending ESPNOW data @param …\n@brief Status of sending ESPNOW data .\n&lt; Send ESPNOW data fail\n&lt; Send ESPNOW data successfully\n@brief      Set ESPNOW rate config for each peer\n@brief     Set the primary master key\n@brief     Set wake window for esp_now to wake up in …\n@brief     Unregister callback function of receiving …\n@brief     Unregister callback function of sending ESPNOW …\n@brief One-Key CBC MAC (OMAC1) hash with AES-128 callback …\n@brief Abort OTA update, free the handle and memory …\n@brief   Commence an OTA update writing to the specified …\n@brief Checks applications on the slots which can be …\n@brief Finish OTA update and validate newly written app …\n@brief Erase previous boot app partition and corresponding …\n@brief   Return esp_app_desc structure. This structure …\n@brief   Fill the provided buffer with SHA256 of the ELF …\n@brief Returns number of ota partitions provided in …\n@brief Get partition info of currently configured boot app\n@brief Returns the description structure of the bootloader.\n@brief Returns last partition with invalid state …\n@brief Return the next OTA app partition which should be …\n@brief Returns esp_app_desc structure for app partition. …\n@brief Get partition info of currently running app\n@brief Returns state for given partition.\n@brief Opaque handle for an application OTA update\nOTA_DATA states for checking operability of the app.\n&lt; App could not confirm the workable or non-workable. In …\n&lt; App was confirmed as non-workable. This app will not …\n&lt; Monitor the first boot. In bootloader this state is …\n&lt; First boot for this app was. If while the second boot …\n&lt; Undefined. App can boot and work without limits.\n&lt; App was confirmed as workable. App can boot and work …\n@brief This function is called to roll back to the …\n@brief This function is called to indicate that the …\n@brief Configure OTA data for a new boot partition\n@brief   Write OTA update data to partition\n@brief   Write OTA update data to partition at an offset\n@brief Check for the identity of two partitions by SHA-256 …\n@brief Deregister the partition previously registered …\n@brief Erase part of the partition\n@brief Find partition based on one or more parameters\n@brief Find first partition based on one or more parameters\n@brief Get esp_partition_t structure for given partition\n@brief Get SHA-256 digest for required partition.\nCheck whether the region on the main flash is not …\n@brief Release partition iterator\n@brief Opaque partition iterator type\nCheck whether the region on the main flash is safe to …\n@brief Configure MMU to map partition into data memory\n@brief Opaque handle for memory region obtained from …\n@brief Enumeration which specifies memory space requested …\n&lt; map to data memory (Vaddr0), allows byte-aligned access, …\n&lt; map to instruction memory (Vaddr1-3), allows only …\n@brief Release region previously obtained using …\n@brief Move partition iterator to the next partition found\n@brief Read data from the partition\n@brief Read data from the partition without any …\n@brief Register a partition on an external flash chip\n@brief Partition subtype\n!&lt; Used to search for partitions with any subtype\n!&lt; Factory application partition\n!&lt; OTA partition 0\n!&lt; OTA partition 1\n!&lt; OTA partition 10\n!&lt; OTA partition 11\n!&lt; OTA partition 12\n!&lt; OTA partition 13\n!&lt; OTA partition 14\n!&lt; OTA partition 15\n!&lt; OTA partition 2\n!&lt; OTA partition 3\n!&lt; OTA partition 4\n!&lt; OTA partition 5\n!&lt; OTA partition 6\n!&lt; OTA partition 7\n!&lt; OTA partition 8\n!&lt; OTA partition 9\n!&lt; Max subtype of OTA partition\n!&lt; Base for OTA partition subtypes\n!&lt; Test application partition\n!&lt; COREDUMP partition\n!&lt; Partition for emulate eFuse bits\n!&lt; ESPHTTPD partition\n!&lt; FAT partition\n!&lt; LITTLEFS partition\n!&lt; NVS partition\n!&lt; Partition for NVS keys\n!&lt; OTA selection partition\n!&lt; PHY init data partition\n!&lt; SPIFFS partition\n!&lt; Undefined (or unspecified) data partition\n@brief partition information structure\n@brief Partition type\n!&lt; Used to search for partitions with any type\n!&lt; Application partition type\n!&lt; Data partition type\n@brief Unload partitions and free space allocated by them\n@brief Verify partition data\n@brief Write data to the partition\n@brief Write data to the partition without any …\n@brief SHA1-based key derivation function (PBKDF2) …\n@brief Type of “ping” callback functions\n@brief Type of “ping” configuration\n@brief Delete a ping session\n@brief Get runtime profile of ping session\n@brief Type of “ping” session handle\n@brief Create a ping session\n@brief Profile of ping session\n&lt; Elapsed time of the whole ping session\n&lt; IP address of replied target\n&lt; Number of reply packets received\n&lt; Number of request packets sent out\n&lt; Sequence number of a ping procedure\n&lt; Size of received packet\n&lt; Elapsed time between request and reply packet\n&lt; Type of service of a ping procedure\n&lt; Time to live of a ping procedure\n@brief Start the ping session\n@brief Stop the ping session\nbackward compatibility newer chips no longer require this …\n@brief Power management config\n@brief Power management config\n@brief Power management config\n@brief Power management config\n@brief Power management config\n@brief Power management config\n@brief Set implementation-specific power management …\nDump the list of all locks to stderr\n@brief Get implementation-specific power management …\n@brief Take a power management lock\n@brief Initialize a lock handle for certain power …\n@brief Delete a lock created using esp_pm_lock\n@brief Opaque handle to the power management lock\n@brief Release the lock taken using esp_pm_lock_acquire.\n@brief Power management constraints\nRequire APB frequency to be at the maximum value supported …\nRequire CPU frequency to be at the maximum value set via …\nPrevent the system from going into light sleep. Argument …\n@brief Bluetooth TX power level(index), it’s just a …\n&lt; Indicates an invalid value\n&lt; Corresponding to   0dbm\n&lt; Corresponding to -12dbm\n&lt; Corresponding to -15dbm\n&lt; Corresponding to -18dbm\n&lt; Corresponding to -21dbm\n&lt; Corresponding to -24dbm\n&lt; Corresponding to  -3dbm\n&lt; Corresponding to  -6dbm\n&lt; Corresponding to  -9dbm\n&lt; Corresponding to  +12dbm\n&lt; Corresponding to  +15dbm\n&lt; Corresponding to  +18dbm\n&lt; Corresponding to  +21dbm\n&lt; Corresponding to  +3dbm\n&lt; Corresponding to  +6dbm\n&lt; Corresponding to  +9dbm\n@brief Get the available size of the attached PSRAM chip\n@brief Initialize PSRAM interface/hardware.\n@brief If PSRAM has been initialized\npthread configuration structure that influences pthread …\n@brief Get current pthread creation configuration\n@brief Creates a default pthread configuration based on …\n@brief Initialize pthread library\n@brief Configure parameters for creating pthread\n@brief  Get one random 32-bit word from hardware RNG\n@brief XOR RC4 stream callback function to given data with …\n@brief  Read base MAC address and set MAC address of the …\nClean up some of lazily allocated buffers in REENT …\nReplacement for newlib’s _REENT_INIT_PTR and __sinit.\n@brief  Register a callback to the idle hook of the core …\n@brief  Register a callback to be called from the …\n@brief  Register a callback to be called from the calling …\n@brief  Register a callback to be called from the …\n@brief  Register shutdown handler\n@brief  Get reason of last reset @return See description …\n@brief Reset reasons\n!&lt; Brownout reset (software or hardware)\n!&lt; Reset due to CPU lock up\n!&lt; Reset after exiting deep sleep mode\n!&lt; Reset due to efuse error\n!&lt; Reset by external pin (not applicable for ESP32)\n!&lt; Reset (software or hardware) due to interrupt watchdog\n!&lt; Reset by JTAG\n!&lt; Software reset due to exception/panic\n!&lt; Reset due to power-on event\n!&lt; Reset due to power glitch detected\n!&lt; Reset over SDIO\n!&lt; Software reset via esp_restart\n!&lt; Reset due to task watchdog\n!&lt; Reset reason can not be determined\n!&lt; Reset by USB peripheral\n!&lt; Reset due to other watchdogs\n@brief  Restart PRO and APP CPUs.\nConvert an <code>esp_err_t</code> into a <code>Result&lt;T, EspError&gt;</code>.\n@brief CRC16 value in big endian.\n@brief CRC16 value in little endian.\n@brief CRC32 value in big endian.\n@brief CRC32 value in little endian.\n@brief CRC8 value in big endian.\n@brief CRC8 value in little endian.\n@brief Pauses execution for us microseconds\n@brief Get the real CPU ticks per us\n@brief Get reset reason of CPU\n@brief Combine a GPIO input with a peripheral signal, …\n@brief Combine a peripheral signal which tagged as output …\n@brief Enable internal pull up, and disable internal pull …\n@brief Configure IO Pad as General Purpose IO, so that it …\n@brief Set IO Pad current drive capability.\n@brief Unhold the IO Pad. @note When the Pad is set to …\n@brief esp_rom_printf can print message to different …\n@brief Install UART1 as the default console channel, …\n@brief Extract the MD5 result, and erase the context\n@brief Initialize the MD5 context\n@brief Running MD5 algorithm over input data\n@brief Print formated string to console device @note float …\n@brief Route peripheral interrupt sources to CPU’s …\n@brief Set the real CPU tick rate\n@brief Software Reset cpu core.\n@brief Software Reset digital core include RTC.\n@brief  Check RRM capability of connected AP\n@brief  Send Radio measurement neighbor report request to …\n@brief Pointers to the trusted key digests.\n@brief Read key digests from efuse. Any revoked/missing …\n@brief If an OCD is connected over JTAG. set breakpoint 0 …\n@brief Install a new stub at runtime to run on wake from …\n@brief Set wake stub entry to default <code>esp_wake_stub_entry</code>\nUpdate current microsecond time from RTC\n@brief SHA1-based Pseudo-Random Function (PRF) (IEEE …\n@brief SHA-1 hash callback function for data vector\n@brief The SHA256 PRF callback function used by esp_wifi.\n@brief SHA256 hash callback function for data vector …\n@brief Configure to isolate all GPIO pins in sleep state\n@brief CPU Power down low-level deinitialize, disable CPU …\n@brief CPU Power down low-level initialize, enable CPU …\n@brief CPU Power down de-initialize\n@brief CPU Power down initialize\n@brief Disable wakeup by bluetooth @return - ESP_OK on …\n@brief Disable wakeup source\n@brief Disable beacon wakeup by WiFi MAC @return - ESP_OK …\n@brief Disable wakeup by WiFi MAC @return - ESP_OK on …\n@brief Enable wakeup by bluetooth @return - ESP_OK on …\n@brief Enable or disable GPIO pins status switching …\n@brief Enable wakeup from light sleep using GPIOs\n@brief Enable wakeup by timer @param time_in_us  time …\n@brief Enable wakeup from light sleep using UART\n@brief Enable beacon wakeup by WiFi MAC, it will wake up …\n@brief Enable wakeup by WiFi MAC @return - ESP_OK on …\n@brief Get the bit mask of GPIOs which caused wakeup (ext1)\n@brief Get the bit mask of GPIOs which caused wakeup (gpio)\n@brief Get the wakeup source which caused wakeup from sleep\n@brief Returns true if a GPIO number is valid for use as …\n@brief Sleep mode\n!&lt; deep sleep mode\n!&lt; light sleep mode\n@brief Set power down mode for an RTC power domain in …\n@brief Power domains which can be powered down in sleep …\n!&lt; CPU core\n!&lt; Number of domains\n!&lt; Internal Fast oscillator\n!&lt; VDD_SDIO\n!&lt; XTAL oscillator\n@brief Power down options\n!&lt; Keep power domain enabled in sleep mode, if it is …\n!&lt; Power down the power domain in sleep mode\n!&lt; Keep power domain enabled during sleep mode\n@brief Sleep wakeup cause\n!&lt; Not a wakeup cause, used to disable all wakeup sources …\n!&lt; Wakeup caused by BT (light sleep only)\n!&lt; Wakeup caused by COCPU int\n!&lt; Wakeup caused by COCPU crash\n!&lt; Wakeup caused by external signal using RTC_IO\n!&lt; Wakeup caused by external signal using RTC_CNTL\n!&lt; Wakeup caused by GPIO (light sleep only on ESP32, S2 …\n!&lt; Wakeup caused by timer\n!&lt; Wakeup caused by touchpad\n!&lt; Wakeup caused by UART (light sleep only)\n!&lt; Wakeup caused by ULP program\n!&lt; In case of deep sleep, reset was not caused by exit …\n!&lt; Wakeup caused by WIFI (light sleep only)\n@brief Sleep wakeup cause\n@brief     Set mode of SmartConfig. default normal mode.\n@brief     Get reserved data of ESPTouch v2.\n@brief  Get the version of SmartConfig.\n@brief     Start SmartConfig, config ESP device to connect …\n@brief     Stop SmartConfig, free the buffer taken by …\n@brief     Set protocol type of SmartConfig.\n@brief     Start SmartConfig, config ESP device to connect …\n@brief     Stop SmartConfig, free the buffer taken by …\n@brief SNTP configuration struct\n@brief SNTP configuration struct\n@brief Checks if sntp is enabled @return true if sntp …\n@brief Get SNTP server IP @param idx Index of the server …\n@brief Gets SNTP server name @param idx Index of the server\n@brief Init and start SNTP service\nSNTP operating modes per lwip SNTP module\n@brief Sets SNTP operating mode. The mode has to be set …\n@brief Sets SNTP server address\n@brief Sets SNTP hostname @param idx Index of the server …\n@brief Stops SNTP service\n@brief Time sync notification function\nCheck integrity of SPIFFS\nFormat the SPIFFS partition\n@brief Perform garbage collection in SPIFFS partition\nGet information for SPIFFS\nCheck if SPIFFS is mounted\n@brief     Supplicant deinitialization\n@brief Disable or enable the caching of Pairwise Master …\n@brief     Supplicant initialization\n@brief      Convert user input colon separated MAC Address …\n@brief Trigger a software abort\n@brief Subscribe a task to the Task Watchdog Timer (TWDT)\n@brief Subscribe a user to the Task Watchdog Timer (TWDT)\n@brief Task Watchdog Timer (TWDT) configuration structure\n@brief   Deinitialize the Task Watchdog Timer (TWDT)\n@brief Unsubscribes a task from the Task Watchdog Timer …\n@brief Unsubscribes a user from the Task Watchdog Timer …\n@brief  Initialize the Task Watchdog Timer (TWDT)\n@brief User ISR callback placeholder\n@brief Prints or retrieves information about tasks/users …\n@brief Reconfigure the Task Watchdog Timer (TWDT)\n@brief Reset the Task Watchdog Timer (TWDT) on behalf of …\n@brief Reset the Task Watchdog Timer (TWDT) on behalf of a …\n@brief Query whether a task is subscribed to the Task …\n@brief Task Watchdog Timer (TWDT) user handle\n@brief Error types for TCP connection issues not covered …\n@brief Timer callback function type @param arg pointer to …\n@brief Create an esp_timer instance\n@brief Timer configuration passed to esp_timer_create\n@brief De-initialize esp_timer library\n@brief Delete an esp_timer instance\n@brief Method for dispatching timer callback\n!&lt; Count of the methods for dispatching timer callback\n!&lt; Callback is called from timer task\n@brief Dump the list of timers to a stream\n@brief Minimal initialization of esp_timer\n@brief Get the expiry time of a one-shot timer\n@brief Get the timestamp when the next timeout is expected …\n@brief Get the timestamp when the next timeout is expected …\n@brief Get the period of a timer\n@brief Get time in microseconds since boot @return number …\n@brief Opaque type representing a single esp_timer\n@brief Initialize esp_timer library\n@brief Returns status of a timer, active or not\n@brief Get the ETM event handle of esp_timer underlying …\n@brief Restart a currently running timer\n@brief Start one-shot timer\n@brief Start a periodic timer\n@brief Stop the timer\n&lt; IPv4 address family.\n&lt; IPv6 address family.\n&lt; Unspecified address family.\n&lt; tls flags reported from underlying tls stack during …\n&lt; tls flags reported from underlying tls stack during …\n@brief      ESP-TLS configuration parameters\n@brief      ESP-TLS configuration parameters\n@brief      Close the TLS/SSL connection and free any …\n@brief      Create a new blocking TLS/SSL connection with …\n@brief      Create a new non-blocking TLS/SSL connection …\n@brief      Create a new blocking TLS/SSL connection with …\n@brief      Create a new non-blocking TLS/SSL connection\n@brief      Create a new blocking TLS/SSL connection\n@brief      Read from specified tls connection into the …\n@brief ESP-TLS Connection State\n@brief ESP-TLS Connection State\n@brief      Write from buffer ‘data’ into specified …\n&lt; esp_tls error code from last esp_tls failed api\n&lt; esp_tls error code from last esp_tls failed api\nDefinition of different types/sources of error codes …\n&lt; ESP-IDF error type – esp_err_t\n&lt; Last err type – invalid entry\n&lt; Error code from mbedTLS library\n&lt; Certificate flags defined in mbedTLS\n&lt; System error – errno\n&lt; Error code from wolfSSL library\n&lt; Certificate flags defined in wolfSSL\n&lt; last certification verification flags\n&lt; last certification verification flags\n@brief      Free the global CA store currently being used.\n@brief      Returns the last error captured in esp_tls of …\n@brief      Returns last error in esp_tls with detailed …\n@brief      Return the number of application data bytes …\n@brief Get supported TLS ciphersuites list.\n@brief       Returns the connection socket file descriptor …\n@brief       Gets the connection state for the esp_tls …\n@brief       Returns the ESP-TLS error_handle\n@brief      Get the pointer to the global CA store …\n@brief       Returns the ssl context\n@brief      Create TLS connection\n@brief      Create a global CA store, initially empty.\n@brief Error structure containing relevant errors in case …\n@brief Error structure containing relevant errors in case …\n&lt; last esp_err code reported from esp-tls component\n&lt; last esp_err code reported from esp-tls component\n@brief Creates a plain TCP connection, returning a valid …\n@brief       Sets the connection socket file descriptor …\n@brief       Sets the connection state for the esp_tls …\n@brief      Set the global CA store with the buffer …\n&lt; tls specific error code reported from underlying tls …\n&lt; tls specific error code reported from underlying tls …\n&lt; Enable ESPTouch v2 crypt.\n&lt; ESPTouch v2 crypt key, len should be 16.\n@brief      Transport close\n@brief      Transport connection function, to make a …\n@brief      Non-blocking transport connection function, to …\n@brief      Cleanup and free memory the transport\n@brief      Get user data context of this transport\n@brief      Get default port number used by this transport\n@brief      Get and clear last captured socket errno\n@brief      Returns esp_tls error handle. Warning: The …\n@brief      Get transport handle of underlying protocol …\n@brief      Initialize a transport handle object\n@brief Keep alive parameters structure\n@brief Keep alive parameters structure\n@brief      Add a transport to the list, and define a …\n@brief      This function will remove all transport from …\n@brief      Cleanup and free all transports, include …\n@brief      Get the transport by scheme, which has been …\n@brief      Create transport list\n@brief      Poll the transport until readable or timeout\n@brief      Poll the transport until writeable or timeout\n@brief      Transport read function\n@brief      Set transport functions for the transport …\n@brief      Set the user context data for this transport\n@brief      Set default port number that can be used by …\n@brief      Set transport functions for the transport …\n@brief      Set parent transport function to the handle\n&lt; errno from the underlying socket\n&lt; errno from the underlying socket\n@brief      Enable the use of certification bundle for …\n@brief      Enable global CA store for SSL connection\n@brief       Create new SSL transport, the transport …\n@brief      Set the list of supported application …\n@brief      Set SSL certificate data (as PEM format). Note …\n@brief      Set SSL certificate data (as DER format). Note …\n@brief      Set SSL client certificate data for mutual …\n@brief      Set SSL client certificate data for mutual …\n@brief      Set SSL client key data for mutual …\n@brief      Set SSL client key data for mutual …\n@brief      Set SSL client key password if the key is …\n@brief      Set the server certificate’s common name …\n@brief      Set the ds_data handle in ssl context.(used …\n@brief      Set name of interface that socket can be …\n@brief      Set keep-alive status in current ssl context\n@brief      Set PSK key and hint for PSK server/client …\n@brief      Set TLS protocol version for ESP-TLS connection\n@brief      Skip validation of certificate’s common name …\n@brief      Set the ssl context to use secure element …\n@brief      Create TCP transport, the transport handle …\n@brief      Set name of interface that socket can be …\n@brief      Set TCP keep-alive configuration\n@brief Translates the TCP transport error codes to …\n@brief      Transport write function\nWS transport configuration structure\n@brief               Returns websocket fin flag for last …\n@brief               Returns websocket op-code for last …\n@brief               Returns payload length of the last …\n@brief               Returns the HTTP status code of the …\n@brief      Create web socket transport\n@brief               Polls the active connection for …\n@brief               Sends websocket raw message with …\n@brief               Set websocket authorization headers\n@brief               Set websocket transport parameters\n@brief               Set websocket additional headers\n@brief       Set HTTP path to update protocol to websocket\n@brief               Set websocket sub protocol header\n@brief               Set websocket user-agent header\n@brief  Unregister shutdown handler\n@brief     Function signature for received Vendor-Specific …\n@brief add uart/usb_serial_jtag/usb_otg_acmcdc virtual …\n@brief add /dev/cdcacm virtual filesystem driver\n@brief Set the line endings expected to be received\n@brief Set the line endings to sent\n@brief Set the line endings expected to be received on …\n@brief Set the line endings to sent to specified UART\n@brief add /dev/uart virtual filesystem driver\n@brief Set the line endings expected to be received on UART\n@brief Set the line endings to sent to UART\n@brief set VFS to use UART driver for reading and writing …\n@brief set VFS to use simple functions for reading and …\n@brief add /dev/usbserjtag virtual filesystem driver\n@brief Set the line endings expected to be received\n@brief Set the line endings to sent\n@brief Eventfd vfs initialization settings\n@brief  Registers the event vfs.\n@brief  Unregisters the event vfs.\n@brief Get information for FATFS partition\n@brief Configuration arguments for esp_vfs_fat_sdmmc_mount …\n@deprecated Please use <code>esp_vfs_fat_spiflash_mount_ro</code> …\n@deprecated Please use <code>esp_vfs_fat_spiflash_unmount_ro</code> …\n@brief Register FATFS with VFS component\n@brief Format FAT filesystem\n@brief Unmount an SD card from the FAT filesystem and …\n@brief Convenience function to get FAT filesystem on SD …\n@brief Configuration arguments for esp_vfs_fat_sdmmc_mount …\n@brief Unmount FAT filesystem and release resources …\n@brief Convenience function to get FAT filesystem on SD …\n@brief Format FAT filesystem\n@cond <em>/ /</em>* @deprecated Please use …\n@brief Convenience function to initialize read-only FAT …\n@brief Convenience function to initialize FAT filesystem …\n@deprecated Please use <code>esp_vfs_fat_spiflash_unmount_rw_wl</code> …\n@brief Unmount FAT filesystem and release resources …\n@brief Unmount FAT filesystem and release resources …\n@brief Un-register FATFS from VFS\n@brief Implements the VFS layer of POSIX pread()\n@brief Implements the VFS layer of POSIX pwrite()\nRegister a virtual filesystem for given path prefix.\nSpecial function for registering another file descriptor …\nSpecial case function for registering a VFS that uses a …\nSpecial function for registering another file descriptor …\nSpecial case function for registering a VFS that uses a …\n@brief Synchronous I/O multiplexing which implements the …\n@brief VFS semaphore type for select()\n@brief Notification from a VFS driver about a …\n@brief Notification from a VFS driver about a …\n@brief add virtual filesystem semihosting driver\n@brief Un-register semihosting driver from VFS\n@brief Configuration structure for esp_vfs_spiffs_register\nRegister and mount SPIFFS to VFS with given path prefix.\nUnregister and unmount SPIFFS from VFS\n@brief VFS definition structure\nUnregister a virtual filesystem for given path prefix\nSpecial function for unregistering a file descriptor …\nUnregister a virtual filesystem with the given index\n@brief set VFS to use USB-SERIAL-JTAG driver for reading …\n@brief set VFS to use simple functions for reading and …\nThese functions are to be used in newlib syscall table. …\n@brief esp_vhci_host_callback used for vhci call host …\n@brief esp_vhci_host_callback used for vhci call host …\n@brief esp_vhci_host_check_send_available used for check …\n@brief esp_vhci_host_register_callback register the vhci …\n@brief esp_vhci_host_send_packet host send packet to …\n@brief Default stub to run on wake from deep sleep.\n@brief     Send raw ieee80211 data\n@brief     Get AID of STA connected with soft-AP\n@brief     Get STAs associated with soft-AP\n@brief  Disable Wi-Fi SoftAP WPS function and release …\n@brief     Enable Wi-Fi AP WPS function.\n@brief     WPS starts to work.\n@brief   Configure wifi beacon montior default parameters\n@brief bt Wi-Fi power domain power off\n@brief bt Wi-Fi power domain power on\n@brief     Clear AP list found in last scan\n@brief Clears default wifi event handlers for supplied …\n@brief     Currently this API is just an stub API\n@brief      Enable or disable 11b rate of specified …\n@brief      Config 80211 tx rate of specified interface\n@brief      Config ESPNOW rate of specified interface\n@brief     Connect WiFi station to the AP.\n@brief      Set wake interval for connectionless modules …\n@brief Creates wifi driver instance to be used with …\n@brief     deauthenticate all stations or associated id …\n@brief  Deinit WiFi Free all resource allocated in …\n@brief Deinitialize Wi-Fi Driver Free resource for WiFi …\n@brief Destroys wifi driver instance\n@brief      Disable PMF configuration for specified …\n@brief     Disconnect WiFi station from the AP.\n@brief      Request extra reference of Wi-Fi radio. Wi-Fi …\n@brief      Release extra reference of Wi-Fi radio. Wi-Fi …\n@brief      End the ongoing FTM Initiator session\n@brief      Get FTM measurements report copied into a user …\n@brief      Start an FTM Initiator session by sending FTM …\n@brief      Set offset in cm for FTM Responder. An …\n@brief     Get current antenna configuration\n@brief     Get current antenna GPIO configuration\n@brief     Get the bandwidth of specified interface\n@brief     Get the primary/secondary channel of device\n@brief     Get configuration of specified interface\n@brief     get the current country info\n@brief     get the current country code\n@brief     Get mask of WiFi events\n@brief Return mac of specified wifi driver instance\n@brief     Get inactive time of specified interface\n@brief     Get mac of specified interface\n@brief     Get maximum transmiting power after WiFi start\n@brief  Get current operating mode of WiFi\n@brief     Get the promiscuous mode.\n@brief     Get the subtype filter of the control packet in …\n@brief     Get the promiscuous filter.\n@brief     Get the current protocol bitmap of the …\n@brief     Get current WiFi power save type\n@brief      Get the TSF time In Station mode or …\n@brief  Initialize WiFi Allocate resource for WiFi driver, …\n@brief Initialize Wi-Fi Driver Alloc resource for WiFi …\n@brief     Check the MD5 values of the crypto types header …\n@brief     Check the MD5 values of the esp_wifi_he.h in …\n@brief     Check the MD5 values of the esp_wifi.h in IDF …\n@brief  free the rx buffer which allocated by wifi driver\n@brief     Get the user-configured channel info\n@brief     Get current WiFi log info\n@brief     Get the negotiated bandwidth info after WiFi …\n@brief     Get the negotiated channel info after WiFi …\n@brief     A general API to set/get WiFi internal …\n@brief     Check if WiFi TSF is active\n@brief   Set light sleep mode to require WiFi to enable or …\n@brief   Set modem state mode to require WiFi to enable or …\n@brief     Check the MD5 values of the OS adapter header …\n@brief  register the net stack buffer reference increasing …\n@brief     Set the WiFi RX callback\n@brief  enable or disable transmitting WiFi MAC frame with …\n@brief     Set current WiFi log level\n@brief     Set current log module and submodule\n@brief     Set device spp amsdu attributes\n@brief     Notify WIFI driver that the station got ip …\n@brief  transmit the buffer via wifi driver\n@brief  transmit the buffer by reference via wifi driver\n@brief   Update WIFI light sleep default parameters\n@brief     Update WIFI light sleep wake ahead time\n@brief     Update WiFi MAC time\n@brief     De-initialize WAPI function when wpa_supplicant …\n@brief     Initialize WAPI function when wpa_supplicant …\n@brief     Check the MD5 values of the esp_wifi_he_types.h …\n@brief     Check the MD5 values of the esp_wifi_types.h in …\n@brief Return true if the supplied interface instance is …\n@brief Wifi power domain power off\n@brief Wifi power domain power on\n@brief Register interface receive callback function with …\n@brief  Restore WiFi stack persistent settings to default …\n@brief     Get number of APs found in last scan\n@brief      Get one AP record from the scanned AP list.\n@brief     Get AP list found in last scan.\n@brief     Scan all available APs.\n@brief     Stop the scan in process\n@brief     Set antenna configuration\n@brief     Set antenna GPIO configuration\n@brief     Set the bandwidth of specified interface\n@brief     Set primary/secondary channel of device\n@brief     Set the configuration of the STA, AP or NAN\n@brief     configure country info\n@brief     configure country\n@brief Enable or disable CSI\n@brief Set CSI data configuration\n@brief Register the RX callback function of CSI data.\n@brief Sets default wifi event handlers for AP interface\n@brief Sets default wifi event handlers for NAN interface\n@brief Sets default wifi event handlers for STA interface\n@brief      Config dynamic carrier sense\n@brief     Set mask to enable or disable some WiFi events\n@brief     Set the inactive time of the STA or AP\n@brief   Set wifi keep alive time\n@brief     Set MAC address of WiFi station, soft-AP or NAN …\n@brief     Set maximum transmitting power after WiFi start.\n@brief     Set the WiFi operating mode\n@brief     Enable the promiscuous mode.\n@brief Enable subtype filter of the control packet in …\n@brief Enable the promiscuous mode packet type filter.\n@brief Register the RX callback function in the …\n@brief     Set protocol type of specified interface The …\n@brief     Set current WiFi power save type\n@brief      Set RSSI threshold, if average rssi gets lower …\n@brief   Set the delay time for wifi to enter the sleep …\n@brief     Set the WiFi API configuration storage type\n@brief    Register the txDone callback function of type …\n@brief     Set 802.11 Vendor-Specific Information Element\n@brief     Register Vendor-Specific Information Element …\n@brief Disable EAP authentication(WiFi Enterprise) for the …\n@brief Enable EAP authentication(WiFi Enterprise) for the …\n@brief     Get the Association id assigned to STA by AP\n@brief     Get information of AP to which the device is …\n@brief     Get the negotiated phymode after connection.\n@brief      Get the rssi information of AP to which the …\n@brief  Clear CA certificate for PEAP/TTLS method.\n@brief  Clear client certificate and key.\n@brief  Clear identity for PEAP/TTLS method.\n@brief  Clear new password for MSCHAPv2 method..\n@brief  Clear password for PEAP/TTLS method..\n@brief  Clear username for PEAP/TTLS method. @deprecated …\n@brief  Disable wpa2 enterprise authentication.\n@brief  Enable wpa2 enterprise authentication.\n@brief  Get wpa2 enterprise certs time check(disable or …\n@brief  Set CA certificate for PEAP/TTLS method.\n@brief  Set client certificate and key.\n@brief  Set wpa2 enterprise certs time check(disable or …\n@brief  Set Phase 1 parameters for EAP-FAST\n@brief  Set identity for PEAP/TTLS method.\n@brief  Set new password for MSCHAPv2 method..\n@brief  Set client pac file\n@brief  Set password for PEAP/TTLS method..\n@brief  Set wpa2 enterprise ttls phase2 method\n@brief  Set username for PEAP/TTLS method.\n@brief  enable/disable 192 bit suite b certification checks\n@brief  Use default CA cert bundle for server validation\n@brief  Start WiFi according to current configuration If …\n@brief     Dump WiFi statistics\n@brief  Stop WiFi If mode is WIFI_MODE_STA, it stops …\n@brief     Update WiFi TSF tick interval\n@brief  Disable Wi-Fi WPS function and release resource it …\n@brief     Enable Wi-Fi WPS function.\n@brief     Start WPS session.\n@brief  Check bss trasition capability of connected AP\n@brief  Send bss transition query to connected AP\n@brief Structure representing configuration settings for …\n&lt; Maximum encrypt number of peers supported by espnow\n@brief Get interrupt unmask @param none @return uint32_t …\n@brief Disable interrupts from interrupt controller.\n@brief Enable interrupts from interrupt controller.\n@brief Get the current priority of an interrupt\n@brief Get the current type of an interrupt\n@brief Check if the given interrupt is hardware vectored\nSet interrupt priority in the interrupt controller @param …\nSet interrupt priority threshold. Interrupts with priority …\n@brief Set interrupt type\n@brief Set interrupt vectored\n@brief Ethernet Checksum\n&lt; Ethernet checksum calculate by hardware\n&lt; Ethernet checksum calculate by software\n@brief Ethernet interface\n&lt; Media Independent Interface\n&lt; Reduced Media Independent Interface\n@brief DM9051 specific configuration\n@brief Ethernet duplex mode\n&lt; Ethernet is in full duplex\n&lt; Ethernet is in half duplex\n@brief Ethernet event declarations\n&lt; Ethernet got a valid link\n&lt; Ethernet lost a valid link\n&lt; Ethernet driver start\n&lt; Ethernet driver stop\n@brief KSZ8851SNL specific configuration\n@brief Ethernet link status\n&lt; Ethernet link is down\n&lt; Ethernet link is up\n@brief Ethernet MAC Clock Configuration\n@brief Configuration of Ethernet MAC object\n@brief Internal ethernet EMAC’s DMA available burst sizes\n@brief Auto-negotiation controll commands\n@brief Ethernet PHY configuration\n@brief Ethernet speed\n&lt; Ethernet speed is 100Mbps\n&lt; Ethernet speed is 10Mbps\n&lt; Max speed mode (for checking purpose)\n@brief Custom SPI Driver Configuration. This structure …\n@brief W5500 specific configuration\n@brief  CPU do while loop for some time. In FreeRTOS task, …\n@brief  Get apb_freq value, If value not stored in …\n@brief  Get the real CPU ticks per us to the ets. This …\n@brief Get the uart channel of …\n@brief  Get the apb divior by xtal frequency. When any …\n@brief  Get xtal_freq value, If value not stored in …\n@brief  Ets_printf have two output functions： putc1 and …\n@brief  Ets_printf have two output functions： putc1 and …\n@brief  Install putc1 as ets_write_char_uart. In silent …\n@brief  Lock the interrupt to level 2. This function …\n@brief  Unlock the interrupt to level 0. This function …\n@brief  Attach a interrupt handler to a CPU interrupt …\n@brief  Mask the interrupts which show in mask bits. This …\n@addtogroup ets_intr_apis @{\n@brief  Unmask the interrupts which show in mask bits. …\n@brief  Printf the strings to uart or other devices, …\n@brief  Set Pro cpu Entry code, code can be called in PRO …\n@addtogroup ets_apis @{\n@brief  Arm an ets timer, this timer range is 640 us to …\n@brief  Arm an ets timer, this timer range is 640 us to …\n@brief  In FreeRTOS, please call FreeRTOS apis, never call …\n@brief  Disarm an ets timer. In FreeRTOS, please call …\n@brief  Unset timer callback and argument to NULL. In …\n@brief  Init ets timer, this timer range is 640 us to …\n@brief  Set timer callback and argument. In FreeRTOS, …\n@brief  Set the real CPU ticks per us to the ets, so that …\n&lt; The I2C hardware event that I2C callback is called.\n&lt; Event name\n&lt; Timer event\nCallback function to be executed on provisioning events\n&lt; HTTP Event Handle\n&lt; event_id, to know the cause of the event\n&lt; event_id, to know the cause of the event\n&lt; <em>MQTT</em> event type\n&lt; GPTimer ETM event type\n&lt; MCPWM comparator ETM event type\n&lt; extend advertising type\nThis field indicates the type of BLE event that occurred.\n@addtogroup ets_apis @{\n&lt; Gatt client callback param of ESP_GATTC_EXEC_EVT\n&lt; Gatt server callback param of ESP_GATTS_EXEC_WRITE_EVT\n&lt; Execute write flag\n&lt; Expected output clock frequency, unit: Hz\nThe expected length of the salt, in bytes. This may be …\n&lt; Event parameter of …\n&lt; Event parameter of …\n&lt; Event parameter of …\n&lt; Event parameter of ESP_GAP_BLE_EXT_ADV_REPORT_EVT\n&lt; Event parameter of …\n&lt; Event parameter of …\n&lt; Event parameter of ESP_GAP_BLE_EXT_ADV_START_COMPLETE_EVT\n&lt; Event parameter of ESP_GAP_BLE_EXT_ADV_STOP_COMPLETE_EVT\n&lt; External clock source frequency in Hz, only take effect …\n&lt; External clock source frequency in Hz, only take effect …\n&lt; Event parameter of …\n&lt; decoded EXT_CSD (Extended Card Specific Data) register …\nFlag to indicate of an external HTTP Server Handle has …\n&lt; Optional list of extended key usage OIDs.\n&lt; Event parameter of …\n&lt; Event parameter of ESP_GAP_BLE_EXT_SCAN_STOP_COMPLETE_EVT\n&lt; Factory information to be shown in the WPS Information …\n&lt; LEDC fade_end callback function\n&lt; parent selection fail times, if the scan times reach …\nReason for disconnection (valid only when <code>wifi_state</code> is …\n&lt; The HCI reason/error code for when success=FALSE\n&lt; Number of connection retries station will do before …\n&lt; Maximum length of the PAC (Protected Access Credential) …\n&lt; Set to true for binary format PAC, false for ASCII …\n&lt; Enable or disable Fast Provisioning in EAP-FAST (0 = …\n&lt; Which fault causes the operator to brake\n&lt; Which fault as the trigger. Only support GPIO fault\n&lt; fcntl without context pointer\n&lt; fcntl with context pointer\n&lt; Session socket file descriptor\n&lt; Enables additional WiFi features and capabilities\nGet next available drive number\n@brief Get the driver number corresponding to a card\nStructure of pointers to disk IO driver functions.\nRegister or unregister diskio driver for given drive …\nRegister spi flash partition\nRegister SD/MMC diskio driver\nRegister spi flash partition\n@brief Enable/disable SD card status checking\n&lt; Topic filter  to subscribe\n&lt; Topic filter  to subscribe\n&lt; RMT receiver filter enable\n&lt; OR of one or more filter values WIFI_PROMIS_FILTER_*\n&lt; ext adv filter policy\n&lt; ext scan filter policy\n&lt; Configures the filter policy for periodic advertising …\n&lt; RMT filter tick number\n&lt; Final frame: For received frames this field indicates …\n&lt; Final frame: For received frames this field indicates …\n&lt; network found that can join\n&lt; if first then true else false\n&lt; if first then true, else false\n&lt; The duration of the first PWM pulse, in us\n&lt; first four bytes of the CSI data is invalid or not, true …\n&lt; I2S using fixed MCLK output. If use_apll = true and …\n&lt; I2S using fixed MCLK output. If use_apll = true and …\n&lt; flag of networking, indicates the status of the network, …\n&lt; Advertising flag of discovery mode, see …\n&lt; Advertising data flag bit\n&lt; flags that define esp-netif behavior\n&lt; Flags indicating extra details.\n&lt; Flags for this transaction. Set to 0 for now.\n&lt; flags that define esp-netif behavior\n&lt; Abilities of bus to be checked by the driver. Or-ed …\n&lt; Bitwise OR of SPI_DEVICE_* flags\n&lt; Bitwise OR of SPI_TRANS_* flags\n&lt; Flags that specify extra capability for mac driver\n&lt; ESP_VFS_FLAG_CONTEXT_PTR and/or ESP_VFS_FLAG_READONLY_FS …\n&lt; see below\n&lt; flags defining host properties\nmisc flags\nflags (@see @ref netif_flags)\n&lt; Driver flags\n&lt; Deprecated: Alternate way to set bits using message flags\n&lt; GPTimer config flags\n&lt; Alarm config flags\n&lt; I2C master config flags\n&lt; I2C device config flags\n&lt; I2C slave config flags\n&lt; LEDC flags\n&lt; Extra configuration flags for timer\n&lt; Extra configuration flags for operator\n&lt; Extra flags for brake configuration\n&lt; Extra flags for carrier configuration\n&lt; Extra configuration flags for comparator\n&lt; Extra configuration flags for generator\n&lt; Extra flags for dead time configuration\n&lt; Extra configuration flags for GPIO fault\n&lt; Extra configuration flags for timer sync source\n&lt; Extra configuration flags for GPIO sync source\n&lt; Extra configuration flags for capture channel\n&lt; RMT channel extra configurations, OR’d with …\n&lt; Encoder config flag\n&lt; Carrier config flags\n&lt; TX channel config flags\n&lt; Transmit specific config flags\n&lt; RX channel config flags\n&lt; Bitwise OR of SPI_SLAVE_* flags\n&lt; Extra flags to fine-tune the SPI device\n&lt; Extra flags to fine-tune the I2C device\n&lt; LCD panel config flags\n&lt; SPI flash chip on which the partition resides\nCheck if is qualified to encrypt the buffer\nPrepare flash encryption before operation.\nDestroy encrypted result\n@brief Disable the flash encryption\n@brief flash data encryption operation is done.\n@brief Enable the flash encryption\n&lt; UART HW flow control mode (cts/rts)\nFor some host (SPI1), they are shared with a cache. When …\nFor some host (SPI1), they are shared with a cache. When …\n&lt; ADC DMA conversion output format, see …\n&lt; ADC DMA conversion output format, see …\nIf FAT partition can not be mounted, and this parameter is …\n&lt; If true, it will format the file system if it fails to …\nIf FAT partition can not be mounted, and this parameter is …\n&lt; I2S PDM TX up-sampling parameter. Normally it should be …\n&lt; Indication that the frame allocated for transmission is …\n&lt; Indication that the frame allocated for transmission is …\n&lt;  Number of (variable size) free blocks in the heap.\nPointer to free context hook\nPointer to free context hook\n&lt; Number of free entries. It includes also reserved …\n&lt; LEDC timer frequency (Hz)\n&lt; Carrier frequency in Hz\n&lt; Carrier wave frequency, in Hz, 0 means disabling the …\n&lt; No. of FTM frames requested in terms of 4 or 8 bursts …\nReturns the argument unchanged.\nReturns the argument unchanged.\nWrap an <code>esp_err_t</code>, return <code>Some</code> if <code>error</code> is <strong>not</strong> <code>ESP_OK</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.")