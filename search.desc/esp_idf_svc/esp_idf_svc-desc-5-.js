searchState.loadedDescShard("esp_idf_svc", 5, "Returns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWrap an <code>esp_err_t</code>, throw a compile time error if <code>error</code> is …\nWrap a <code>NonZeroI32</code>. Since <code>ESP_OK</code> is 0, this can never fail;\n&lt; I2S PDM TX up-sampling parameter. When it is set to 480, …\n&lt; fstat without context pointer\n&lt; fstat with context pointer\n&lt; fsync without context pointer\n&lt; fsync with context pointer\n&lt; Pointer to FTM Report, should be freed after use. Note: …\n&lt; Number of entries in the FTM Report data\n&lt; Enable FTM Responder mode\n&lt; ftruncate without context pointer\n&lt; ftruncate with context pointer\nPointer to a function which implements the command.\n&lt; Function which is called on RMT TX end\nVariable Declaration\n@addtogroup WPA_APIs @{\n&lt; gap time(in baud-rate) between AT cmd char\n&lt; The GPIO number used to output the PWM signal\n@brief Get MAC address\n@brief Get PHY chip address\n@brief Get MAC address\n@brief Get PHY chip address\n&lt; Gatt client callback param of ESP_GATTC_GET_ADDR_LIST_EVT\n&lt; Event parameter of ESP_GAP_BLE_GET_BOND_DEV_COMPLETE_EVT\n&lt; host function to get bus width\n&lt; Event parameter of ESP_GAP_BLE_GET_DEV_NAME_COMPLETE_EVT\n&lt; event id to be raised when interface gets an IP\n&lt; event id to be raised when interface gets an IP\n@brief Get Ethernet PHY link status\n@brief Get Ethernet PHY link status\n&lt; Host function to provide real working freq, based on …\nend_select is called to stop the I/O multiplexing and …\nHandler function called when connection status of the …\nHandler function called when connection status of the …\nCalled for get system time.\nCalled for get temp buffer when buffer from application …\n&lt; GHASH value.\n&lt; GHASH value.\n&lt; If the glitch period on the line is less than this …\nGlobal transport context.\nGlobal transport context.\nFree function for global transport context\nFree function for global transport context\nGlobal user context.\nGlobal user context.\nFree function for global user context\nFree function for global user context\n&lt; GPIO number of card detect signal\n&lt; The configurations of GPIOs that connect to external …\n&lt; PDM TX GPIO configurations, specified by user\n&lt; Standard mode GPIO configuration, specified by user\n&lt; TDM mode GPIO configuration, specified by user\n@brief GPIO common configuration\n@brief Configuration parameters of GPIO pad for …\n&lt; GPIO number of CS signal\n@brief Disable all digital gpio pads hold function during …\n@brief Enable all digital gpio pads hold function during …\n@brief Disable GPIO deep-sleep wake-up function.\n@brief Enable GPIO deep-sleep wake-up function.\n&lt; Pad drive capability: weak\n&lt; Pad drive capability: stronger\n&lt; Pad drive capability: medium\n&lt; Pad drive capability: strongest\n&lt; Pad drive capability: medium\n@brief Dump IO configuration information to console\n@brief Bind the GPIO with the ETM event\n@brief GPIO ETM event configuration\n@brief GPIO edges that can be used as ETM event\n&lt; Any edge on the GPIO can generate an ETM event signal\n&lt; A falling edge on the GPIO will generate an ETM event …\n&lt; A rising edge on the GPIO will generate an ETM event …\n@brief GPIO actions that can be taken by the ETM task\n&lt; Clear the GPIO level to low\n&lt; Set the GPIO level to high\n&lt; Toggle the GPIO level\n@brief Add GPIO to the ETM task.\n@brief GPIO ETM task configuration\n@brief Remove the GPIO from the ETM task\n@brief Force hold all digital and rtc gpio pads.\n@brief Force unhold all digital and rtc gpio pads.\n@brief Get GPIO pad drive capability\n@brief  GPIO get input level\n@brief Disable gpio pad hold function.\n@brief Enable gpio pad hold function.\n@brief Install the GPIO driver’s ETS_GPIO_INTR_SOURCE …\n&lt; GPIO number of interrupt line (input) for SDIO card.\n&lt; GPIO interrupt type : both rising and falling edge\n&lt; Disable GPIO interrupt\n&lt; GPIO interrupt type : input high level trigger\n&lt; GPIO interrupt type : input low level trigger\n&lt; GPIO interrupt type : falling edge\n&lt; GPIO interrupt type : rising edge\n@brief  Disable GPIO module interrupt signal\n@brief  Enable GPIO module interrupt signal\n@brief Set pad input to a peripheral signal through the …\n@brief Set peripheral output to an GPIO pad through the …\n@brief Add ISR handler for the corresponding GPIO pin.\n@brief Remove ISR handler for the corresponding GPIO pin.\n@brief   Register GPIO interrupt handler, the handler is …\n@brief GPIO interrupt handler\n@endcond\n&lt; GPIO mode : disable input and output\n&lt; GPIO mode : input only\n&lt; GPIO mode : output and input mode\n&lt; GPIO mode : output and input with open-drain mode\n&lt; GPIO mode : output only mode\n&lt; GPIO mode : output only with open-drain mode\n@brief Create an ETM event object for the GPIO peripheral\n@brief Create an ETM task object for the GPIO peripheral\n&lt; the LEDC output gpio_num, if you want to use gpio16, …\n&lt; GPIO used by the fault signal\n&lt; GPIO used by sync source\n&lt; GPIO used capturing input signal\n&lt; RMT GPIO number\n&lt; GPIO number used by RMT TX channel. Set to -1 if unused\n&lt; GPIO number used by RMT RX channel. Set to -1 if unused\n@brief GPIO number\n&lt; GPIO0, input and output\n&lt; GPIO1, input and output\n&lt; GPIO10, input and output\n&lt; GPIO11, input and output\n&lt; GPIO12, input and output\n&lt; GPIO13, input and output\n&lt; GPIO14, input and output\n&lt; GPIO15, input and output\n&lt; GPIO16, input and output\n&lt; GPIO17, input and output\n&lt; GPIO18, input and output\n&lt; GPIO19, input and output\n&lt; GPIO2, input and output\n&lt; GPIO20, input and output\n&lt; GPIO21, input and output\n&lt; GPIO3, input and output\n&lt; GPIO4, input and output\n&lt; GPIO5, input and output\n&lt; GPIO6, input and output\n&lt; GPIO7, input and output\n&lt; GPIO8, input and output\n&lt; GPIO9, input and output\n&lt; Use to signal not connected to S/W\n&lt; Pad floating\n&lt; Pad pull down\n&lt; Pad pull up\n&lt; Pad pull up + pull down\n@brief Disable pull-down on GPIO.\n@brief Enable pull-down on GPIO.\n&lt; Disable GPIO pull-down resistor\n&lt; Enable GPIO pull-down resistor\n@brief Disable pull-up on GPIO.\n@brief Enable pull-up on GPIO.\n&lt; Disable GPIO pull-up resistor\n&lt; Enable GPIO pull-up resistor\n@brief Reset an gpio to default state (select gpio …\n@brief    GPIO set direction\n@brief Set GPIO pad drive capability\n@brief  GPIO set interrupt trigger type\n@brief  GPIO set output level\n@brief  Configure GPIO pull-up/pull-down resistors\n@brief Disable SLP_SEL to change GPIO status …\n@brief Enable SLP_SEL to change GPIO status automantically …\n@brief    GPIO set direction at sleep\n@brief  Configure GPIO pull-up/pull-down resistors at sleep\n@brief Uninstall the driver’s GPIO ISR service, freeing …\n@brief Disable GPIO wake-up function.\n@brief Enable GPIO wake-up function.\n&lt; GPIO number of write protect signal\n&lt; GPIO write protect polarity\n@brief Timer alarm callback prototype\n@brief General Purpose Timer alarm configuration\n@brief GPTimer alarm event data\n@brief Type of GPTimer clock source\n@brief General Purpose Timer configuration\n@brief GPTimer count direction\n&lt; Decrease count value\n&lt; Increase count value\n@brief Delete the GPTimer handle\n@brief Disable GPTimer\n@brief Enable GPTimer\n@brief GPTimer ETM event configuration\n@brief GPTimer specific events that supported by the ETM …\n&lt; Count value matches the alarm target value\n&lt; Maximum number of events\n@brief GPTimer ETM task configuration\n@brief GPTimer specific tasks that supported by the ETM …\n&lt; Capture current count value into specific register\n&lt; Enable the alarm\n&lt; Maximum number of tasks\n&lt; Reload preset value into counter\n&lt; Start the counter\n&lt; Stop the counter\n@brief Group of supported GPTimer callbacks @note The …\n@brief Get GPTimer captured count value\n@brief Get GPTimer raw count value\n@brief Return the real resolution of the timer\n@brief Type of General Purpose Timer handle\n@brief Get the ETM event for GPTimer\n@brief Get the ETM task for GPTimer\n@brief Create a new General Purpose Timer, and return the …\n@brief Set callbacks for GPTimer\n@brief Set alarm event actions for GPTimer.\n@brief Set GPTimer raw count value\n@brief Start GPTimer (internal counter starts counting)\n@brief Stop GPTimer (internal counter stops counting)\n&lt;Select denoise range of denoise channel. Determined by …\n&lt;Select denoise range of denoise channel. Determined by …\n&lt; group cipher of AP\n&lt; Specify from which group to allocate the MCPWM timer\n&lt; Specify from which group to allocate the MCPWM operator\n&lt; In which MCPWM group that the GPIO fault belongs to\n&lt; MCPWM group ID\n&lt; Specify from which group to allocate the capture timer\n&lt; An internal identifier.\n&lt;Waterproof. Select touch channel use for guard pad. Guard …\n&lt;Waterproof. Select touch channel use for guard pad. Guard …\n&lt; Interface IPV4 gateway address\n@brief Calculate the clock division with fractal part …\n@brief Calculate the clock division with fractal part fast …\n@brief Calculate the clock division without fractal part\n@brief Members of clock division\n@brief Clock infomation\n@brief Integer division operation\n&lt; Round the division to the nearest integer (round up if …\n&lt; Round the division down to the floor integer\n&lt; Round the division up to the ceiling integer\n&lt; HMAC-MD5 callback function over data vector (RFC 2104)\n&lt; io-driver handle\n&lt; Handle to server instance\n&lt; io-driver handle\n&lt; FreeRTOS queue handler\n&lt; Handle to server instance\nHTTP Server Handle, if ext_handle_provided is set to true\n&lt; Gatt attribute handle\n&lt; Gatt attribute handle\n&lt; The characteristic descriptor handle\n&lt; The include service current attribute handle\n&lt; Characteristic handle\n&lt; The Characteristic or descriptor handle\n&lt; The Characteristic or descriptor handle\n&lt; The characteristic or descriptor handle\n&lt; The characteristic or descriptor handle\n&lt; The attribute handle\n&lt; The attribute handle\n&lt; attribute handle\n&lt; Attribute handle which send response\nFlag indicating that control frames (PING, PONG, CLOSE) …\nFlag indicating that control frames (PING, PONG, CLOSE) …\nHandler to call for supported request method. This must …\nHandler to call for supported request method. This must …\n&lt; The handles list\n&lt; The number to the handles\n&lt; If 1, a SHA256 digest “simple hash” (of the entire …\nThe hash context.\n&lt; hci transport functions used, must be set when …\n&lt; HCI transport layer, UART, VHCI, etc\n&lt; header of the wifi packet\n&lt; HE AP info\n&lt; For HTTP_EVENT_ON_HEADER event_id, it’s store current …\n&lt; For HTTP_EVENT_ON_HEADER event_id, it’s store current …\n&lt; For HTTP_EVENT_ON_HEADER event_id, it’s store current …\n&lt; For HTTP_EVENT_ON_HEADER event_id, it’s store current …\n&lt; WS additional headers\n!&lt; where to (e.g. MALLOC_CAP_SPIRAM) allocate heap objects …\n@brief Allocate an aligned chunk of memory which has the …\n@brief Allocate an aligned chunk of memory which has the …\n@brief Used to deallocate memory previously allocated with …\n@brief Allocate a chunk of memory which has the given …\n@brief Allocate a chunk of memory as preference in …\n@brief Check integrity of all heaps with the given …\n@brief Check integrity of heap memory around a given …\n@brief Check integrity of all heap memory in the system.\n@brief Dump the full structure of all heaps with matching …\n@brief Dump the full structure of all heaps.\n@brief Free memory previously allocated via …\n@brief Return the size that a particular pointer was …\n@brief Get the total free size of all the regions that …\n@brief Get heap info for all regions with the given …\n@brief Get the largest free block of memory able to be …\n@brief Get the total minimum free memory of all regions …\n@brief Get the total size of all the regions that have the …\n@brief Allocate a chunk of memory which has the given …\n@brief Enable malloc() in external memory and set limit …\n@brief Allocate a chunk of memory as preference in …\n@brief Print a summary of all memory with the given …\n@brief Reallocate memory previously allocated via …\n@brief Reallocate a chunk of memory as preference in …\n@brief registers a callback function to be invoked if a …\nHelp text for the command, shown by help command. If set, …\n&lt;  high RSSI threshold, used to determine whether the new …\n&lt; Pointer to high Vref curve of lookup table (NULL if …\n&lt; hint in PSK authentication mode in string format\nHint text, usually lists possible arguments. If set to …\n&lt; hint in PSK authentication mode in string format\n!&lt; Set to 1 to print hint text in bold\n!&lt; ASCII color code of hint text\n!&lt; file path used to save history commands, set to NULL won…\n&lt; HMAC-MD5 callback function over data buffer (RFC 2104)\n&lt; HMAC-SHA1 callback function over data buffer (RFC 2104)\n&lt; HMAC-SHA1 callback function over data vector (RFC 2104)\n&lt; The SHA256 callback function used by esp_wifi\n&lt; I2C start and stop condition hold period\n&lt; time spent at home channel between scanning consecutive …\n&lt; Pointer to hardware-specific “host_driver” …\n&lt; Host with which the card is associated\n&lt; Domain or IP as string\n&lt; SPI host to use, SPIx_HOST (see spi_types.h).\nCheck the host status, 0:busy, 1:idle, 2:suspended.\nCheck the host status, 0:busy, 1:idle, 2:suspended.\n&lt; Hostname, to set ipv4 pass it as string)\n&lt; Time.\n&lt; High pass filter cut-off frequency, range 23.3Hz ~ …\n&lt; High pass filter enable\n&lt; High pass filter scaling value\n&lt; LEDC channel hpoint value, the range is [0, (2**…\n&lt; Configuration of STA’s HT2040 coexist management\n&lt; enable to receive HT long training field(htltf) data. …\nREAD-ONLY\n@brief  Function prototype for closing a session.\n@brief   HTTP Server Configuration Structure\n@brief   HTTP Server Configuration Structure\n@brief Error codes sent as HTTP response in case of errors …\n@brief  Function prototype for HTTP error handling.\n@brief  Prototype for freeing context data (if any) @param[…\n@brief   Returns list of current socket descriptors of …\n@brief   Get HTTPD global transport context (it was set in …\n@brief   Get HTTPD global user context (it was set in the …\n@brief   HTTP Server Instance Handle\n@brief  Function prototype for opening a session.\n@brief  Prototype for HTTPDs low-level “get pending bytes…\n@brief   Helper function to get a URL query tag from a …\n@brief   Queue execution of a function in HTTPD’s context\n@brief  Prototype for HTTPDs low-level recv function\n@brief  Function for registering HTTP error handlers\n@brief   Registers a URI handler\n@brief HTTP Request Data Structure\n@brief   Start an asynchronous request. This function can …\n@brief   Mark an asynchronous request as completed. This …\n@brief   Get the value string of a cookie value from the …\n@brief   Search for a field in request headers and return …\n@brief   Get the value string of a field from the request …\n@brief   Get Query string length from the request URL\n@brief   Get Query string from the request URL\n@brief   API to read content data from the HTTP request\n@brief HTTP Request Data Structure\n@brief   Get the Socket Descriptor from the HTTP request\n@brief   API to send a complete HTTP response.\n@brief   API to send one HTTP chunk\n@brief   For sending out error code in response to HTTP …\n@brief   API to append any additional headers\n@brief   API to set the HTTP status code\n@brief   API to set the HTTP content type\n@brief   Raw HTTP send\n@brief  Prototype for HTTPDs low-level send function\n@brief   Get session context from socket descriptor\n@brief   Get session ‘transport’ context by socket …\n@brief   Set session context by socket descriptor\n@brief   Override web server’s pending function (by …\n@brief   Override web server’s receive function (by …\n@brief   Override web server’s send function (by session …\n@brief   Set session ‘transport’ context by socket …\n@brief   Trigger an httpd session close externally\n@brief   Update LRU counter for a given socket\nA low level API to receive data from a given socket\nA low level API to send data on a given socket\n@brief Starts the web server\n@brief Stops the web server\n@brief   Unregister all URI handlers with the specified …\n@brief   Unregister a URI handler\n@brief Structure for URI handler\n@brief  Function prototype for URI matching.\n@brief Test if a URI matches the given wildcard template.\n@brief Structure for URI handler\n@brief   Prototype of the HTTPD work function Please refer …\n@brief Enum for client info description\n@brief WebSocket frame format\n@brief WebSocket frame format\n@brief Checks the supplied socket descriptor if it belongs …\n@brief Receive and parse a WebSocket frame\n@brief Sends data to to specified websocket synchronously\n@brief Sends data to to specified websocket asynchronously\n@brief Construct and send a WebSocket frame @param[in]   …\n@brief Low level send of a WebSocket frame out of the …\n@brief Enum for WebSocket packet types (Opcode in the …\n&lt; Hardware re-correction enabled\n&lt; hardware target\nlink level hardware address of this interface\nnumber of bytes used in hwaddr\n&lt; I2C ack for each byte read\n&lt; I2C nack for the last byte\n&lt; I2C nack for each byte read\n@brief Enumeration for I2C device address bit length\n&lt; i2c address bit length 10\n&lt; i2c address bit length 7\n&lt; I2C 10bit address for slave mode\n&lt; I2C 7bit address for slave mode\n@brief Type of I2C clock source.\n@brief Create and initialize an I2C commands list with a …\n@brief Create and initialize an I2C commands list with a …\n@brief Free the I2C commands list\n@brief Free the I2C commands list allocated statically …\n@brief I2C initialization parameters\n@brief Deinitialize the I2C master bus and delete the …\n@brief Deinitialize the I2C slave device\n@brief I2C device configuration\n@brief Delete I2C driver\n@brief Install an I2C driver @note  Not all Espressif …\n@brief Disable filter on I2C bus\n@brief Enable hardware filter on I2C bus Sometimes the I2C …\n@brief get I2C data transfer mode\n@brief get I2C data signal timing\n@brief Get I2C master clock period\n@brief get I2C master start signal timing\n@brief get I2C master stop signal timing\n@brief get I2C timeout value @param i2c_num I2C port number\n@brief Data structure for calculating I2C bus timing.\n@brief Add I2C master BUS device.\n@brief I2C master bus specific configurations\n@brief Type of I2C master bus handle\n@brief Reset the I2C master bus.\n@brief I2C master bus delete device\n@brief Wait for all pending I2C transactions done\n@brief An callback for I2C transaction.\n@brief Send all the queued commands on the I2C bus, in …\n@brief Type of I2C master bus device handle\n@brief Group of I2C master callbacks, can be used to get …\n@brief Data type used in I2C event callback\n@brief Enumeration for I2C event.\n&lt; i2c bus in alive status.\n&lt; i2c bus transaction done\n&lt; i2c bus nack\n&lt; i2c bus timeout\n@brief Probe I2C address, if address is correct and ACK is …\n@brief Queue a “read (multiple) bytes” command to the …\n@brief Queue a “read byte” command to the commands …\n@brief Perform a read to a device connected to a …\n@brief Perform a read transaction on the I2C bus. The …\n@brief Register I2C transaction callbacks for a master …\n@brief Queue a “START signal” to the given commands …\n@brief Enumeration for I2C fsm status.\n&lt; ack error status for current master command\n&lt; I2C command done\n&lt; idle status for current master command\n&lt; read status for current master command\n&lt; Start status for current master command\n&lt; stop status for current master command\n&lt; I2C bus status error, and operation timeout\n&lt; write status for current master command\n@brief Queue a “STOP signal” to the given commands …\n@brief Perform a write transaction on the I2C bus. The …\n@brief Perform a write-read transaction on the I2C bus. …\n@brief Queue a “write (multiple) bytes” command to the …\n@brief Queue a “write byte” command to the commands …\n@brief Perform a write followed by a read to a device on …\n@brief Perform a write to a device connected to a …\n&lt; I2C master mode\n&lt; I2C slave mode\n@brief Allocate an I2C master bus\n@brief Initialize an I2C slave device\n@brief Configure an I2C bus with the given configuration.\n&lt; I2C port number, <code>-1</code> for auto selecting\n&lt; I2C port number, <code>-1</code> for auto selecting\n@brief I2C port number.\n@brief I2C port number, can be I2C_NUM_0 ~ (I2C_NUM_MAX-1).\n&lt; I2C port 0\n&lt; I2C port max\n@brief reset I2C rx fifo\n@brief reset I2C tx hardware fifo\n&lt; I2C read data\n&lt; I2C write data\n@brief set I2C data transfer mode\n@brief set I2C data signal timing\n@brief Set I2C master clock period\n@brief Configure GPIO pins for I2C SCK and SDA signals.\n@brief set I2C master start signal timing\n@brief set I2C master stop signal timing\n@brief set I2C timeout value @param i2c_num I2C port number\n@brief I2C slave specific configurations\n@brief Type of I2C slave device handle\n@brief Group of I2C slave callbacks (e.g. get i2c slave …\n@brief Read bytes from I2C internal buffer. When the I2C …\n@brief Read bytes from I2C internal ram. This can be only …\n@brief Read bytes from I2C internal buffer. Start a job to …\n@brief Callback signature for I2C slave.\n@brief Set I2C slave event callbacks for I2C slave channel.\n@brief Event structure used in I2C slave\n@brief Callback signature for I2C slave stretch.\n@brief Enum for I2C slave stretch causes\n&lt; Stretching SCL low when the slave is read by the master …\n&lt; Stretching SCL low when RX FIFO is full in slave mode\n&lt; Stretching SCL low when slave sending ACK\n&lt; Stretching SCL low when TX FIFO is empty in slave mode\n@brief Stretch cause event structure used in I2C slave\n@brief Write bytes to internal ringbuffer of the I2C slave …\n@brief Write bytes to internal ringbuffer of the I2C slave …\n@brief Write bytes to I2C internal ram. This can be only …\n&lt; I2C data lsb first\n&lt; I2C data msb first\n@brief I2S bit width per chan.\n&lt; channel bit-width: 16\n&lt; channel bit-width: 24\n&lt; channel bit-width: 32\n&lt; channel bit-width: 8\n&lt; channel bit-width equals to data bit-width\n@brief I2S bit width per sample.\n&lt; data bit-width: 16\n&lt; data bit-width: 24\n&lt; data bit-width: 32\n&lt; data bit-width: 8\n@brief I2S controller channel configuration\n@brief I2S channel information\n@brief Disable the I2S channel @note  Only allowed to be …\n@brief Enable the I2S channel @note  Only allowed to be …\n@brief I2S channel format type\n&lt; Load left channel data in both two channels\n&lt; Load right channel data in both two channels\n&lt; More than two channels are used\n&lt; Only load data in left channel (mono mode)\n&lt; Only load data in right channel (mono mode)\n&lt; Separated left and right channel\n@brief Get I2S channel information\n@brief Initialize I2S channel to PDM TX mode @note  Only …\n@brief Initialize I2S channel to standard mode @note  Only …\n@brief Initialize I2S channel to TDM mode @note  Only …\n@brief Preload the data into TX DMA buffer @note  Only …\n@brief I2S read data @note  Only allowed to be called when …\n@brief Reconfigure the I2S clock for PDM TX mode @note  …\n@brief Reconfigure the I2S GPIO for PDM TX mode @note  …\n@brief Reconfigure the I2S slot for PDM TX mode @note  …\n@brief Reconfigure the I2S clock for standard mode @note  …\n@brief Reconfigure the I2S GPIO for standard mode @note  …\n@brief Reconfigure the I2S slot for standard mode @note  …\n@brief Reconfigure the I2S clock for TDM mode @note  Only …\n@brief Reconfigure the I2S GPIO for TDM mode @note  Only …\n@brief Reconfigure the I2S slot for TDM mode @note  Only …\n@brief Set event callbacks for I2S channel\n@brief I2S channel.\n&lt; I2S channel (mono), one channel activated. In this mode, …\n&lt; I2S channel (stereo), two (or more) channels activated. …\n&lt; I2S channel 0 activated\n&lt; I2S channel 1 activated\n&lt; I2S channel 10 activated\n&lt; I2S channel 11 activated\n&lt; I2S channel 12 activated\n&lt; I2S channel 13 activated\n&lt; I2S channel 14 activated\n&lt; I2S channel 15 activated\n&lt; I2S channel 2 activated\n&lt; I2S channel 3 activated\n&lt; I2S channel 4 activated\n&lt; I2S channel 5 activated\n&lt; I2S channel 6 activated\n&lt; I2S channel 7 activated\n&lt; I2S channel 8 activated\n&lt; I2S channel 9 activated\n@brief I2S write data @note  Only allowed to be called …\n@brief I2S clock source enum\n@brief I2S communication standard format\n&lt; I2S communication format I2S, correspond to …\n&lt; I2S format LSB, (I2S_COMM_FORMAT_I2S …\n&lt; I2S format MSB, (I2S_COMM_FORMAT_I2S …\n&lt; I2S communication format PCM, correspond to …\n&lt; PCM Long, (I2S_COMM_FORMAT_PCM | …\n&lt; PCM Short, (I2S_COMM_FORMAT_PCM | …\n&lt; I2S communication I2S Philips standard, data launch at …\n&lt; standard max\n&lt; I2S communication MSB alignment standard, data launch at …\n&lt; PCM Long standard. The period of synchronization signal …\n&lt; PCM Short standard, also known as DSP mode. The period …\n@brief I2S controller communication mode\n&lt; Unspecified I2S controller mode\n&lt; I2S controller using PDM communication mode, support PDM …\n&lt; I2S controller using standard communication mode, …\n&lt; I2S controller using TDM communication mode, support up …\n@brief I2S driver configuration parameters\n@brief Available data bit width in one slot\n&lt; I2S channel data bit-width: 16\n&lt; I2S channel data bit-width: 24\n&lt; I2S channel data bit-width: 32\n&lt; I2S channel data bit-width: 8\n@brief Delete the I2S channel @note  Only allowed to be …\n@brief I2S channel direction\n&lt; I2S channel direction RX\n&lt; I2S channel direction TX\n@brief I2S driver configuration parameters\n@brief Install and start I2S driver.\n@brief Uninstall I2S driver.\n@brief Group of I2S callbacks @note The callbacks are all …\n@brief Event structure used in I2S event queue\n@brief Event structure used in I2S event queue\n@brief I2S event queue types\n&lt; I2S DMA has no next descriptor for sending or receiving\n&lt; I2S DMA finished receiving one DMA buffer\n&lt; I2S DMA receive queue overflowed, the oldest data has …\n&lt; I2S DMA finished sending one DMA buffer\n&lt; I2S DMA sending queue overflowed, the oldest data has …\n@brief get clock set on particular port number.\n@brief I2S event callback @param[in] handle    I2S channel …\n@brief The multiple of MCLK to sample rate\n&lt; MCLK = sample_rate * 128\n&lt; MCLK = sample_rate * 256\n&lt; MCLK = sample_rate * 384\n&lt; MCLK = sample_rate * 512\n@brief I2S Mode\n&lt; Master mode\n&lt; I2S PDM mode\n&lt; RX mode\n&lt; Slave mode\n&lt; TX mode\n@brief Allocate new I2S channel(s) @note  The new created …\n@brief I2S PCM configuration\n@brief A/U-law decompress or compress configuration.\n&lt; A-law compress\n&lt; A-law decompress\n&lt; Disable A/U law decompress or compress\n&lt; U-law compress\n&lt; U-law decompress\n@brief Configure I2S a/u-law decompress or compress\n@brief pdm tx singnal scaling mode\n&lt; I2S TX PDM signal scaling: /2\n&lt; I2S TX PDM signal scaling: x1\n&lt; I2S TX PDM signal scaling: x2\n&lt; I2S TX PDM signal scaling: x4\n@brief I2S slot select in PDM mode\n&lt; I2S PDM transmits or receives both two slots\n&lt; I2S PDM only transmits or receives the PDM device whose …\n&lt; I2S PDM only transmits or receives the PDM device whose …\n@brief I2S clock configuration for PDM TX mode\n@brief I2S PDM TX mode major configuration that including …\n@brief I2S PDM TX mode GPIO pins configuration\n@brief PDM TX line mode @note  For the standard codec …\n&lt; Standard PDM format output, left and right slot data on …\n&lt; PDM DAC format output, left or right slot data on a …\n&lt; PDM DAC format output, left and right slot data on …\n@brief I2S slot configuration for PDM TX mode\n@brief I2S PDM up-sample rate configuration @note  TX PDM …\n@brief I2S GPIO pins configuration\n@brief I2S controller port number, the max port number is …\n&lt; I2S controller port 0\n&lt; Select whichever port is available\n@brief Read data from I2S DMA receive buffer\n@brief I2S controller role\n&lt; I2S controller master role, bclk and ws signal will be …\n&lt; I2S controller slave role, bclk and ws signal will be …\n@brief Set clock &amp; bit width used for I2S RX and TX.\n@brief Set TX PDM mode up-sample rate @note  If you have …\n@brief Set I2S pin number\n@brief Set sample rate used for I2S RX and TX.\n@brief Total slot bit width in one slot\n&lt; I2S channel slot bit-width: 16\n&lt; I2S channel slot bit-width: 24\n&lt; I2S channel slot bit-width: 32\n&lt; I2S channel slot bit-width: 8\n&lt; I2S channel slot bit-width equals to data bit-width\n@brief I2S channel slot mode\n&lt; I2S channel slot format mono, transmit same data in all …\n&lt; I2S channel slot format stereo, transmit different data …\n@brief Start I2S driver\n@brief I2S clock configuration for standard mode\n@brief I2S standard mode major configuration that …\n@brief I2S standard mode GPIO pins configuration\n@brief I2S slot configuration for standard mode\n@brief I2S slot select in standard mode @note  It has …\n&lt; I2S transmits or receives both left and right slot\n&lt; I2S transmits or receives left slot\n&lt; I2S transmits or receives right slot\n@brief Stop I2S driver\n@brief I2S clock configuration for TDM mode\n@brief I2S TDM mode major configuration that including …\n@brief I2S TDM mode GPIO pins configuration\n@brief I2S slot configuration for TDM mode\n@brief tdm slot number @note  Multiple slots in TDM mode. …\n&lt; I2S slot 0 enabled\n&lt; I2S slot 1 enabled\n&lt; I2S slot 10 enabled\n&lt; I2S slot 11 enabled\n&lt; I2S slot 12 enabled\n&lt; I2S slot 13 enabled\n&lt; I2S slot 14 enabled\n&lt; I2S slot 15 enabled\n&lt; I2S slot 2 enabled\n&lt; I2S slot 3 enabled\n&lt; I2S slot 4 enabled\n&lt; I2S slot 5 enabled\n&lt; I2S slot 6 enabled\n&lt; I2S slot 7 enabled\n&lt; I2S slot 8 enabled\n&lt; I2S slot 9 enabled\n@brief Write data to I2S DMA transmit buffer.\n@brief Write data to I2S DMA transmit buffer while …\n@brief Zero the contents of the TX DMA buffer.\n&lt; An internal group identifier.\n&lt; I2S port id\n&lt; I2S port id\n&lt; Gatt id, include uuid and instance\n&lt; 11 or 29 bit identifier\n&lt; Version IDF\n&lt; Version IDF\n&lt; Bitmask of the core whose idle task should be subscribed …\n&lt; RMT idle level\n&lt; RMT idle level output enable\n&lt; RMT RX idle threshold\n&lt; textual description of the interface\n&lt; textual description of the interface\nFor incoming packets, this contains the input netif’s …\n&lt; string identifier of the interface\n&lt; string identifier of the interface\n&lt; The name of interface for data to go through. Use the …\n&lt; The name of interface for data to go through. Use the …\n&lt; The name of interface for data to go through. Use the …\n&lt; The name of interface for data to go through. Use the …\n&lt; Wi-Fi interface that peer uses to send/receive ESPNOW …\n&lt; Wi-Fi interface that peer uses to send/receive ESPNOW …\n&lt; WiFi interface to send request to\n&lt; WiFi interface to send request to\nThis function could be called to add or delete an entry in …\nFlag indicating if Session Context changes should be …\nFlag indicating if Session Context changes should be …\nThis variable is initialized by the system to contain the …\n&lt; The end handle of the service which has been included\n&lt; The start handle of the service which has been included\n&lt; Advertising data include device name or not\n&lt; Advertising data include TX power\n&lt; refresh server list after this server (if …\n&lt; refresh server list after this server (if …\n&lt; Inherit this configuration further\n@brief Initialize Ethernet MAC\n@brief Initialize Ethernet PHY\nFunction for initializing/allocating security …\n@brief Initialize Ethernet MAC\n@brief Custom driver SPI Initialization\n@brief Initialize Ethernet PHY\n&lt; Host function to initialize the driver\n&lt; disk initialization function\nFunction for initializing/allocating security …\n@brief Initialize LCD panel\n&lt; Initiator’s NAN Data Interface MAC\nThis function is called by the network device driver to …\n&lt; Maximum data valid time of slave. The time required …\n&lt; input delay phase, this will only take into effect when …\n&lt; Own service instance id\n&lt; Our Service Identifier\n&lt; Instance id\n&lt; advertising handle\n&lt; Interrupt GPIO number, set -1 to not use interrupt and …\n&lt; Interrupt GPIO number, set -1 to not use interrupt and …\n&lt; Interrupt GPIO number, set -1 to not use interrupt and …\n&lt; Integer part of division\n&lt; Netif index, interface=0 means NETIF_NO_INDEX\n&lt; connection interval\n&lt; connection interval\n&lt; ext adv maximum interval\n&lt; maximum interval\n&lt; periodic advertising maximum interval\n&lt; ext adv minimum interval\n&lt; minimum interval\n&lt; periodic advertising minimum interval\n&lt; Milliseconds between each ping procedure\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n&lt; Flags used to allocate the interrupt. One or multiple …\n&lt; Flags used to allocate the interrupt. One or multiple …\n&lt; UART interrupt enable mask, choose from …\n&lt; Interrupt flag for the bus to set the priority, and IRAM …\n&lt; Interrupt flags to set the priority of the driver’s …\nHandle to an interrupt handler\nGet the interrupt handler function for the given CPU …\nGet the interrupt handler argument associated with the …\nSet the interrupt handler function for the given CPU …\nCallback type of the interrupt handler\nthis function will be removed in later, please use …\n@brief  Attach an CPU interrupt to a hardware source. We …\n&lt; GPTimer interrupt priority, if set to 0, the driver will …\n&lt; I2C interrupt priority, if set to 0, driver will select …\n&lt; I2C interrupt priority, if set to 0, driver will select …\n&lt; I2S interrupt priority, range [0, 7], if set to 0, the …\n&lt; MCPWM timer interrupt priority, if set to 0, the driver …\n&lt; MCPWM operator interrupt priority, if set to 0, the …\n&lt; MCPWM comparator interrupt priority, if set to 0, the …\n&lt; MCPWM GPIO fault interrupt priority, if set to 0, the …\n&lt; MCPWM capture interrupt priority, if set to 0, the …\n&lt; RMT interrupt priority, if set to 0, the driver will try …\n&lt; RMT interrupt priority, if set to 0, the driver will try …\n&lt; GPIO interrupt type\n&lt; configure interrupt, Fade interrupt enable  or Fade …\n&lt; Interrupt mode\n@brief Invert the color (bit 1 -&gt; 0 for color data line, …\n&lt; GPIO pin invert flags\n&lt; GPIO pin invert flags\n&lt; GPIO pin invert flags\n&lt; Host function to enable SDIO interrupt line\n&lt; Host function to wait for SDIO interrupt line to be …\n&lt; Flash working mode when <code>SPI_FLASH_IGNORE_BASEIO</code> is …\n&lt; I/O voltage used by the controller (voltage switching is …\n&lt; ioctl without context pointer\n&lt; function to get info about disk and do some misc …\n&lt; ioctl with context pointer\n&lt; IPV4 address of DNS server\n&lt; Interface IPV4 address\n&lt; Interface IPV6 address\n&lt; IP address which was assigned to the station\n&lt; Clients IP address\n&lt; IPv4 address type\n&lt; IP address\nThis is the aligned version of ip4_addr_t, used as local …\nip4_addr_t uses a struct for convenience only, so that the …\nreturns ptr to static buffer; not reentrant!\n&lt; IPv6 address type\nThis is the aligned version of ip6_addr_t, used as local …\nArray of IPv6 addresses for this netif.\nThe state of each IPv6 address (Tentative, Preferred, etc).\nIPv6 address\nRemaining valid and preferred lifetime of each IPv6 …\nis this netif enabled for IPv6 autoconfiguration\n&lt; IPv6 address of the interface\nreturns ptr to static buffer; not reentrant!\n@ingroup ipaddr A union struct for both IP version’s …\nIP address configuration in network byte order\nIP Address received by station\n@ingroup ipaddr A union struct for both IP version’s …\n&lt; Whether the assigned IP has changed or not\nEvent structure for ADD_IP6 event\nEvent structure for IP_EVENT_AP_STAIPASSIGNED event\nEvent structure for IP_EVENT_GOT_IP6 event\n@brief Event structure for IP_EVENT_GOT_IP event\nIP event declarations\n&lt; soft-AP assign an IP to a connected station\n&lt; ethernet got IP from connected AP\n&lt; ethernet lost IP and the IP is reset to 0\n&lt; station or ap or ethernet interface v6IP addr is …\n&lt; PPP interface got IP\n&lt; PPP interface lost IP\n&lt; station got IP from connected AP\n&lt; station lost IP and the IP is reset to 0\n&lt; set the IP event id on which we refresh server list (if …\n&lt; set the IP event id on which we refresh server list (if …\nGlobal variables of this module, kept in a struct for …\n&lt; IPv6 address index\n&lt; initial ip address for this interface\n&lt; IP address, netmask, gatway IP address\n&lt; initial ip address for this interface\n&lt; the 16 bits of the ir value\n&lt; The irk value\n&lt; the 16 bits of the ir key value\n&lt; Set asynchronous mode, only supported with HTTPS for now\n&lt; status\n&lt; The gattc command queue is full or not\n&lt; The value is too long or not\n&lt; flag to identify mesh child\n&lt; flag to identify mesh child\n&lt; flag to identify mesh child\n&lt; flag to identify mesh child\n&lt; True means notify, false means indicate\n&lt; Use non-TLS connection: When set to true, the esp-tls …\n&lt; Use non-TLS connection: When set to true, the esp-tls …\n&lt; This write operation is prepare write\n&lt; This service is primary or not\n&lt; The service flag, true if the service is primary …\n&lt; True if this is the primary service\n&lt; if true, rc_addr shall be specified (Unimplemented). if …\n&lt; whether current mesh network has a root\n&lt; type of “sem” is SemaphoreHandle_t when true, …\nFlag for indicating a WebSocket endpoint. If this flag is …\nFlag for indicating a WebSocket endpoint. If this flag is …\n&lt; Select cpu core to register SPI ISR.\n&lt; The parsed issuer data (named information object).\n&lt; The parsed issuer data (named information object).\n&lt; Optional X.509 v2/v3 issuer unique identifier.\n&lt; The raw issuer data (DER).\n&lt; The raw issuer data (DER). Used for quick comparison.\n&lt; The length of IV.\n&lt; The length of IV.\n&lt;Set jitter filter step size. Range: 0 ~ 15\n&lt;Set jitter filter step size. Range: 0 ~ 15\n&lt; Enable TCP keep-alive timeout for SSL connection\n&lt; Enable TCP keep-alive timeout for SSL connection\n&lt; Keep-alive packet retry send count\n&lt; Keep-alive packet retry send count\n&lt; Keep-alive packet retry send count. Default is 3 counts\n&lt; Keep-alive packet retry send count\n&lt; Keep-alive packet retry send count. Default is 3 counts\n&lt; Keep-alive packet retry send count\n&lt; Keep-alive packet retry send count. Default is 3 counts\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Keep-alive idle time (second)\n&lt; Keep-alive idle time (second)\n&lt; Keep-alive idle time. Default is 5 (second)\n&lt; Keep-alive idle time (second)\n&lt; Keep-alive idle time. Default is 5 (second)\n&lt; Keep-alive idle time (second)\n&lt; Keep-alive idle time. Default is 5 (second)\n&lt; Keep-alive interval time (second)\n&lt; Keep-alive interval time (second)\n&lt; Keep-alive interval time. Default is 5 (second)\n&lt; Keep-alive interval time (second)\n&lt; Keep-alive interval time. Default is 5 (second)\n&lt; Keep-alive interval time (second)\n&lt; Keep-alive interval time. Default is 5 (second)\n&lt; <em>MQTT</em> keepalive, default is 120 seconds When configuring …\n&lt; key in PSK authentication mode in binary format\n&lt; key in PSK authentication mode in binary format\n&lt; Private key for SSL mutual authentication, not required …\n&lt; Key of stored key-value pair\n&lt; Link key associated with peer device.\n&lt; Pointers to the key digests\n&lt; Length of the buffer pointed to by key.\n&lt; the key mask to indicate witch key is present\n&lt; passkey notification\n&lt; Client key decryption password, not PEM nor DER, if …\n&lt; Length of the password pointed to by <code>key_password</code>\n&lt; Valid link key value in key element\n&lt; length of the key\n&lt; length of the key\n&lt; The key size(7~16) of the security link\n&lt; The key size of the security link\n&lt; key type of the security link\n&lt; The type of Link Key\n&lt; partition label, zero-terminated ASCII string\n&lt;  Size of the largest free block in the heap. This is the …\n&lt; error code (based on ESP_ERR_ESP_TLS_BASE) of the last …\n&lt; error code (based on ESP_ERR_ESP_TLS_BASE) of the last …\n&lt; Last will configuration\n&lt; Slave latency for the connection in number of connection …\n&lt; Slave latency for the connection in number of connection …\n&lt; ext scan type\n&lt; Slave latency for the connection in number of connection …\n&lt; Slave latency for the connection in number of connection …\n&lt; the current layer of this node\n&lt; current layer of this node\n&lt; the capacity of layer2 node, total child numbers plus 1, …\n&lt; layer_cap = max_layer - layer, indicates the number of …\n&lt; max layer of the network\n&lt; layer change\n&lt; Bit-width of LCD command\n&lt; Bit-width of LCD command\n@brief LCD color range\n&lt; Full color range\n&lt; Limited color range\n@brief RGB color endian\n@brief LCD color space\n&lt; Color space: RGB\n&lt; Color space: YUV\n&lt; Bit-width of LCD parameter\n&lt; Bit-width of LCD parameter\n@brief RGB data endian\n&lt; RGB data endian: MSB first\n&lt; RGB data endian: LSB first\n@brief RGB color endian\n&lt; RGB element order: BGR\n&lt; RGB element order: RGB\n@brief The standard used for conversion between RGB and YUV\n&lt; YUV&lt;-&gt;RGB conversion standard: BT.601\n&lt; YUV&lt;-&gt;RGB conversion standard: BT.709\n@brief YUV sampling method\n&lt; YUV 4:1:1 sampling\n&lt; YUV 4:2:0 sampling\n&lt; YUV 4:2:2 sampling\n&lt; local device CSRK = d1(ER,DIV,1)\n&lt; the number of current connected leaves\n&lt; the maximum number of leaves in the mesh network\n@brief Bind LEDC channel with the selected timer\n@brief LEDC callback event type\n&lt; LEDC fade end event\n@brief LEDC callback parameter\n@brief LEDC callback registration function\n@brief Type of LEDC event callback @param param LEDC …\n@brief Group of supported LEDC callbacks @note The …\n@brief LEDC channel configuration Configure LEDC channel …\n@brief Configuration parameters of LEDC channel for …\n&lt; LEDC channel 0\n&lt; LEDC channel 1\n&lt; LEDC channel 2\n&lt; LEDC channel 3\n&lt; LEDC channel 4\n&lt; LEDC channel 5\n@brief Type of LEDC clock source, reserved for the legacy …\n@brief LEDC timer-specific clock sources\n&lt; LEDC timer clock divided from APB clock (80Mhz)\n&lt; Selecting this value for LEDC_TICK_SEL_TIMER let the …\n&lt; LEDC duty decrease direction\n&lt; LEDC duty increase direction\n@brief Install LEDC fade function. This function will …\n@brief Uninstall LEDC fade function.\n&lt; LEDC fade function will return immediately\n&lt; LEDC fade function will block until fading to the target …\n@brief Start LEDC fading.\n@brief Stop LEDC fading. The duty of the channel is …\n@brief Helper function to find the maximum possible duty …\n@brief LEDC get duty This function returns the duty at the …\n@brief      LEDC get channel frequency (Hz)\n@brief LEDC get hpoint value, the counter value when the …\n&lt; Disable LEDC interrupt\n&lt; Enable LEDC interrupt\n@brief Register LEDC interrupt handler, the handler is an …\n&lt; LEDC low speed speed_mode\n&lt; LEDC speed limit\n@brief LEDC set duty This function do not change the …\n@brief A thread-safe API to set duty for LEDC channel and …\n@brief LEDC set duty and hpoint value Only after calling …\n@brief LEDC set gradient Set LEDC gradient, After the …\n@brief A thread-safe API to set and start LEDC fade …\n@brief A thread-safe API to set and start LEDC fade …\n@brief Set LEDC fade function.\n@brief Set LEDC fade function, with a limited time.\n@brief LEDC set channel frequency (Hz)\n@brief Set LEDC output gpio.\n@brief LEDC global clock sources\n&lt; LEDC low speed timer clock source is 80MHz APB clock\n&lt; LEDC low speed timer clock source is RC_FAST clock\n&lt; Alias of ‘LEDC_SLOW_CLK_RC_FAST’\n&lt; LEDC low speed timer clock source XTAL clock\n@brief LEDC stop. Disable LEDC output, and set idle level\n&lt; LEDC PWM duty resolution of 10 bits\n&lt; LEDC PWM duty resolution of 11 bits\n&lt; LEDC PWM duty resolution of 12 bits\n&lt; LEDC PWM duty resolution of 13 bits\n&lt; LEDC PWM duty resolution of 14 bits\n&lt; LEDC PWM duty resolution of  1 bits\n&lt; LEDC PWM duty resolution of  2 bits\n&lt; LEDC PWM duty resolution of  3 bits\n&lt; LEDC PWM duty resolution of  4 bits\n&lt; LEDC PWM duty resolution of  5 bits\n&lt; LEDC PWM duty resolution of  6 bits\n&lt; LEDC PWM duty resolution of  7 bits\n&lt; LEDC PWM duty resolution of  8 bits\n&lt; LEDC PWM duty resolution of  9 bits\n@brief LEDC timer configuration Configure LEDC timer with …\n@brief Configuration parameters of LEDC timer for …\n@brief Pause LEDC timer counter\n@brief Resume LEDC timer\n@brief Reset LEDC timer\n@brief Configure LEDC settings\n&lt; LEDC timer 0\n&lt; LEDC timer 1\n&lt; LEDC timer 2\n&lt; LEDC timer 3\n@brief LEDC update channel parameters\n&lt; Set to enable left alignment\n&lt; Set to enable left alignment\n&lt; Set to enable left alignment\n&lt; Set true to enable left alignment\n&lt; ASN1 length, in octets.\n&lt; ASN1 length, in octets.\n&lt; Length of the WebSocket data\nLength (in bytes) of the proof of possession data\nLength (in bytes) of the proof of possession data\n&lt; valid length of CSI data\n&lt; element length, the length after this member\n&lt; option length\nlength of this buffer\n&lt; ASN1 length, in octets.\n&lt; ASN1 length, in octets.\n&lt; Length of the WebSocket data\nLength (in bytes) of the proof of possession data\n&lt; UUID length, 16bit, 32bit or 128bit\n&lt; Gatt attribute value length\n&lt; The write attribute value length\n&lt; The indication or notification value length, len is …\n&lt;  length in bytes of payload data in each packet\n&lt;  length in bytes of payload data in each packet\n&lt; local encryption reproduction keys LTK = = d1(ER,DIV,0)\n&lt; Length of all bytes in the element data following this …\n&lt; Total data length, in bits\n&lt; Total data length, in bits\n&lt; The length of device_info\n&lt; Current length of the element\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Size limit for the outbox in bytes.\n&lt; PDM TX line mode, one-line codec, one-line dac, two-line …\n&lt; linger timeout (in seconds)\n&lt; linger timeout (in seconds)\n&lt; link without context pointer\n&lt; link with context pointer\nA hack to make sure that a few patches to the ESP-IDF …\n&lt; Link role : master role = 0  ; slave role = 1\n&lt; Link role : master role = 0  ; slave role = 1\nThis function is called by ethernet_output() when it wants …\n&lt; Listen interval for ESP32 station to receive beacon when …\n@brief Get the received length of a linked list, until end …\nGenerate a linked list pointing to a (huge) buffer in an …\n&lt; enable to receive legacy long training field(lltf) data. …\n&lt; ESPNOW peer local master key that is used to encrypt data\n&lt; ESPNOW peer local master key that is used to encrypt data\n&lt; Address of segment\n&lt; Event parameter of …\n&lt; Maximum loop count, only take effect for chips that is …\n&lt; Specify the times of transmission in a loop, -1 means …\n&lt; Enable sending RMT items in a loop\n@brief Sets the PHY to loopback mode\n@brief Sets the PHY to loopback mode\n&lt; Maximum number of consecutive lost beacons allowed\n&lt; Beacon lost timeout\n&lt; event id to be raised when interface losts its IP\n&lt; event id to be raised when interface losts its IP\n&lt;  low RSSI threshold. If the parent’s RSSI is lower …\n&lt; Pointer to low Vref curve of lookup table (NULL if …\n&lt; Low pass filter scaling value\n&lt; Purge “Least Recently Used” connection\n&lt; Purge “Least Recently Used” connection\n&lt; Seek without context pointer\n&lt; Seek with context pointer\n&lt; enable to generate htlft data by averaging lltf and …\n&lt; The long term key\n&lt; The long term key\n@}\n@ingroup ipaddr IP address types for use in ip_addr_t.type …\nIPv4+IPv6 (“dual-stack”)\nIPv4\nIPv6\nSymbolic constants for the ‘type’ parameters in some …\nMulticast\nUnicast\nUnknown\n&lt; initial mac address for this interface\n&lt; MAC address of the station connected to Soft-AP\n&lt; MAC address of the station disconnects to soft-AP\n&lt; MAC address of the connected client\n&lt; initial mac address for this interface\n&lt; Clients MAC address\n&lt; mac address\n&lt; source MAC address of the CSI data\n&lt; MAC address of the station connected to Soft-AP\n&lt; MAC address of the station disconnects to soft-AP\n&lt; MAC address of the station which send probe request\n&lt; mac address of the child\n@brief Ethernet MAC object\n&lt; WiFi init magic number, it should be the last field\n&lt; Magic word ESP_IMAGE_HEADER_MAGIC\n&lt; Magic number\n&lt; Magic byte ESP_BOOTLOADER_DESC_MAGIC_BYTE\n&lt; Magic word ESP_APP_DESC_MAGIC_WORD\n&lt; manually scale the CSI data by left shifting or …\n&lt; Manufacturer of the device. If empty, the default …\nBLE device manufacturer data pointer in advertisement\nBLE device manufacturer data pointer in advertisement\nBLE device manufacturer data length in advertisement\nBLE device manufacturer data length in advertisement\n&lt; Manufacturer data length\n&lt; I2C master config\n&lt; Device’s preference value to serve as NAN Master\n&lt; Comma separated filters for filtering services\n&lt; Comma separated filters for filtering services\n&lt; maximum active scan time per channel, units: …\n&lt; Max connection retries on receiving HTTP unauthorized …\n&lt; maximum ce length\n&lt; Maximal chip revision supported by image, in format: …\n!&lt; maximum number of command line arguments to parse\n!&lt; length of command line buffer, in bytes\n!&lt; maximum length of a command line. If 0, default value …\n&lt; Max number of stations allowed to connect in\n&lt; max mesh connections\n&lt; maximum number of extended advertising events\n&lt; maximum number of entries in dynamic forwarding database\n&lt; maximum number of entries in dynamic forwarding database\n&lt; maximum number of entries in static forwarding database\n&lt; maximum number of entries in static forwarding database\n&lt; The maxinum number of eventfds supported\n&lt; Max number of open files\n&lt; Maximum files that could be open at the same time.\n&lt; Max number of open files\n&lt; The max value of the denominator and numerator, …\n&lt; max frequency supported by the host\n&lt; Maximum frequency, in kHz, supported by the card\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n!&lt; maximum length for the history\n&lt; Max connection interval\n&lt; Max connection interval\n&lt; The max value of the integral part\n&lt; Advertising data show slave preferred connection max …\n&lt; Maximum length of the element\n&lt; Max number of sockets/clients connected at any time (3 …\n&lt; Max number of sockets/clients connected at any time (3 …\n&lt; maximum number of ports the bridge can consist of\n&lt; maximum number of ports the bridge can consist of\n&lt; Max number of redirections on receiving HTTP redirect …\n&lt; Maximum allowed additional headers in HTTP response\n&lt; Maximum allowed additional headers in HTTP response\n&lt; ext adv maximum skip\n&lt; Max length of the converted data that driver can store …\n&lt; Max length of the converted data that driver can store …\n&lt; Max length of the conversion results that driver can …\n&lt; Maximum transfer size, in bytes. Defaults to 4092 if 0 …\n&lt; This field is used for getting WiFi maximum transmitting …\n&lt; Maximum allowed uri handlers\n&lt; Maximum allowed uri handlers\n&lt; I2C expected clock speed from SCL.\n\\brief           This function implements the …\nContainer for ASN1 bit strings.\nType-length-value structure that allows for ASN1 using DER.\n\\brief       Find a specific named_data entry in a …\n\\brief       Free all entries in a mbedtls_asn1_named_data …\n\\brief       Free all shallow entries in a …\n\\brief       Retrieve an AlgorithmIdentifier ASN.1 …\n\\brief       Retrieve an AlgorithmIdentifier ASN.1 …\n\\brief       Retrieve a bitstring ASN.1 tag and its value. …\n\\brief       Retrieve a bitstring ASN.1 tag without unused …\n\\brief       Retrieve a boolean ASN.1 tag and its value. …\n\\brief       Retrieve an enumerated ASN.1 tag and its …\n\\brief       Retrieve an integer ASN.1 tag and its value. …\n\\brief       Get the length of an ASN.1 element. Updates …\n\\brief       Retrieve an integer ASN.1 tag and its value. …\n\\brief       Parses and splits an ASN.1 “SEQUENCE OF ”.\n\\brief       Get the tag and length of the element. Check …\nContainer for a sequence or list of ‘named’ ASN.1 data …\nContainer for a sequence of ASN.1 items\n\\brief          Free a heap-allocated linked list …\n\\brief                Traverse an ASN.1 SEQUENCE container …\n\\brief           This function performs a CCM …\n\\brief    The CCM context-type definition. The CCM context …\n\\brief           This function encrypts a buffer using CCM.\n\\brief           This function finishes the CCM operation …\n\\brief   This function releases and clears the specified …\n\\brief           This function initializes the specified …\n\\brief          The CCM checkup routine.\n\\brief           This function declares the lengths of the …\n\\brief           This function initializes the CCM context …\n\\brief           This function performs a CCM* …\n\\brief           This function encrypts a buffer using CCM*…\n\\brief           This function starts a CCM encryption or …\n\\brief           This function feeds an input buffer into …\n\\brief           This function feeds an input buffer as …\n\\brief           This function encrypts or decrypts data …\n\\brief           This function releases and clears the …\n\\brief           This function initializes the specified …\n\\brief           The ChaCha20 checkup routine.\n\\brief           This function sets the …\n\\brief           This function sets the nonce and initial …\n\\brief           This function encrypts or decrypts data.\n\\brief           This function performs a complete …\n\\brief           This function performs a complete …\n\\brief           This function finished the …\n\\brief           This function releases and clears the …\n\\brief           This function initializes the specified …\n&lt; The mode value for performing decryption.\n&lt; The mode value for performing encryption.\n\\brief           The ChaCha20-Poly1305 checkup routine.\n\\brief           This function sets the ChaCha20-Poly1305 …\n\\brief           This function starts a ChaCha20-Poly1305 …\n\\brief           Thus function feeds data to be encrypted …\n\\brief           This function feeds additional data to be …\n\\brief               The authenticated encryption …\n\\brief               The authenticated encryption …\n\\brief               This function checks the tag for AEAD …\n\\brief               This function calculates the full …\n\\brief               This function finishes an ongoing …\n\\brief               This function starts a new CMAC …\n\\brief               This function starts a new CMAC …\n\\brief               This function feeds an input buffer …\nGeneric cipher context.\n\\brief               The generic all-in-one …\n\\brief               The generic cipher finalization …\n\\brief               This function frees and clears the …\n\\brief     Supported cipher types.\n&lt; The Triple DES cipher. \\warning 3DES is considered weak.\n&lt; The AES cipher.\n&lt; The Aria cipher.\n&lt; The Camellia cipher.\n&lt; The ChaCha20 cipher.\n&lt; The DES cipher. \\warning DES is considered weak.\n&lt; Placeholder to mark the end of cipher ID lists.\n&lt; The identity cipher, treated as a stream cipher.\n\\brief               This function retrieves the …\n\\brief               This function retrieves the …\n\\brief               This function retrieves the …\nCipher information. Allows calling cipher functions in a …\n\\brief               This function initializes a \\p ctx as …\n\\brief This function retrieves the list of ciphers …\nSupported cipher modes.\n&lt; The CBC cipher mode.\n&lt; The CCM cipher mode.\n&lt; The CCM*-no-tag cipher mode.\n&lt; The CFB cipher mode.\n&lt; The ChaCha-Poly cipher mode.\n&lt; The CTR cipher mode.\n&lt; The ECB cipher mode.\n&lt; The GCM cipher mode.\n&lt; The SP800-38F KW mode\n&lt; The SP800-38F KWP mode\n&lt; None.\n&lt; The OFB cipher mode.\n&lt; The stream cipher mode.\n&lt; The XTS cipher mode.\nSupported cipher padding types.\n&lt; Never pad (full blocks only).\n&lt; ISO/IEC 7816-4 padding.\n&lt; PKCS7 padding (default).\n&lt; Zero padding (not reversible).\n&lt; ANSI X.923 padding.\n\\brief         This function resets the cipher state.\n\\brief           This function sets the initialization …\n\\brief               This function sets the padding mode, …\n\\brief               This function sets the key to use …\n\\brief               This function prepares a cipher …\n\\brief     Supported {cipher type, cipher mode} pairs.\n&lt; AES cipher with 128-bit CBC mode.\n&lt; AES cipher with 128-bit CCM mode.\n&lt; AES cipher with 128-bit CCM_STAR_NO_TAG mode.\n&lt; AES cipher with 128-bit CFB128 mode.\n&lt; AES cipher with 128-bit CTR mode.\n&lt; AES cipher with 128-bit ECB mode.\n&lt; AES cipher with 128-bit GCM mode.\n&lt; AES cipher with 128-bit NIST KW mode.\n&lt; AES cipher with 128-bit NIST KWP mode.\n&lt; AES 128-bit cipher in OFB mode.\n&lt; AES 128-bit cipher in XTS block mode.\n&lt; AES cipher with 192-bit CBC mode.\n&lt; AES cipher with 192-bit CCM mode.\n&lt; AES cipher with 192-bit CCM_STAR_NO_TAG mode.\n&lt; AES cipher with 192-bit CFB128 mode.\n&lt; AES cipher with 192-bit CTR mode.\n&lt; AES cipher with 192-bit ECB mode.\n&lt; AES cipher with 192-bit GCM mode.\n&lt; AES cipher with 192-bit NIST KW mode.\n&lt; AES cipher with 192-bit NIST KWP mode.\n&lt; AES 192-bit cipher in OFB mode.\n&lt; AES cipher with 256-bit CBC mode.\n&lt; AES cipher with 256-bit CCM mode.\n&lt; AES cipher with 256-bit CCM_STAR_NO_TAG mode.\n&lt; AES cipher with 256-bit CFB128 mode.\n&lt; AES cipher with 256-bit CTR mode.\n&lt; AES cipher with 256-bit ECB mode.\n&lt; AES cipher with 256-bit GCM mode.\n&lt; AES cipher with 256-bit NIST KW mode.\n&lt; AES cipher with 256-bit NIST KWP mode.\n&lt; AES 256-bit cipher in OFB mode.\n&lt; AES 256-bit cipher in XTS block mode.\n&lt; Aria cipher with 128-bit key and CBC mode.\n&lt; Aria cipher with 128-bit key and CCM mode.\n&lt; Aria cipher with 128-bit key and CCM_STAR_NO_TAG mode.\n&lt; Aria cipher with 128-bit key and CFB-128 mode.\n&lt; Aria cipher with 128-bit key and CTR mode.\n&lt; Aria cipher with 128-bit key and ECB mode.\n&lt; Aria cipher with 128-bit key and GCM mode.\n&lt; Aria cipher with 192-bit key and CBC mode.\n&lt; Aria cipher with 192-bit key and CCM mode.\n&lt; Aria cipher with 192-bit key and CCM_STAR_NO_TAG mode.\n&lt; Aria cipher with 192-bit key and CFB-128 mode.\n&lt; Aria cipher with 192-bit key and CTR mode.\n&lt; Aria cipher with 192-bit key and ECB mode.\n&lt; Aria cipher with 192-bit key and GCM mode.\n&lt; Aria cipher with 256-bit key and CBC mode.\n&lt; Aria cipher with 256-bit key and CCM mode.\n&lt; Aria cipher with 256-bit key and CCM_STAR_NO_TAG mode.\n&lt; Aria cipher with 256-bit key and CFB-128 mode.\n&lt; Aria cipher with 256-bit key and CTR mode.\n&lt; Aria cipher with 256-bit key and ECB mode.\n&lt; Aria cipher with 256-bit key and GCM mode.\n&lt; Camellia cipher with 128-bit CBC mode.\n&lt; Camellia cipher with 128-bit CCM mode.\n&lt; Camellia cipher with 128-bit CCM_STAR_NO_TAG mode.\n&lt; Camellia cipher with 128-bit CFB128 mode.\n&lt; Camellia cipher with 128-bit CTR mode.\n&lt; Camellia cipher with 128-bit ECB mode.\n&lt; Camellia cipher with 128-bit GCM mode.\n&lt; Camellia cipher with 192-bit CBC mode.\n&lt; Camellia cipher with 192-bit CCM mode.\n&lt; Camellia cipher with 192-bit CCM_STAR_NO_TAG mode.\n&lt; Camellia cipher with 192-bit CFB128 mode.\n&lt; Camellia cipher with 192-bit CTR mode.\n&lt; Camellia cipher with 192-bit ECB mode.\n&lt; Camellia cipher with 192-bit GCM mode.\n&lt; Camellia cipher with 256-bit CBC mode.\n&lt; Camellia cipher with 256-bit CCM mode.\n&lt; Camellia cipher with 256-bit CCM_STAR_NO_TAG mode.\n&lt; Camellia cipher with 256-bit CFB128 mode.\n&lt; Camellia cipher with 256-bit CTR mode.\n&lt; Camellia cipher with 256-bit ECB mode.\n&lt; Camellia cipher with 256-bit GCM mode.\n&lt; ChaCha20 stream cipher.\n&lt; ChaCha20-Poly1305 AEAD cipher.\n&lt; DES cipher with CBC mode. \\warning DES is considered …\n&lt; DES cipher with ECB mode. \\warning DES is considered …\n&lt; DES cipher with EDE3 CBC mode. \\warning 3DES is …\n&lt; DES cipher with EDE3 ECB mode. \\warning 3DES is …\n&lt; DES cipher with EDE CBC mode. \\warning 3DES is …\n&lt; DES cipher with EDE ECB mode. \\warning 3DES is …\n&lt; Placeholder to mark the end of cipher-pair lists.\n&lt; The identity stream cipher.\n\\brief               The generic cipher update function. …\n\\brief               This function adds additional data …\n\\brief               This function writes a tag for AEAD …\nThe CMAC context structure.\n\\brief          The CMAC checkup routine.\n\\brief           This function derives and exports the …\n\\brief          Check whether a given group can be used …\n\\brief           This function computes the shared secret.\n\\warning         Performing multiple operations …\nThe context used by the default ECDH implementation.\n\\brief           This function frees a context.\n\\brief           This function generates an ECDH keypair …\n\\brief          Return the ECP group for provided context.\n\\brief           This function sets up an ECDH context …\n\\brief           This function initializes an ECDH context.\n\\brief           This function generates an EC key pair …\n\\brief           This function generates a public key and …\n\\brief           This function parses the ECDHE parameters …\n\\brief       This function parses and processes the ECDHE …\n\\brief           This function sets up the ECDH context …\nDefines the source of the imported EC key.\n&lt; Our key.\n&lt; The key of the peer.\nDefines the ECDH implementation used.\n&lt; The default Mbed TLS implementation\n&lt; Implementation not defined.\n\\brief          This function checks whether a given group …\n\\brief           The ECDSA context structure.\n\\brief           This function frees an ECDSA context.\n\\brief           This function sets up an ECDSA context …\n\\brief          This function generates an ECDSA keypair …\n\\brief           This function initializes an ECDSA …\n\\brief           This function reads and verifies an ECDSA …\n\\brief           This function reads and verifies an ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief               This function computes the ECDSA …\n\\brief               This function computes the ECDSA …\n\\brief           This function verifies the ECDSA …\n\\brief           This function verifies the ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief           Check if an ECJPAKE context is ready for …\nEC J-PAKE context structure.\n\\brief           Derive the shared secret (TLS: Pre-Master …\n\\brief           This clears an ECJPAKE context and frees …\n\\brief           Initialize an ECJPAKE context.\n\\brief           Read and process the first round message …\n\\brief           Read and process the second round message …\nRoles in the EC J-PAKE exchange\n&lt; Client\n&lt; Undefined\n&lt; Server\n\\brief          Checkup routine\n\\brief               Set the point format for future reads …\n\\brief           Set up an ECJPAKE context for use.\n\\brief           Generate and write the first round message\n\\brief           Generate and write the second round …\n\\brief           Write the shared key material to be …\n\\brief           This function checks that an \\c …\n\\brief           This function checks that the keypair …\n\\brief           This function checks that a point is a …\n\\brief           This function copies the contents of …\nCurve information, for use by other modules.\n\\brief           This function retrieves curve information …\n\\brief           This function retrieves curve information …\n\\brief           This function retrieves curve information …\n\\brief           This function retrieves the information …\n\\brief           This function exports generic key-pair …\n\\brief           This function generates an ECP key.\n\\brief           This function generates an ECP keypair.\n\\brief           This function generates a keypair with a …\n\\brief           This function generates a private key.\n\\brief           The ECP group structure.\n\\brief           This function copies the contents of …\n\\brief           This function frees the components of an …\nDomain-parameter identifiers: curve, subgroup, and …\n&lt; Domain parameters for 256-bit Brainpool curve.\n&lt; Domain parameters for 384-bit Brainpool curve.\n&lt; Domain parameters for 512-bit Brainpool curve.\n&lt; Domain parameters for Curve25519.\n&lt; Domain parameters for Curve448.\n&lt; Curve not defined.\n&lt; Domain parameters for 192-bit “Koblitz” curve.\n&lt; Domain parameters for the 192-bit curve defined by FIPS …\n&lt; Domain parameters for 224-bit “Koblitz” curve.\n&lt; Domain parameters for the 224-bit curve defined by FIPS …\n&lt; Domain parameters for 256-bit “Koblitz” curve.\n&lt; Domain parameters for the 256-bit curve defined by FIPS …\n&lt; Domain parameters for the 384-bit curve defined by FIPS …\n&lt; Domain parameters for the 521-bit curve defined by FIPS …\n\\brief           This function initializes an ECP group …\n\\brief           This function sets up an ECP group context\n\\brief           This function retrieves the list of …\n\\brief           This function checks if a point is the …\n\\brief    The ECP key-pair structure.\n\\brief          Calculate the public key from a private …\n\\brief           This function frees the components of a …\n\\brief          Query the group that a key pair belongs to.\n\\brief           This function initializes a key pair as …\n\\brief           This function performs a scalar …\n\\brief           This function performs multiplication of …\n\\brief           This function performs multiplication and …\n\\brief           This function performs multiplication and …\n\\brief           The ECP point structure, in Jacobian …\n\\brief           This function compares two points.\n\\brief           This function frees the components of a …\n\\brief           This function initializes a point as zero.\n\\brief           This function imports a point from …\n\\brief           This function imports a non-zero point …\n\\brief           This function exports a point into …\n\\brief           This function reads an elliptic curve …\n\\brief          The ECP checkup routine.\n\\brief          Set the public key in a key pair object.\n\\brief           This function sets a point to the point …\n\\brief           This function sets up an ECP group …\n\\brief           This function extracts an elliptic curve …\n\\brief           This function imports a point from a TLS …\n\\brief           This function exports an elliptic curve …\n\\brief           This function exports a point as a TLS …\n\\brief           This function exports an elliptic curve …\n\\brief           This function exports an elliptic curve …\n\\brief          The GCM context structure.\n\\brief          The GCM checkup routine.\n\\brief Translate the high-level part of an Mbed TLS error …\n\\brief          RIPEMD-160 process data block (internal …\n\\brief          SHA-1 process data block (internal use …\n\\brief          This function processes a single data …\n\\brief          This function processes a single data …\n\\brief Translate the low-level part of an Mbed TLS error …\n\\brief          This function calculates the …\n\\brief          Output = MD5( input buffer )\n@brief Type defined for MD5 context\n\\brief          Checkup routine\n\\brief          MD5 context setup\n\\brief           This function clones the state of a …\nThe generic message-digest context.\nUsed internally to indicate whether a context uses legacy …\n\\brief          This function calculates the …\n\\brief           This function finishes the digest …\n\\brief           This function clears the internal …\n\\brief           This function returns the name of the …\n\\brief           This function extracts the message-digest …\n\\brief           This function extracts the message-digest …")