searchState.loadedDescShard("esp_idf_hal", 2, "@brief Type of I2C clock source.\n@brief Create and initialize an I2C commands list with a …\n@brief Create and initialize an I2C commands list with a …\n@brief Free the I2C commands list\n@brief Free the I2C commands list allocated statically …\n@brief I2C initialization parameters\n@brief Deinitialize the I2C master bus and delete the …\n@brief Deinitialize the I2C slave device\n@brief I2C device configuration\n@brief Delete I2C driver\n@brief Install an I2C driver @note  Not all Espressif …\n@brief Disable filter on I2C bus\n@brief Enable hardware filter on I2C bus Sometimes the I2C …\n@brief get I2C data transfer mode\n@brief get I2C data signal timing\n@brief Get I2C master clock period\n@brief get I2C master start signal timing\n@brief get I2C master stop signal timing\n@brief get I2C timeout value @param i2c_num I2C port number\n@brief Data structure for calculating I2C bus timing.\n@brief Add I2C master BUS device.\n@brief I2C master bus specific configurations\n@brief Type of I2C master bus handle\n@brief Reset the I2C master bus.\n@brief I2C master bus delete device\n@brief Wait for all pending I2C transactions done\n@brief An callback for I2C transaction.\n@brief Send all the queued commands on the I2C bus, in …\n@brief Type of I2C master bus device handle\n@brief Group of I2C master callbacks, can be used to get …\n@brief Data type used in I2C event callback\n@brief Enumeration for I2C event.\n&lt; i2c bus in alive status.\n&lt; i2c bus transaction done\n&lt; i2c bus nack\n&lt; i2c bus timeout\n@brief Probe I2C address, if address is correct and ACK is …\n@brief Queue a “read (multiple) bytes” command to the …\n@brief Queue a “read byte” command to the commands …\n@brief Perform a read to a device connected to a …\n@brief Perform a read transaction on the I2C bus. The …\n@brief Register I2C transaction callbacks for a master …\n@brief Queue a “START signal” to the given commands …\n@brief Enumeration for I2C fsm status.\n&lt; ack error status for current master command\n&lt; I2C command done\n&lt; idle status for current master command\n&lt; read status for current master command\n&lt; Start status for current master command\n&lt; stop status for current master command\n&lt; I2C bus status error, and operation timeout\n&lt; write status for current master command\n@brief Queue a “STOP signal” to the given commands …\n@brief Perform a write transaction on the I2C bus. The …\n@brief Perform a write-read transaction on the I2C bus. …\n@brief Queue a “write (multiple) bytes” command to the …\n@brief Queue a “write byte” command to the commands …\n@brief Perform a write followed by a read to a device on …\n@brief Perform a write to a device connected to a …\n&lt; I2C master mode\n&lt; I2C slave mode\n@brief Allocate an I2C master bus\n@brief Initialize an I2C slave device\n@brief Configure an I2C bus with the given configuration.\n&lt; I2C port number, <code>-1</code> for auto selecting\n&lt; I2C port number, <code>-1</code> for auto selecting\n@brief I2C port number.\n@brief I2C port number, can be I2C_NUM_0 ~ (I2C_NUM_MAX-1).\n&lt; I2C port 0\n&lt; I2C port max\n@brief reset I2C rx fifo\n@brief reset I2C tx hardware fifo\n&lt; I2C read data\n&lt; I2C write data\n@brief set I2C data transfer mode\n@brief set I2C data signal timing\n@brief Set I2C master clock period\n@brief Configure GPIO pins for I2C SCK and SDA signals.\n@brief set I2C master start signal timing\n@brief set I2C master stop signal timing\n@brief set I2C timeout value @param i2c_num I2C port number\n@brief I2C slave specific configurations\n@brief Type of I2C slave device handle\n@brief Group of I2C slave callbacks (e.g. get i2c slave …\n@brief Read bytes from I2C internal buffer. When the I2C …\n@brief Read bytes from I2C internal ram. This can be only …\n@brief Read bytes from I2C internal buffer. Start a job to …\n@brief Callback signature for I2C slave.\n@brief Set I2C slave event callbacks for I2C slave channel.\n@brief Event structure used in I2C slave\n@brief Callback signature for I2C slave stretch.\n@brief Enum for I2C slave stretch causes\n&lt; Stretching SCL low when the slave is read by the master …\n&lt; Stretching SCL low when RX FIFO is full in slave mode\n&lt; Stretching SCL low when slave sending ACK\n&lt; Stretching SCL low when TX FIFO is empty in slave mode\n@brief Stretch cause event structure used in I2C slave\n@brief Write bytes to internal ringbuffer of the I2C slave …\n@brief Write bytes to internal ringbuffer of the I2C slave …\n@brief Write bytes to I2C internal ram. This can be only …\n&lt; I2C data lsb first\n&lt; I2C data msb first\n@brief I2S bit width per chan.\n&lt; channel bit-width: 16\n&lt; channel bit-width: 24\n&lt; channel bit-width: 32\n&lt; channel bit-width: 8\n&lt; channel bit-width equals to data bit-width\n@brief I2S bit width per sample.\n&lt; data bit-width: 16\n&lt; data bit-width: 24\n&lt; data bit-width: 32\n&lt; data bit-width: 8\n@brief I2S controller channel configuration\n@brief I2S channel information\n@brief Disable the I2S channel @note  Only allowed to be …\n@brief Enable the I2S channel @note  Only allowed to be …\n@brief I2S channel format type\n&lt; Load left channel data in both two channels\n&lt; Load right channel data in both two channels\n&lt; More than two channels are used\n&lt; Only load data in left channel (mono mode)\n&lt; Only load data in right channel (mono mode)\n&lt; Separated left and right channel\n@brief Get I2S channel information\n@brief Initialize I2S channel to PDM TX mode @note  Only …\n@brief Initialize I2S channel to standard mode @note  Only …\n@brief Initialize I2S channel to TDM mode @note  Only …\n@brief Preload the data into TX DMA buffer @note  Only …\n@brief I2S read data @note  Only allowed to be called when …\n@brief Reconfigure the I2S clock for PDM TX mode @note  …\n@brief Reconfigure the I2S GPIO for PDM TX mode @note  …\n@brief Reconfigure the I2S slot for PDM TX mode @note  …\n@brief Reconfigure the I2S clock for standard mode @note  …\n@brief Reconfigure the I2S GPIO for standard mode @note  …\n@brief Reconfigure the I2S slot for standard mode @note  …\n@brief Reconfigure the I2S clock for TDM mode @note  Only …\n@brief Reconfigure the I2S GPIO for TDM mode @note  Only …\n@brief Reconfigure the I2S slot for TDM mode @note  Only …\n@brief Set event callbacks for I2S channel\n@brief I2S channel.\n&lt; I2S channel (mono), one channel activated. In this mode, …\n&lt; I2S channel (stereo), two (or more) channels activated. …\n&lt; I2S channel 0 activated\n&lt; I2S channel 1 activated\n&lt; I2S channel 10 activated\n&lt; I2S channel 11 activated\n&lt; I2S channel 12 activated\n&lt; I2S channel 13 activated\n&lt; I2S channel 14 activated\n&lt; I2S channel 15 activated\n&lt; I2S channel 2 activated\n&lt; I2S channel 3 activated\n&lt; I2S channel 4 activated\n&lt; I2S channel 5 activated\n&lt; I2S channel 6 activated\n&lt; I2S channel 7 activated\n&lt; I2S channel 8 activated\n&lt; I2S channel 9 activated\n@brief I2S write data @note  Only allowed to be called …\n@brief I2S clock source enum\n@brief I2S communication standard format\n&lt; I2S communication format I2S, correspond to …\n&lt; I2S format LSB, (I2S_COMM_FORMAT_I2S …\n&lt; I2S format MSB, (I2S_COMM_FORMAT_I2S …\n&lt; I2S communication format PCM, correspond to …\n&lt; PCM Long, (I2S_COMM_FORMAT_PCM | …\n&lt; PCM Short, (I2S_COMM_FORMAT_PCM | …\n&lt; I2S communication I2S Philips standard, data launch at …\n&lt; standard max\n&lt; I2S communication MSB alignment standard, data launch at …\n&lt; PCM Long standard. The period of synchronization signal …\n&lt; PCM Short standard, also known as DSP mode. The period …\n@brief I2S controller communication mode\n&lt; Unspecified I2S controller mode\n&lt; I2S controller using PDM communication mode, support PDM …\n&lt; I2S controller using standard communication mode, …\n&lt; I2S controller using TDM communication mode, support up …\n@brief I2S driver configuration parameters\n@brief Available data bit width in one slot\n&lt; I2S channel data bit-width: 16\n&lt; I2S channel data bit-width: 24\n&lt; I2S channel data bit-width: 32\n&lt; I2S channel data bit-width: 8\n@brief Delete the I2S channel @note  Only allowed to be …\n@brief I2S channel direction\n&lt; I2S channel direction RX\n&lt; I2S channel direction TX\n@brief I2S driver configuration parameters\n@brief Install and start I2S driver.\n@brief Uninstall I2S driver.\n@brief Group of I2S callbacks @note The callbacks are all …\n@brief Event structure used in I2S event queue\n@brief Event structure used in I2S event queue\n@brief I2S event queue types\n&lt; I2S DMA has no next descriptor for sending or receiving\n&lt; I2S DMA finished receiving one DMA buffer\n&lt; I2S DMA receive queue overflowed, the oldest data has …\n&lt; I2S DMA finished sending one DMA buffer\n&lt; I2S DMA sending queue overflowed, the oldest data has …\n@brief get clock set on particular port number.\n@brief I2S event callback @param[in] handle    I2S channel …\n@brief The multiple of MCLK to sample rate\n&lt; MCLK = sample_rate * 128\n&lt; MCLK = sample_rate * 256\n&lt; MCLK = sample_rate * 384\n&lt; MCLK = sample_rate * 512\n@brief I2S Mode\n&lt; Master mode\n&lt; I2S PDM mode\n&lt; RX mode\n&lt; Slave mode\n&lt; TX mode\n@brief Allocate new I2S channel(s) @note  The new created …\n@brief I2S PCM configuration\n@brief A/U-law decompress or compress configuration.\n&lt; A-law compress\n&lt; A-law decompress\n&lt; Disable A/U law decompress or compress\n&lt; U-law compress\n&lt; U-law decompress\n@brief Configure I2S a/u-law decompress or compress\n@brief pdm tx singnal scaling mode\n&lt; I2S TX PDM signal scaling: /2\n&lt; I2S TX PDM signal scaling: x1\n&lt; I2S TX PDM signal scaling: x2\n&lt; I2S TX PDM signal scaling: x4\n@brief I2S slot select in PDM mode\n&lt; I2S PDM transmits or receives both two slots\n&lt; I2S PDM only transmits or receives the PDM device whose …\n&lt; I2S PDM only transmits or receives the PDM device whose …\n@brief I2S clock configuration for PDM TX mode\n@brief I2S PDM TX mode major configuration that including …\n@brief I2S PDM TX mode GPIO pins configuration\n@brief PDM TX line mode @note  For the standard codec …\n&lt; Standard PDM format output, left and right slot data on …\n&lt; PDM DAC format output, left or right slot data on a …\n&lt; PDM DAC format output, left and right slot data on …\n@brief I2S slot configuration for PDM TX mode\n@brief I2S PDM up-sample rate configuration @note  TX PDM …\n@brief I2S GPIO pins configuration\n@brief I2S controller port number, the max port number is …\n&lt; I2S controller port 0\n&lt; Select whichever port is available\n@brief Read data from I2S DMA receive buffer\n@brief I2S controller role\n&lt; I2S controller master role, bclk and ws signal will be …\n&lt; I2S controller slave role, bclk and ws signal will be …\n@brief Set clock &amp; bit width used for I2S RX and TX.\n@brief Set TX PDM mode up-sample rate @note  If you have …\n@brief Set I2S pin number\n@brief Set sample rate used for I2S RX and TX.\n@brief Total slot bit width in one slot\n&lt; I2S channel slot bit-width: 16\n&lt; I2S channel slot bit-width: 24\n&lt; I2S channel slot bit-width: 32\n&lt; I2S channel slot bit-width: 8\n&lt; I2S channel slot bit-width equals to data bit-width\n@brief I2S channel slot mode\n&lt; I2S channel slot format mono, transmit same data in all …\n&lt; I2S channel slot format stereo, transmit different data …\n@brief Start I2S driver\n@brief I2S clock configuration for standard mode\n@brief I2S standard mode major configuration that …\n@brief I2S standard mode GPIO pins configuration\n@brief I2S slot configuration for standard mode\n@brief I2S slot select in standard mode @note  It has …\n&lt; I2S transmits or receives both left and right slot\n&lt; I2S transmits or receives left slot\n&lt; I2S transmits or receives right slot\n@brief Stop I2S driver\n@brief I2S clock configuration for TDM mode\n@brief I2S TDM mode major configuration that including …\n@brief I2S TDM mode GPIO pins configuration\n@brief I2S slot configuration for TDM mode\n@brief tdm slot number @note  Multiple slots in TDM mode. …\n&lt; I2S slot 0 enabled\n&lt; I2S slot 1 enabled\n&lt; I2S slot 10 enabled\n&lt; I2S slot 11 enabled\n&lt; I2S slot 12 enabled\n&lt; I2S slot 13 enabled\n&lt; I2S slot 14 enabled\n&lt; I2S slot 15 enabled\n&lt; I2S slot 2 enabled\n&lt; I2S slot 3 enabled\n&lt; I2S slot 4 enabled\n&lt; I2S slot 5 enabled\n&lt; I2S slot 6 enabled\n&lt; I2S slot 7 enabled\n&lt; I2S slot 8 enabled\n&lt; I2S slot 9 enabled\n@brief Write data to I2S DMA transmit buffer.\n@brief Write data to I2S DMA transmit buffer while …\n@brief Zero the contents of the TX DMA buffer.\n&lt; An internal group identifier.\n&lt; I2S port id\n&lt; I2S port id\n&lt; Gatt id, include uuid and instance\n&lt; 11 or 29 bit identifier\n&lt; Version IDF\n&lt; Version IDF\n&lt; Bitmask of the core whose idle task should be subscribed …\n&lt; RMT idle level\n&lt; RMT idle level output enable\n&lt; RMT RX idle threshold\n&lt; textual description of the interface\n&lt; textual description of the interface\nFor incoming packets, this contains the input netif’s …\n&lt; string identifier of the interface\n&lt; string identifier of the interface\n&lt; The name of interface for data to go through. Use the …\n&lt; The name of interface for data to go through. Use the …\n&lt; The name of interface for data to go through. Use the …\n&lt; The name of interface for data to go through. Use the …\n&lt; Wi-Fi interface that peer uses to send/receive ESPNOW …\n&lt; Wi-Fi interface that peer uses to send/receive ESPNOW …\n&lt; WiFi interface to send request to\n&lt; WiFi interface to send request to\nThis function could be called to add or delete an entry in …\nFlag indicating if Session Context changes should be …\nFlag indicating if Session Context changes should be …\nThis variable is initialized by the system to contain the …\n&lt; The end handle of the service which has been included\n&lt; The start handle of the service which has been included\n&lt; Advertising data include device name or not\n&lt; Advertising data include TX power\n&lt; refresh server list after this server (if …\n&lt; refresh server list after this server (if …\n&lt; Inherit this configuration further\n@brief Initialize Ethernet MAC\n@brief Initialize Ethernet PHY\nFunction for initializing/allocating security …\n@brief Initialize Ethernet MAC\n@brief Custom driver SPI Initialization\n@brief Initialize Ethernet PHY\n&lt; Host function to initialize the driver\n&lt; disk initialization function\nFunction for initializing/allocating security …\n@brief Initialize LCD panel\n&lt; Initiator’s NAN Data Interface MAC\nThis function is called by the network device driver to …\n&lt; Maximum data valid time of slave. The time required …\n&lt; input delay phase, this will only take into effect when …\n&lt; Own service instance id\n&lt; Our Service Identifier\n&lt; Instance id\n&lt; advertising handle\n&lt; Interrupt GPIO number, set -1 to not use interrupt and …\n&lt; Interrupt GPIO number, set -1 to not use interrupt and …\n&lt; Interrupt GPIO number, set -1 to not use interrupt and …\n&lt; Integer part of division\n&lt; Netif index, interface=0 means NETIF_NO_INDEX\n&lt; connection interval\n&lt; connection interval\n&lt; ext adv maximum interval\n&lt; maximum interval\n&lt; periodic advertising maximum interval\n&lt; ext adv minimum interval\n&lt; minimum interval\n&lt; periodic advertising minimum interval\n&lt; Milliseconds between each ping procedure\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n&lt; Flags used to allocate the interrupt. One or multiple …\n&lt; Flags used to allocate the interrupt. One or multiple …\n&lt; UART interrupt enable mask, choose from …\n&lt; Interrupt flag for the bus to set the priority, and IRAM …\n&lt; Interrupt flags to set the priority of the driver’s …\nHandle to an interrupt handler\nGet the interrupt handler function for the given CPU …\nGet the interrupt handler argument associated with the …\nSet the interrupt handler function for the given CPU …\nCallback type of the interrupt handler\nthis function will be removed in later, please use …\n@brief  Attach an CPU interrupt to a hardware source. We …\n&lt; GPTimer interrupt priority, if set to 0, the driver will …\n&lt; I2C interrupt priority, if set to 0, driver will select …\n&lt; I2C interrupt priority, if set to 0, driver will select …\n&lt; I2S interrupt priority, range [0, 7], if set to 0, the …\n&lt; MCPWM timer interrupt priority, if set to 0, the driver …\n&lt; MCPWM operator interrupt priority, if set to 0, the …\n&lt; MCPWM comparator interrupt priority, if set to 0, the …\n&lt; MCPWM GPIO fault interrupt priority, if set to 0, the …\n&lt; MCPWM capture interrupt priority, if set to 0, the …\n&lt; RMT interrupt priority, if set to 0, the driver will try …\n&lt; RMT interrupt priority, if set to 0, the driver will try …\n&lt; GPIO interrupt type\n&lt; configure interrupt, Fade interrupt enable  or Fade …\n&lt; Interrupt mode\n@brief Invert the color (bit 1 -&gt; 0 for color data line, …\n&lt; GPIO pin invert flags\n&lt; GPIO pin invert flags\n&lt; GPIO pin invert flags\n&lt; Host function to enable SDIO interrupt line\n&lt; Host function to wait for SDIO interrupt line to be …\n&lt; Flash working mode when <code>SPI_FLASH_IGNORE_BASEIO</code> is …\n&lt; I/O voltage used by the controller (voltage switching is …\n&lt; ioctl without context pointer\n&lt; function to get info about disk and do some misc …\n&lt; ioctl with context pointer\n&lt; IPV4 address of DNS server\n&lt; Interface IPV4 address\n&lt; Interface IPV6 address\n&lt; IP address which was assigned to the station\n&lt; Clients IP address\n&lt; IPv4 address type\n&lt; IP address\nThis is the aligned version of ip4_addr_t, used as local …\nip4_addr_t uses a struct for convenience only, so that the …\nreturns ptr to static buffer; not reentrant!\n&lt; IPv6 address type\nThis is the aligned version of ip6_addr_t, used as local …\nArray of IPv6 addresses for this netif.\nThe state of each IPv6 address (Tentative, Preferred, etc).\nIPv6 address\nRemaining valid and preferred lifetime of each IPv6 …\nis this netif enabled for IPv6 autoconfiguration\n&lt; IPv6 address of the interface\nreturns ptr to static buffer; not reentrant!\n@ingroup ipaddr A union struct for both IP version’s …\nIP address configuration in network byte order\nIP Address received by station\n@ingroup ipaddr A union struct for both IP version’s …\n&lt; Whether the assigned IP has changed or not\nEvent structure for ADD_IP6 event\nEvent structure for IP_EVENT_AP_STAIPASSIGNED event\nEvent structure for IP_EVENT_GOT_IP6 event\n@brief Event structure for IP_EVENT_GOT_IP event\nIP event declarations\n&lt; soft-AP assign an IP to a connected station\n&lt; ethernet got IP from connected AP\n&lt; ethernet lost IP and the IP is reset to 0\n&lt; station or ap or ethernet interface v6IP addr is …\n&lt; PPP interface got IP\n&lt; PPP interface lost IP\n&lt; station got IP from connected AP\n&lt; station lost IP and the IP is reset to 0\n&lt; set the IP event id on which we refresh server list (if …\n&lt; set the IP event id on which we refresh server list (if …\nGlobal variables of this module, kept in a struct for …\n&lt; IPv6 address index\n&lt; initial ip address for this interface\n&lt; IP address, netmask, gatway IP address\n&lt; initial ip address for this interface\n&lt; the 16 bits of the ir value\n&lt; The irk value\n&lt; the 16 bits of the ir key value\n&lt; Set asynchronous mode, only supported with HTTPS for now\n&lt; status\n&lt; The gattc command queue is full or not\n&lt; The value is too long or not\n&lt; flag to identify mesh child\n&lt; flag to identify mesh child\n&lt; flag to identify mesh child\n&lt; flag to identify mesh child\n&lt; True means notify, false means indicate\n&lt; Use non-TLS connection: When set to true, the esp-tls …\n&lt; Use non-TLS connection: When set to true, the esp-tls …\n&lt; This write operation is prepare write\n&lt; This service is primary or not\n&lt; The service flag, true if the service is primary …\n&lt; True if this is the primary service\n&lt; if true, rc_addr shall be specified (Unimplemented). if …\n&lt; whether current mesh network has a root\n&lt; type of “sem” is SemaphoreHandle_t when true, …\nFlag for indicating a WebSocket endpoint. If this flag is …\nFlag for indicating a WebSocket endpoint. If this flag is …\n&lt; Select cpu core to register SPI ISR.\n&lt; The parsed issuer data (named information object).\n&lt; The parsed issuer data (named information object).\n&lt; Optional X.509 v2/v3 issuer unique identifier.\n&lt; The raw issuer data (DER).\n&lt; The raw issuer data (DER). Used for quick comparison.\n&lt; The length of IV.\n&lt; The length of IV.\n&lt;Set jitter filter step size. Range: 0 ~ 15\n&lt;Set jitter filter step size. Range: 0 ~ 15\n&lt; Enable TCP keep-alive timeout for SSL connection\n&lt; Enable TCP keep-alive timeout for SSL connection\n&lt; Keep-alive packet retry send count\n&lt; Keep-alive packet retry send count\n&lt; Keep-alive packet retry send count. Default is 3 counts\n&lt; Keep-alive packet retry send count\n&lt; Keep-alive packet retry send count. Default is 3 counts\n&lt; Keep-alive packet retry send count\n&lt; Keep-alive packet retry send count. Default is 3 counts\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Enable keep-alive timeout\n&lt; Keep-alive idle time (second)\n&lt; Keep-alive idle time (second)\n&lt; Keep-alive idle time. Default is 5 (second)\n&lt; Keep-alive idle time (second)\n&lt; Keep-alive idle time. Default is 5 (second)\n&lt; Keep-alive idle time (second)\n&lt; Keep-alive idle time. Default is 5 (second)\n&lt; Keep-alive interval time (second)\n&lt; Keep-alive interval time (second)\n&lt; Keep-alive interval time. Default is 5 (second)\n&lt; Keep-alive interval time (second)\n&lt; Keep-alive interval time. Default is 5 (second)\n&lt; Keep-alive interval time (second)\n&lt; Keep-alive interval time. Default is 5 (second)\n&lt; <em>MQTT</em> keepalive, default is 120 seconds When configuring …\n&lt; key in PSK authentication mode in binary format\n&lt; key in PSK authentication mode in binary format\n&lt; Private key for SSL mutual authentication, not required …\n&lt; Key of stored key-value pair\n&lt; Link key associated with peer device.\n&lt; Pointers to the key digests\n&lt; Length of the buffer pointed to by key.\n&lt; the key mask to indicate witch key is present\n&lt; passkey notification\n&lt; Client key decryption password, not PEM nor DER, if …\n&lt; Length of the password pointed to by <code>key_password</code>\n&lt; Valid link key value in key element\n&lt; length of the key\n&lt; length of the key\n&lt; The key size(7~16) of the security link\n&lt; The key size of the security link\n&lt; key type of the security link\n&lt; The type of Link Key\n&lt; partition label, zero-terminated ASCII string\n&lt;  Size of the largest free block in the heap. This is the …\n&lt; error code (based on ESP_ERR_ESP_TLS_BASE) of the last …\n&lt; error code (based on ESP_ERR_ESP_TLS_BASE) of the last …\n&lt; Last will configuration\n&lt; Slave latency for the connection in number of connection …\n&lt; Slave latency for the connection in number of connection …\n&lt; ext scan type\n&lt; Slave latency for the connection in number of connection …\n&lt; Slave latency for the connection in number of connection …\n&lt; the current layer of this node\n&lt; current layer of this node\n&lt; the capacity of layer2 node, total child numbers plus 1, …\n&lt; layer_cap = max_layer - layer, indicates the number of …\n&lt; max layer of the network\n&lt; layer change\n&lt; Bit-width of LCD command\n&lt; Bit-width of LCD command\n@brief LCD color range\n&lt; Full color range\n&lt; Limited color range\n@brief RGB color endian\n@brief LCD color space\n&lt; Color space: RGB\n&lt; Color space: YUV\n&lt; Bit-width of LCD parameter\n&lt; Bit-width of LCD parameter\n@brief RGB data endian\n&lt; RGB data endian: MSB first\n&lt; RGB data endian: LSB first\n@brief RGB color endian\n&lt; RGB element order: BGR\n&lt; RGB element order: RGB\n@brief The standard used for conversion between RGB and YUV\n&lt; YUV&lt;-&gt;RGB conversion standard: BT.601\n&lt; YUV&lt;-&gt;RGB conversion standard: BT.709\n@brief YUV sampling method\n&lt; YUV 4:1:1 sampling\n&lt; YUV 4:2:0 sampling\n&lt; YUV 4:2:2 sampling\n&lt; local device CSRK = d1(ER,DIV,1)\n&lt; the number of current connected leaves\n&lt; the maximum number of leaves in the mesh network\n@brief Bind LEDC channel with the selected timer\n@brief LEDC callback event type\n&lt; LEDC fade end event\n@brief LEDC callback parameter\n@brief LEDC callback registration function\n@brief Type of LEDC event callback @param param LEDC …\n@brief Group of supported LEDC callbacks @note The …\n@brief LEDC channel configuration Configure LEDC channel …\n@brief Configuration parameters of LEDC channel for …\n&lt; LEDC channel 0\n&lt; LEDC channel 1\n&lt; LEDC channel 2\n&lt; LEDC channel 3\n&lt; LEDC channel 4\n&lt; LEDC channel 5\n@brief Type of LEDC clock source, reserved for the legacy …\n@brief LEDC timer-specific clock sources\n&lt; LEDC timer clock divided from APB clock (80Mhz)\n&lt; Selecting this value for LEDC_TICK_SEL_TIMER let the …\n&lt; LEDC duty decrease direction\n&lt; LEDC duty increase direction\n@brief Install LEDC fade function. This function will …\n@brief Uninstall LEDC fade function.\n&lt; LEDC fade function will return immediately\n&lt; LEDC fade function will block until fading to the target …\n@brief Start LEDC fading.\n@brief Stop LEDC fading. The duty of the channel is …\n@brief Helper function to find the maximum possible duty …\n@brief LEDC get duty This function returns the duty at the …\n@brief      LEDC get channel frequency (Hz)\n@brief LEDC get hpoint value, the counter value when the …\n&lt; Disable LEDC interrupt\n&lt; Enable LEDC interrupt\n@brief Register LEDC interrupt handler, the handler is an …\n&lt; LEDC low speed speed_mode\n&lt; LEDC speed limit\n@brief LEDC set duty This function do not change the …\n@brief A thread-safe API to set duty for LEDC channel and …\n@brief LEDC set duty and hpoint value Only after calling …\n@brief LEDC set gradient Set LEDC gradient, After the …\n@brief A thread-safe API to set and start LEDC fade …\n@brief A thread-safe API to set and start LEDC fade …\n@brief Set LEDC fade function.\n@brief Set LEDC fade function, with a limited time.\n@brief LEDC set channel frequency (Hz)\n@brief Set LEDC output gpio.\n@brief LEDC global clock sources\n&lt; LEDC low speed timer clock source is 80MHz APB clock\n&lt; LEDC low speed timer clock source is RC_FAST clock\n&lt; Alias of ‘LEDC_SLOW_CLK_RC_FAST’\n&lt; LEDC low speed timer clock source XTAL clock\n@brief LEDC stop. Disable LEDC output, and set idle level\n&lt; LEDC PWM duty resolution of 10 bits\n&lt; LEDC PWM duty resolution of 11 bits\n&lt; LEDC PWM duty resolution of 12 bits\n&lt; LEDC PWM duty resolution of 13 bits\n&lt; LEDC PWM duty resolution of 14 bits\n&lt; LEDC PWM duty resolution of  1 bits\n&lt; LEDC PWM duty resolution of  2 bits\n&lt; LEDC PWM duty resolution of  3 bits\n&lt; LEDC PWM duty resolution of  4 bits\n&lt; LEDC PWM duty resolution of  5 bits\n&lt; LEDC PWM duty resolution of  6 bits\n&lt; LEDC PWM duty resolution of  7 bits\n&lt; LEDC PWM duty resolution of  8 bits\n&lt; LEDC PWM duty resolution of  9 bits\n@brief LEDC timer configuration Configure LEDC timer with …\n@brief Configuration parameters of LEDC timer for …\n@brief Pause LEDC timer counter\n@brief Resume LEDC timer\n@brief Reset LEDC timer\n@brief Configure LEDC settings\n&lt; LEDC timer 0\n&lt; LEDC timer 1\n&lt; LEDC timer 2\n&lt; LEDC timer 3\n@brief LEDC update channel parameters\n&lt; Set to enable left alignment\n&lt; Set to enable left alignment\n&lt; Set to enable left alignment\n&lt; Set true to enable left alignment\n&lt; ASN1 length, in octets.\n&lt; ASN1 length, in octets.\n&lt; Length of the WebSocket data\nLength (in bytes) of the proof of possession data\nLength (in bytes) of the proof of possession data\n&lt; valid length of CSI data\n&lt; element length, the length after this member\n&lt; option length\nlength of this buffer\n&lt; ASN1 length, in octets.\n&lt; ASN1 length, in octets.\n&lt; Length of the WebSocket data\nLength (in bytes) of the proof of possession data\n&lt; UUID length, 16bit, 32bit or 128bit\n&lt; Gatt attribute value length\n&lt; The write attribute value length\n&lt; The indication or notification value length, len is …\n&lt;  length in bytes of payload data in each packet\n&lt;  length in bytes of payload data in each packet\n&lt; local encryption reproduction keys LTK = = d1(ER,DIV,0)\n&lt; Length of all bytes in the element data following this …\n&lt; Total data length, in bits\n&lt; Total data length, in bits\n&lt; The length of device_info\n&lt; Current length of the element\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Enter light sleep when no locks are taken\n&lt; Size limit for the outbox in bytes.\n&lt; PDM TX line mode, one-line codec, one-line dac, two-line …\n&lt; linger timeout (in seconds)\n&lt; linger timeout (in seconds)\n&lt; link without context pointer\n&lt; link with context pointer\nA hack to make sure that a few patches to the ESP-IDF …\n&lt; Link role : master role = 0  ; slave role = 1\n&lt; Link role : master role = 0  ; slave role = 1\nThis function is called by ethernet_output() when it wants …\n&lt; Listen interval for ESP32 station to receive beacon when …\n@brief Get the received length of a linked list, until end …\nGenerate a linked list pointing to a (huge) buffer in an …\n&lt; enable to receive legacy long training field(lltf) data. …\n&lt; ESPNOW peer local master key that is used to encrypt data\n&lt; ESPNOW peer local master key that is used to encrypt data\n&lt; Address of segment\n&lt; Event parameter of …\n&lt; Maximum loop count, only take effect for chips that is …\n&lt; Specify the times of transmission in a loop, -1 means …\n&lt; Enable sending RMT items in a loop\n@brief Sets the PHY to loopback mode\n@brief Sets the PHY to loopback mode\n&lt; Maximum number of consecutive lost beacons allowed\n&lt; Beacon lost timeout\n&lt; event id to be raised when interface losts its IP\n&lt; event id to be raised when interface losts its IP\n&lt;  low RSSI threshold. If the parent’s RSSI is lower …\n&lt; Pointer to low Vref curve of lookup table (NULL if …\n&lt; Low pass filter scaling value\n&lt; Purge “Least Recently Used” connection\n&lt; Purge “Least Recently Used” connection\n&lt; Seek without context pointer\n&lt; Seek with context pointer\n&lt; enable to generate htlft data by averaging lltf and …\n&lt; The long term key\n&lt; The long term key\n@}\n@ingroup ipaddr IP address types for use in ip_addr_t.type …\nIPv4+IPv6 (“dual-stack”)\nIPv4\nIPv6\nSymbolic constants for the ‘type’ parameters in some …\nMulticast\nUnicast\nUnknown\n&lt; initial mac address for this interface\n&lt; MAC address of the station connected to Soft-AP\n&lt; MAC address of the station disconnects to soft-AP\n&lt; MAC address of the connected client\n&lt; initial mac address for this interface\n&lt; Clients MAC address\n&lt; mac address\n&lt; source MAC address of the CSI data\n&lt; MAC address of the station connected to Soft-AP\n&lt; MAC address of the station disconnects to soft-AP\n&lt; MAC address of the station which send probe request\n&lt; mac address of the child\n@brief Ethernet MAC object\n&lt; WiFi init magic number, it should be the last field\n&lt; Magic word ESP_IMAGE_HEADER_MAGIC\n&lt; Magic number\n&lt; Magic byte ESP_BOOTLOADER_DESC_MAGIC_BYTE\n&lt; Magic word ESP_APP_DESC_MAGIC_WORD\n&lt; manually scale the CSI data by left shifting or …\n&lt; Manufacturer of the device. If empty, the default …\nBLE device manufacturer data pointer in advertisement\nBLE device manufacturer data pointer in advertisement\nBLE device manufacturer data length in advertisement\nBLE device manufacturer data length in advertisement\n&lt; Manufacturer data length\n&lt; I2C master config\n&lt; Device’s preference value to serve as NAN Master\n&lt; Comma separated filters for filtering services\n&lt; Comma separated filters for filtering services\n&lt; maximum active scan time per channel, units: …\n&lt; Max connection retries on receiving HTTP unauthorized …\n&lt; maximum ce length\n&lt; Maximal chip revision supported by image, in format: …\n!&lt; maximum number of command line arguments to parse\n!&lt; length of command line buffer, in bytes\n!&lt; maximum length of a command line. If 0, default value …\n&lt; Max number of stations allowed to connect in\n&lt; max mesh connections\n&lt; maximum number of extended advertising events\n&lt; maximum number of entries in dynamic forwarding database\n&lt; maximum number of entries in dynamic forwarding database\n&lt; maximum number of entries in static forwarding database\n&lt; maximum number of entries in static forwarding database\n&lt; The maxinum number of eventfds supported\n&lt; Max number of open files\n&lt; Maximum files that could be open at the same time.\n&lt; Max number of open files\n&lt; The max value of the denominator and numerator, …\n&lt; max frequency supported by the host\n&lt; Maximum frequency, in kHz, supported by the card\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n&lt; Maximum CPU frequency, in MHz\n!&lt; maximum length for the history\n&lt; Max connection interval\n&lt; Max connection interval\n&lt; The max value of the integral part\n&lt; Advertising data show slave preferred connection max …\n&lt; Maximum length of the element\n&lt; Max number of sockets/clients connected at any time (3 …\n&lt; Max number of sockets/clients connected at any time (3 …\n&lt; maximum number of ports the bridge can consist of\n&lt; maximum number of ports the bridge can consist of\n&lt; Max number of redirections on receiving HTTP redirect …\n&lt; Maximum allowed additional headers in HTTP response\n&lt; Maximum allowed additional headers in HTTP response\n&lt; ext adv maximum skip\n&lt; Max length of the converted data that driver can store …\n&lt; Max length of the converted data that driver can store …\n&lt; Max length of the conversion results that driver can …\n&lt; Maximum transfer size, in bytes. Defaults to 4092 if 0 …\n&lt; This field is used for getting WiFi maximum transmitting …\n&lt; Maximum allowed uri handlers\n&lt; Maximum allowed uri handlers\n&lt; I2C expected clock speed from SCL.\n\\brief           This function implements the …\nContainer for ASN1 bit strings.\nType-length-value structure that allows for ASN1 using DER.\n\\brief       Find a specific named_data entry in a …\n\\brief       Free all entries in a mbedtls_asn1_named_data …\n\\brief       Free all shallow entries in a …\n\\brief       Retrieve an AlgorithmIdentifier ASN.1 …\n\\brief       Retrieve an AlgorithmIdentifier ASN.1 …\n\\brief       Retrieve a bitstring ASN.1 tag and its value. …\n\\brief       Retrieve a bitstring ASN.1 tag without unused …\n\\brief       Retrieve a boolean ASN.1 tag and its value. …\n\\brief       Retrieve an enumerated ASN.1 tag and its …\n\\brief       Retrieve an integer ASN.1 tag and its value. …\n\\brief       Get the length of an ASN.1 element. Updates …\n\\brief       Retrieve an integer ASN.1 tag and its value. …\n\\brief       Parses and splits an ASN.1 “SEQUENCE OF ”.\n\\brief       Get the tag and length of the element. Check …\nContainer for a sequence or list of ‘named’ ASN.1 data …\nContainer for a sequence of ASN.1 items\n\\brief          Free a heap-allocated linked list …\n\\brief                Traverse an ASN.1 SEQUENCE container …\n\\brief           This function performs a CCM …\n\\brief    The CCM context-type definition. The CCM context …\n\\brief           This function encrypts a buffer using CCM.\n\\brief           This function finishes the CCM operation …\n\\brief   This function releases and clears the specified …\n\\brief           This function initializes the specified …\n\\brief          The CCM checkup routine.\n\\brief           This function declares the lengths of the …\n\\brief           This function initializes the CCM context …\n\\brief           This function performs a CCM* …\n\\brief           This function encrypts a buffer using CCM*…\n\\brief           This function starts a CCM encryption or …\n\\brief           This function feeds an input buffer into …\n\\brief           This function feeds an input buffer as …\n\\brief           This function encrypts or decrypts data …\n\\brief           This function releases and clears the …\n\\brief           This function initializes the specified …\n\\brief           The ChaCha20 checkup routine.\n\\brief           This function sets the …\n\\brief           This function sets the nonce and initial …\n\\brief           This function encrypts or decrypts data.\n\\brief           This function performs a complete …\n\\brief           This function performs a complete …\n\\brief           This function finished the …\n\\brief           This function releases and clears the …\n\\brief           This function initializes the specified …\n&lt; The mode value for performing decryption.\n&lt; The mode value for performing encryption.\n\\brief           The ChaCha20-Poly1305 checkup routine.\n\\brief           This function sets the ChaCha20-Poly1305 …\n\\brief           This function starts a ChaCha20-Poly1305 …\n\\brief           Thus function feeds data to be encrypted …\n\\brief           This function feeds additional data to be …\n\\brief               The authenticated encryption …\n\\brief               The authenticated encryption …\n\\brief               This function checks the tag for AEAD …\n\\brief               This function calculates the full …\n\\brief               This function finishes an ongoing …\n\\brief               This function starts a new CMAC …\n\\brief               This function starts a new CMAC …\n\\brief               This function feeds an input buffer …\nGeneric cipher context.\n\\brief               The generic all-in-one …\n\\brief               The generic cipher finalization …\n\\brief               This function frees and clears the …\n\\brief     Supported cipher types.\n&lt; The Triple DES cipher. \\warning 3DES is considered weak.\n&lt; The AES cipher.\n&lt; The Aria cipher.\n&lt; The Camellia cipher.\n&lt; The ChaCha20 cipher.\n&lt; The DES cipher. \\warning DES is considered weak.\n&lt; Placeholder to mark the end of cipher ID lists.\n&lt; The identity cipher, treated as a stream cipher.\n\\brief               This function retrieves the …\n\\brief               This function retrieves the …\n\\brief               This function retrieves the …\nCipher information. Allows calling cipher functions in a …\n\\brief               This function initializes a \\p ctx as …\n\\brief This function retrieves the list of ciphers …\nSupported cipher modes.\n&lt; The CBC cipher mode.\n&lt; The CCM cipher mode.\n&lt; The CCM*-no-tag cipher mode.\n&lt; The CFB cipher mode.\n&lt; The ChaCha-Poly cipher mode.\n&lt; The CTR cipher mode.\n&lt; The ECB cipher mode.\n&lt; The GCM cipher mode.\n&lt; The SP800-38F KW mode\n&lt; The SP800-38F KWP mode\n&lt; None.\n&lt; The OFB cipher mode.\n&lt; The stream cipher mode.\n&lt; The XTS cipher mode.\nSupported cipher padding types.\n&lt; Never pad (full blocks only).\n&lt; ISO/IEC 7816-4 padding.\n&lt; PKCS7 padding (default).\n&lt; Zero padding (not reversible).\n&lt; ANSI X.923 padding.\n\\brief         This function resets the cipher state.\n\\brief           This function sets the initialization …\n\\brief               This function sets the padding mode, …\n\\brief               This function sets the key to use …\n\\brief               This function prepares a cipher …\n\\brief     Supported {cipher type, cipher mode} pairs.\n&lt; AES cipher with 128-bit CBC mode.\n&lt; AES cipher with 128-bit CCM mode.\n&lt; AES cipher with 128-bit CCM_STAR_NO_TAG mode.\n&lt; AES cipher with 128-bit CFB128 mode.\n&lt; AES cipher with 128-bit CTR mode.\n&lt; AES cipher with 128-bit ECB mode.\n&lt; AES cipher with 128-bit GCM mode.\n&lt; AES cipher with 128-bit NIST KW mode.\n&lt; AES cipher with 128-bit NIST KWP mode.\n&lt; AES 128-bit cipher in OFB mode.\n&lt; AES 128-bit cipher in XTS block mode.\n&lt; AES cipher with 192-bit CBC mode.\n&lt; AES cipher with 192-bit CCM mode.\n&lt; AES cipher with 192-bit CCM_STAR_NO_TAG mode.\n&lt; AES cipher with 192-bit CFB128 mode.\n&lt; AES cipher with 192-bit CTR mode.\n&lt; AES cipher with 192-bit ECB mode.\n&lt; AES cipher with 192-bit GCM mode.\n&lt; AES cipher with 192-bit NIST KW mode.\n&lt; AES cipher with 192-bit NIST KWP mode.\n&lt; AES 192-bit cipher in OFB mode.\n&lt; AES cipher with 256-bit CBC mode.\n&lt; AES cipher with 256-bit CCM mode.\n&lt; AES cipher with 256-bit CCM_STAR_NO_TAG mode.\n&lt; AES cipher with 256-bit CFB128 mode.\n&lt; AES cipher with 256-bit CTR mode.\n&lt; AES cipher with 256-bit ECB mode.\n&lt; AES cipher with 256-bit GCM mode.\n&lt; AES cipher with 256-bit NIST KW mode.\n&lt; AES cipher with 256-bit NIST KWP mode.\n&lt; AES 256-bit cipher in OFB mode.\n&lt; AES 256-bit cipher in XTS block mode.\n&lt; Aria cipher with 128-bit key and CBC mode.\n&lt; Aria cipher with 128-bit key and CCM mode.\n&lt; Aria cipher with 128-bit key and CCM_STAR_NO_TAG mode.\n&lt; Aria cipher with 128-bit key and CFB-128 mode.\n&lt; Aria cipher with 128-bit key and CTR mode.\n&lt; Aria cipher with 128-bit key and ECB mode.\n&lt; Aria cipher with 128-bit key and GCM mode.\n&lt; Aria cipher with 192-bit key and CBC mode.\n&lt; Aria cipher with 192-bit key and CCM mode.\n&lt; Aria cipher with 192-bit key and CCM_STAR_NO_TAG mode.\n&lt; Aria cipher with 192-bit key and CFB-128 mode.\n&lt; Aria cipher with 192-bit key and CTR mode.\n&lt; Aria cipher with 192-bit key and ECB mode.\n&lt; Aria cipher with 192-bit key and GCM mode.\n&lt; Aria cipher with 256-bit key and CBC mode.\n&lt; Aria cipher with 256-bit key and CCM mode.\n&lt; Aria cipher with 256-bit key and CCM_STAR_NO_TAG mode.\n&lt; Aria cipher with 256-bit key and CFB-128 mode.\n&lt; Aria cipher with 256-bit key and CTR mode.\n&lt; Aria cipher with 256-bit key and ECB mode.\n&lt; Aria cipher with 256-bit key and GCM mode.\n&lt; Camellia cipher with 128-bit CBC mode.\n&lt; Camellia cipher with 128-bit CCM mode.\n&lt; Camellia cipher with 128-bit CCM_STAR_NO_TAG mode.\n&lt; Camellia cipher with 128-bit CFB128 mode.\n&lt; Camellia cipher with 128-bit CTR mode.\n&lt; Camellia cipher with 128-bit ECB mode.\n&lt; Camellia cipher with 128-bit GCM mode.\n&lt; Camellia cipher with 192-bit CBC mode.\n&lt; Camellia cipher with 192-bit CCM mode.\n&lt; Camellia cipher with 192-bit CCM_STAR_NO_TAG mode.\n&lt; Camellia cipher with 192-bit CFB128 mode.\n&lt; Camellia cipher with 192-bit CTR mode.\n&lt; Camellia cipher with 192-bit ECB mode.\n&lt; Camellia cipher with 192-bit GCM mode.\n&lt; Camellia cipher with 256-bit CBC mode.\n&lt; Camellia cipher with 256-bit CCM mode.\n&lt; Camellia cipher with 256-bit CCM_STAR_NO_TAG mode.\n&lt; Camellia cipher with 256-bit CFB128 mode.\n&lt; Camellia cipher with 256-bit CTR mode.\n&lt; Camellia cipher with 256-bit ECB mode.\n&lt; Camellia cipher with 256-bit GCM mode.\n&lt; ChaCha20 stream cipher.\n&lt; ChaCha20-Poly1305 AEAD cipher.\n&lt; DES cipher with CBC mode. \\warning DES is considered …\n&lt; DES cipher with ECB mode. \\warning DES is considered …\n&lt; DES cipher with EDE3 CBC mode. \\warning 3DES is …\n&lt; DES cipher with EDE3 ECB mode. \\warning 3DES is …\n&lt; DES cipher with EDE CBC mode. \\warning 3DES is …\n&lt; DES cipher with EDE ECB mode. \\warning 3DES is …\n&lt; Placeholder to mark the end of cipher-pair lists.\n&lt; The identity stream cipher.\n\\brief               The generic cipher update function. …\n\\brief               This function adds additional data …\n\\brief               This function writes a tag for AEAD …\nThe CMAC context structure.\n\\brief          The CMAC checkup routine.\n\\brief           This function derives and exports the …\n\\brief          Check whether a given group can be used …\n\\brief           This function computes the shared secret.\n\\warning         Performing multiple operations …\nThe context used by the default ECDH implementation.\n\\brief           This function frees a context.\n\\brief           This function generates an ECDH keypair …\n\\brief          Return the ECP group for provided context.\n\\brief           This function sets up an ECDH context …\n\\brief           This function initializes an ECDH context.\n\\brief           This function generates an EC key pair …\n\\brief           This function generates a public key and …\n\\brief           This function parses the ECDHE parameters …\n\\brief       This function parses and processes the ECDHE …\n\\brief           This function sets up the ECDH context …\nDefines the source of the imported EC key.\n&lt; Our key.\n&lt; The key of the peer.\nDefines the ECDH implementation used.\n&lt; The default Mbed TLS implementation\n&lt; Implementation not defined.\n\\brief          This function checks whether a given group …\n\\brief           The ECDSA context structure.\n\\brief           This function frees an ECDSA context.\n\\brief           This function sets up an ECDSA context …\n\\brief          This function generates an ECDSA keypair …\n\\brief           This function initializes an ECDSA …\n\\brief           This function reads and verifies an ECDSA …\n\\brief           This function reads and verifies an ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief               This function computes the ECDSA …\n\\brief               This function computes the ECDSA …\n\\brief           This function verifies the ECDSA …\n\\brief           This function verifies the ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief           Check if an ECJPAKE context is ready for …\nEC J-PAKE context structure.\n\\brief           Derive the shared secret (TLS: Pre-Master …\n\\brief           This clears an ECJPAKE context and frees …\n\\brief           Initialize an ECJPAKE context.\n\\brief           Read and process the first round message …\n\\brief           Read and process the second round message …\nRoles in the EC J-PAKE exchange\n&lt; Client\n&lt; Undefined\n&lt; Server\n\\brief          Checkup routine\n\\brief               Set the point format for future reads …\n\\brief           Set up an ECJPAKE context for use.\n\\brief           Generate and write the first round message\n\\brief           Generate and write the second round …\n\\brief           Write the shared key material to be …\n\\brief           This function checks that an \\c …\n\\brief           This function checks that the keypair …\n\\brief           This function checks that a point is a …\n\\brief           This function copies the contents of …\nCurve information, for use by other modules.\n\\brief           This function retrieves curve information …\n\\brief           This function retrieves curve information …\n\\brief           This function retrieves curve information …\n\\brief           This function retrieves the information …\n\\brief           This function exports generic key-pair …\n\\brief           This function generates an ECP key.\n\\brief           This function generates an ECP keypair.\n\\brief           This function generates a keypair with a …\n\\brief           This function generates a private key.\n\\brief           The ECP group structure.\n\\brief           This function copies the contents of …\n\\brief           This function frees the components of an …\nDomain-parameter identifiers: curve, subgroup, and …\n&lt; Domain parameters for 256-bit Brainpool curve.\n&lt; Domain parameters for 384-bit Brainpool curve.\n&lt; Domain parameters for 512-bit Brainpool curve.\n&lt; Domain parameters for Curve25519.\n&lt; Domain parameters for Curve448.\n&lt; Curve not defined.\n&lt; Domain parameters for 192-bit “Koblitz” curve.\n&lt; Domain parameters for the 192-bit curve defined by FIPS …\n&lt; Domain parameters for 224-bit “Koblitz” curve.\n&lt; Domain parameters for the 224-bit curve defined by FIPS …\n&lt; Domain parameters for 256-bit “Koblitz” curve.\n&lt; Domain parameters for the 256-bit curve defined by FIPS …\n&lt; Domain parameters for the 384-bit curve defined by FIPS …\n&lt; Domain parameters for the 521-bit curve defined by FIPS …\n\\brief           This function initializes an ECP group …\n\\brief           This function sets up an ECP group context\n\\brief           This function retrieves the list of …\n\\brief           This function checks if a point is the …\n\\brief    The ECP key-pair structure.\n\\brief          Calculate the public key from a private …\n\\brief           This function frees the components of a …\n\\brief          Query the group that a key pair belongs to.\n\\brief           This function initializes a key pair as …\n\\brief           This function performs a scalar …\n\\brief           This function performs multiplication of …\n\\brief           This function performs multiplication and …\n\\brief           This function performs multiplication and …\n\\brief           The ECP point structure, in Jacobian …\n\\brief           This function compares two points.\n\\brief           This function frees the components of a …\n\\brief           This function initializes a point as zero.\n\\brief           This function imports a point from …\n\\brief           This function imports a non-zero point …\n\\brief           This function exports a point into …\n\\brief           This function reads an elliptic curve …\n\\brief          The ECP checkup routine.\n\\brief          Set the public key in a key pair object.\n\\brief           This function sets a point to the point …\n\\brief           This function sets up an ECP group …\n\\brief           This function extracts an elliptic curve …\n\\brief           This function imports a point from a TLS …\n\\brief           This function exports an elliptic curve …\n\\brief           This function exports a point as a TLS …\n\\brief           This function exports an elliptic curve …\n\\brief           This function exports an elliptic curve …\n\\brief          The GCM context structure.\n\\brief          The GCM checkup routine.\n\\brief Translate the high-level part of an Mbed TLS error …\n\\brief          RIPEMD-160 process data block (internal …\n\\brief          SHA-1 process data block (internal use …\n\\brief          This function processes a single data …\n\\brief          This function processes a single data …\n\\brief Translate the low-level part of an Mbed TLS error …\n\\brief          This function calculates the …\n\\brief          Output = MD5( input buffer )\n@brief Type defined for MD5 context\n\\brief          Checkup routine\n\\brief          MD5 context setup\n\\brief           This function clones the state of a …\nThe generic message-digest context.\nUsed internally to indicate whether a context uses legacy …\n\\brief          This function calculates the …\n\\brief           This function finishes the digest …\n\\brief           This function clears the internal …\n\\brief           This function returns the name of the …\n\\brief           This function extracts the message-digest …\n\\brief           This function extracts the message-digest …\n\\brief          This function calculates the full generic …\n\\brief           This function finishes the HMAC …\n\\brief           This function prepares to authenticate a …\n\\brief           This function sets the HMAC key and …\n\\brief           This function feeds an input buffer into …\n\\brief           This function returns the message-digest …\n\\brief           This function returns the message-digest …\n\\brief           This function returns the message-digest …\n\\brief           This function initializes a …\n\\brief           This function returns the list of digests …\n\\brief           This function selects the message digest …\n\\brief           This function starts a message-digest …\n\\brief     Supported message digests.\n&lt; The MD5 message digest.\n&lt; None.\n&lt; The RIPEMD-160 message digest.\n&lt; The SHA-1 message digest.\n&lt; The SHA-224 message digest.\n&lt; The SHA-256 message digest.\n&lt; The SHA-384 message digest.\n&lt; The SHA3-224 message digest.\n&lt; The SHA3-256 message digest.\n&lt; The SHA3-384 message digest.\n&lt; The SHA3-512 message digest.\n&lt; The SHA-512 message digest.\n\\brief           This function feeds an input buffer into …\n\\brief          MPI structure\n\\brief          Perform an unsigned addition of MPIs: X = …\n\\brief          Perform a signed addition of an MPI and an …\n\\brief          Perform a signed addition of MPIs: X = A + …\n\\brief          Return the number of bits up to and …\n\\brief          Compare the absolute values of two MPIs.\n\\brief          Compare an MPI with an integer.\n\\brief          Compare two MPIs.\n\\brief          Make a copy of an MPI.\n\\brief          Perform a division with remainder of an …\n\\brief          Perform a division with remainder of two …\n\\brief          Perform a sliding-window exponentiation: X …\n@brief          Perform a sliding-window exponentiation: X …\n\\brief          Fill an MPI with a number of random bytes.\n\\brief          This function frees the components of an …\n\\brief          Compute the greatest common divisor: G = …\n\\brief          Generate a prime number.\n\\brief Flags for mbedtls_mpi_gen_prime()\n&lt; (X-1)/2 is prime too\n&lt; lower error rate from 2-80 to 2-128\n\\brief          Get a specific bit from an MPI.\n\\brief          Enlarge an MPI to the specified number of …\n\\brief           Initialize an MPI context.\n\\brief          Compute the modular inverse: X = A^-1 mod N\n\\brief          Miller-Rabin primality test.\n\\brief          Return the number of bits of value \\c 0 …\n\\brief          Store integer value in MPI.\n\\brief          Check if an MPI is less than the other in …\n\\brief          Perform a modular reduction with respect …\n\\brief          Perform a modular reduction. R = A mod B\n\\brief          Perform a multiplication of an MPI with an …\n\\brief          Perform a multiplication of two MPIs: X = …\nGenerate a random number uniformly in a range.\n\\brief          Import an MPI from unsigned big endian …\n\\brief          Import X from unsigned binary data, little …\n\\brief          Read an MPI from a line in an opened file.\n\\brief          Import an MPI from an ASCII string.\n\\brief          Perform a safe conditional copy of MPI …\n\\brief          Perform a safe conditional swap which doesn…\n\\brief          Checkup routine\n\\brief          Modify a specific bit in an MPI.\n\\brief          Perform a left-shift on an MPI: X &lt;&lt;= count\n\\brief          Perform a right-shift on an MPI: X &gt;&gt;= …\n\\brief          This function resizes an MPI downwards, …\n\\brief          Return the total size of an MPI value in …\n\\brief          Perform an unsigned subtraction of MPIs: X …\n\\brief          Perform a signed subtraction of an MPI and …\n\\brief          Perform a signed subtraction of MPIs: X = …\n\\brief          Swap the contents of two MPIs.\n\\brief          Export X into unsigned binary data, big …\n\\brief          Export X into unsigned binary data, little …\n\\brief          Export an MPI into an opened file.\n\\brief          Export an MPI to an ASCII string.\n\\brief   Get time in milliseconds.\nType of operation.\n\\brief           Tell if a context can do the operation …\n\\brief           Check if a public-private pair of keys …\n\\brief           Public key container\n\\brief           Create a PK context starting from a key …\n\\brief           Create a PK context for the public key of …\n\\brief           Export debug information\n\\brief           Item to send to the debug module\n\\brief           Types for interfacing with the debug …\n\\brief           Decrypt message (including padding if …\n\\brief           Encrypt message (including padding if …\n\\brief           Free the components of a …\n\\brief           Get the size in bits of the underlying key\n\\brief           Access the type name\n\\brief           Determine valid PSA attributes that can …\n\\brief           Get the key type\n\\brief           Import a key into the PSA key store.\n\\brief           Return information associated with the …\n\\brief           Initialize a #mbedtls_pk_context (as …\n\\ingroup pk_module <em>/ /</em>* \\brief           Parse a private …\n\\ingroup pk_module <em>/ /</em>* \\brief           Load and parse a …\n\\ingroup pk_module <em>/ /</em>* \\brief           Parse a public …\n\\ingroup pk_module <em>/ /</em>* \\brief           Load and parse a …\n\\brief           Parse a SubjectPublicKeyInfo DER structure\n\\brief           Types for RSA-alt abstraction\n\\brief           Options for RSASSA-PSS signature …\n\\brief           Initialize a PK context with the …\n\\brief           Initialize an RSA-alt context\n\\brief           Make signature, including padding if …\n\\brief           Make signature given a signature type.\n\\brief           Restartable version of \\c …\n\\brief          Public key types\n\\brief           Verify signature (including padding if …\n\\brief           Verify signature, with options. (Includes …\n\\brief           Restartable version of \\c …\n\\brief           Write a private key to a PKCS#1 or SEC1 …\n\\brief           Write a private key to a PKCS#1 or SEC1 …\n\\brief           Write a subjectPublicKey to ASN.1 data …\n\\brief           Write a public key to a …\n\\brief           Write a public key to a PEM string\n\\brief       Securely zeroize a buffer\n\\brief           This function generates the Poly1305 …\n\\brief           This function releases and clears the …\n\\brief           This function initializes the specified …\n\\brief           This function calculates the Poly1305 MAC …\n\\brief           The Poly1305 checkup routine.\n\\brief           This function sets the one-time …\n\\brief           This functions feeds an input buffer into …\n\\brief Library deinitialization.\n\\brief Get statistics about resource consumption related …\n\\brief Inject an initial entropy seed for the random …\n\\brief Statistics about resource consumption related to …\n\\brief Statistics about resource consumption related to …\n\\brief          Output = RIPEMD-160( input buffer )\n\\brief          Clone (the state of) a RIPEMD-160 context\n\\brief          RIPEMD-160 context structure\n\\brief          RIPEMD-160 final digest\n\\brief          Clear RIPEMD-160 context\n\\brief          Initialize RIPEMD-160 context\n\\brief          Checkup routine\n\\brief          RIPEMD-160 context setup\n\\brief          RIPEMD-160 process buffer\n\\brief      This function checks if a context contains an …\n\\brief          This function checks a public-private RSA …\n\\brief          This function checks if a context contains …\n\\brief          This function completes an RSA context from\n\\brief   The RSA context structure.\n\\brief          This function copies the components of an …\n\\brief          This function exports the core parameters …\n\\brief          This function exports CRT parameters of a …\n\\brief          This function exports core parameters of …\n\\brief          This function frees the components of an …\n\\brief          This function generates an RSA keypair.\n\\brief          This function retrieves the length of the …\n\\brief          This function retrieves the length of RSA …\n\\brief          This function retrieves hash identifier of …\n\\brief          This function retrieves padding mode of …\n\\brief          This function imports a set of core …\n\\brief          This function imports core RSA parameters, …\n\\brief          This function initializes an RSA context.\n\\brief          This function performs an RSA operation, …\n\\brief          This function adds the message padding, …\n\\brief          This function performs a private RSA …\n\\brief          This function performs a public RSA …\n\\brief          This function performs an RSA private key …\n\\brief          This function performs an RSA public key …\n\\brief            This function performs a PKCS#1 v2.1 …\n\\brief            This function performs a PKCS#1 v2.1 …\n\\brief          This function performs a PKCS#1 v1.5 …\n\\brief          This function performs a PKCS#1 v1.5 …\n\\brief          This function performs a PKCS#1 v1.5 …\n\\brief          This function performs a PKCS#1 v1.5 …\n\\brief          This function performs a PKCS#1 v2.1 PSS …\n\\brief          This function performs a PKCS#1 v2.1 PSS …\n\\brief          This function performs a PKCS#1 v2.1 PSS …\n\\brief          This function performs a PKCS#1 v2.1 PSS …\n\\brief          The RSA checkup routine.\n\\brief          This function sets padding for an already …\n\\brief          This function calculates the SHA-1 …\n\\brief          This function clones the state of a SHA-1 …\n\\brief          SHA-1 context structure\n\\brief          This function finishes the SHA-1 …\n\\brief          This function clears a SHA-1 context.\n\\brief          This function initializes a SHA-1 context.\n\\brief          The SHA-1 checkup routine.\n\\brief          This function starts a SHA-1 checksum …\n\\brief          This function feeds an input buffer into …\n\\brief          The SHA-224 checkup routine.\n\\brief          This function calculates the SHA-224 or …\n\\brief          This function clones the state of a …\n\\brief          SHA-256 context structure\n\\brief          This function finishes the SHA-256 …\n\\brief          This function clears a SHA-256 context.\n\\brief          This function initializes a SHA-256 …\n\\brief          The SHA-256 checkup routine.\n\\brief          This function starts a SHA-224 or SHA-256 …\n\\brief          This function feeds an input buffer into …\n\\brief          This function calculates the SHA-3 …\n\\brief          The SHA-384 checkup routine.\n\\brief          This function clones the state of a SHA-3 …\n\\brief          The SHA-3 context structure.\n\\brief          This function finishes the SHA-3 …\n\\brief          This function clears a SHA-3 context.\nSHA-3 family id.\n&lt; SHA3-224\n&lt; SHA3-256\n&lt; SHA3-384\n&lt; SHA3-512\n&lt; Operation not defined.\n\\brief          This function initializes a SHA-3 context.\n\\brief          Checkup routine for the algorithms …\n\\brief          This function starts a SHA-3 checksum …\n\\brief          This function feeds an input buffer into …\n\\brief          This function calculates the SHA-512 or …\n\\brief          This function clones the state of a …\n\\brief          The SHA-512 context structure.\n\\brief          This function finishes the SHA-512 …\n\\brief          This function clears a SHA-512 context.\n\\brief          This function initializes a SHA-512 …\n\\brief          The SHA-512 checkup routine.\n\\brief          This function starts a SHA-384 or SHA-512 …\n\\brief          This function feeds an input buffer into …\n\\brief          Callback type: server-side session cache …\n\\brief          Callback type: server-side session cache …\n\\brief          Check if there is data already read from …\n\\brief          Check whether a buffer contains a valid …\n\\brief   This structure is used for storing ciphersuite …\n\\brief          Notify the peer that the connection is …\n\\brief          Set the supported Application Layer …\n\\brief          Set the certificate verification mode …\n\\brief          Set the data required to verify peer …\n\\brief          Set the X.509 security profile used for …\n\\brief          Whether to send a list of acceptable CAs in\n\\brief               Set the list of allowed ciphersuites …\n\\brief          Set the debug callback\n\\brief          Set a limit on the number of records with …\n\\brief           Enable or disable Encrypt-then-MAC …\n\\brief          Set the current endpoint type\n\\brief           Enable or disable Extended Master Secret …\n\\brief          Set the allowed groups in order of …\n\\brief          Prevent or allow legacy renegotiation. …\n\\brief          Set the maximum fragment length to emit …\n\\brief          Set own certificate chain and private key\n\\brief          Pick the ciphersuites order according to …\n\\brief          Set the timeout period for …\n\\brief          Enable / Disable renegotiation support for …\n\\brief          Enforce renegotiation requests. (Default: …\n\\brief          Set record counter threshold for periodic …\n\\brief          Set the random number generator callback\n\\brief          Set the session cache callbacks …\n\\brief          Enable / Disable session tickets (client …\n\\brief           Configure SSL session ticket callbacks …\n\\brief          Configure allowed signature algorithms for …\n\\brief          Set server side ServerName TLS extension …\n\\brief           Set the transport type (TLS or DTLS). …\n\\brief          Set the verification callback (Optional).\nSSL/TLS configuration to be shared between …\n\\brief          Load reasonable default SSL configuration …\n\\brief          Free an SSL configuration context\n\\brief          Initialize an SSL configuration context …\n\\brief          Callback type: verify a cookie\n\\brief          Callback type: generate a cookie\n\\brief           Callback type: Export key alongside …\n\\brief          Free referenced items in an SSL context …\n\\brief          Get the name of the negotiated Application …\n\\brief          Return the number of application data bytes\n\\brief          Return the name of the current ciphersuite\n\\brief               Return the ID of the ciphersuite …\n\\brief          Return the id of the current ciphersuite\n\\brief               Return the name of the ciphersuite …\n\\brief          Retrieve SNI extension value for the …\n\\brief          Return the current maximum incoming record …\n\\brief          Return the current maximum outgoing record …\n\\brief          Return the peer certificate from the …\n\\brief          Return the (maximum) number of bytes added …\n\\brief          Export a session in order to resume it …\n\\brief          Callback type: get status of timers/delays\n\\brief          Return the result of the certificate …\n\\brief          Return the current TLS version\n\\brief          Perform the SSL handshake\n\\brief          Perform a single step of the SSL handshake\n\\brief           Callback type: generic handshake callback\n\\brief          Initialize an SSL context Just makes the …\nHuman-friendly representation of the (D)TLS protocol …\n&lt; (D)TLS 1.2\n&lt; (D)TLS 1.3\n&lt; Context not in use or version not yet negotiated.\n\\brief          Read at most ‘len’ application data …\n\\brief          Callback type: receive data from the …\n\\brief          Callback type: receive data from the …\n\\brief          Initiate an SSL renegotiation on the …\n\\brief           Send an alert message\n\\brief          Callback type: send data on the network.\n\\brief          Free referenced items in an SSL session …\n\\brief          Initialize SSL session structure\n\\brief          Load serialized session data into a …\n\\brief          Reset an already initialized SSL context …\n\\brief          Save session structure as serialized data …\n\\brief          Set the underlying BIO callbacks for …\n\\brief   Configure a key export callback. (Default: none.)\n\\brief          Set or reset the hostname to check against …\n\\brief          Set authmode for the current handshake.\n\\brief          Set the data required to verify peer …\n\\brief          Set DN hints sent to client in …\n\\brief          Set own certificate and key for the …\n\\brief          Load a session for session resumption.\n\\brief          Set the timer callbacks (Mandatory for …\n\\brief          Callback type: set a pair of timers/delays …\n\\brief          Set a connection-specific verification …\n\\brief          Set up an SSL context for use\n\\brief           Callback type: parse and load session …\n\\brief           Callback type: generate and write session …\n\\brief          TLS-PRF function for key derivation.\n\\brief          Try to write exactly ‘len’ application …\n\\brief Translate an Mbed TLS error code into a string …\nContainer for ASN1 bit strings.\nType-length-value structure that allows for ASN1 using DER.\nCertificate revocation list structure. Every CRL may have …\nCertificate revocation list entry. Contains the …\n\\brief          Unallocate all CRL data\n\\brief          Returns an informational string about the …\n\\brief          Initialize a CRL (chain)\n\\brief          Parse one or more CRLs and append them to …\n\\brief          Parse a DER-encoded CRL and append it to …\n\\brief          Load one or more CRLs and append them to …\nContainer for an X.509 certificate. The certificate may be …\n\\brief               The type of trusted certificate …\n\\brief           Check usage of certificate against …\n\\brief          Check usage of certificate against …\n\\brief          The type of certificate extension …\n\\brief          Unallocate all certificate data\n\\brief               Access the ca_istrue field\n\\brief          Returns an informational string about the …\n\\brief          Initialize a certificate (chain)\n\\brief          Verify the certificate revocation status\n\\brief          Parse one DER-encoded or one or more …\n\\brief          This function parses a CN string as an IP …\n\\brief          Parse a single DER formatted certificate …\n\\brief          Parse a single DER formatted certificate …\n\\brief            Parse a single DER formatted certificate …\n\\brief          Load one or more certificates and add them …\n\\brief          Load one or more certificate files from a …\nSecurity profile for certificate verification.\nDefault security profile. Should provide a good balance …\nExpected next default profile. Recommended for new …\nEmpty profile that allows nothing. Useful as a basis for …\nNSA Suite B profile.\n\\brief          Verify a chain of certificates.\nVerification chain as built by \\c …\nItem in a verification chain: cert and flags for it\n\\brief          Returns an informational string about the …\n\\brief          Restartable version of \\c …\n\\brief          Verify a chain of certificates with …\n\\brief          Store the certificate DN in printable form …\n\\brief          Unallocate all data related to subject …\nContainer for ASN1 named information objects. It allows …\n\\brief          This function parses an item in the …\nFrom RFC 5280 section 4.2.1.6: OtherName ::= SEQUENCE { …\nFrom RFC 4108 section 5: HardwareModuleName ::= SEQUENCE { …\nContainer for a sequence of ASN.1 items\n\\brief          Store the certificate serial in printable …\n\\brief            Convert the certificate DN string \\p …\nA structure for holding the parsed Subject Alternative …\nContainer for date and time (precision in seconds).\n\\brief          Compare pair of mbedtls_x509_time.\n\\brief          Check a given mbedtls_x509_time against …\n\\brief          Check a given mbedtls_x509_time against …\nContainer for writing a certificate (CRT)\n\\brief           Write a built up certificate to a X509 …\n\\brief           Free the contents of a CRT write context\n\\brief           Initialize a CRT writing context\n\\brief           Write a built up certificate to a X509 …\n\\brief           Set the authorityKeyIdentifier extension …\n\\brief           Set the basicConstraints extension for a …\n\\brief           Set the Extended Key Usage Extension …\n\\brief           Generic function to add to or replace an …\n\\brief           Set the issuer key used for signing the …\n\\brief           Set the issuer name for a Certificate …\n\\brief           Set the Key Usage Extension flags (e.g. …\n\\brief           Set the MD algorithm to use for the …\n\\brief           Set the Netscape Cert Type flags (e.g. …\n\\brief           Set the serial number for a Certificate.\n\\brief           Set Subject Alternative Name\n\\brief           Set the subject public key for the …\n\\brief           Set the subjectKeyIdentifier extension …\n\\brief           Set the subject name for a Certificate …\n\\brief           Set the validity period for a Certificate …\n\\brief           Set the version for a Certificate …\n&lt; MCK pin, output\n&lt; MCK pin, output by default, input if the clock source is …\n&lt; MCK pin, output by default, input if the clock source is …\n&lt; The multiple of I2S master clock(MCLK) to sample rate\n&lt; The multiple of I2S master clock(MCLK) to sample rate\n&lt; The multiple of MCLK to the sample rate\n&lt; The multiple of MCLK to the sample rate Default is 256 …\n&lt; The multiple of MCLK to the sample rate, only take …\n@brief MCPWM brake configuration structure\n@brief MCPWM operator brake event callback function\n@brief MCPWM brake event data\n@brief Type of MCPWM capture channel handle\n@brief Type of MCPWM capture timer handle\n@brief MCPWM capture channel configuration structure\n@brief Disable MCPWM capture channel\n@brief Enable MCPWM capture channel\n@brief Set event callbacks for MCPWM capture channel\n@brief Trigger a catch by software\n@brief MCPWM capture edge\n&lt; Capture on the negative edge\n&lt; Capture on the positive edge\n@brief Group of supported MCPWM capture event callbacks …\n@brief MCPWM capture event callback function\n@brief MCPWM capture event data\n@brief MCPWM capture timer configuration structure\n@brief Disable MCPWM capture timer\n@brief Enable MCPWM capture timer\n@brief Get MCPWM capture timer resolution, in Hz\n@brief Set sync phase for MCPWM capture timer\n@brief Start MCPWM capture timer\n@brief Stop MCPWM capture timer\n@brief MCPWM Capture timer sync phase configuration\n@brief MCPWM carrier configuration structure\n@brief MCPWM event comparator ETM event configuration\n@brief Type of MCPWM comparator handle\n@brief MCPWM comparator configuration\n@brief MCPWM comparator specific events that supported by …\n&lt; The count value equals the value of comparator\n&lt; Maximum number of comparator events\n@brief Group of supported MCPWM compare event callbacks …\n@brief Get the ETM event for MCPWM comparator\n@brief Set event callbacks for MCPWM comparator\n@brief Set MCPWM comparator’s compare value\n@brief MCPWM comparator event callback function\n@brief MCPWM compare event data\n@brief MCPWM dead time configuration structure\n@brief Delete MCPWM capture channel\n@brief Delete MCPWM capture timer\n@brief Delete MCPWM comparator\n@brief Delete MCPWM fault\n@brief Delete MCPWM generator\n@brief Delete MCPWM operator\n@brief Delete MCPWM sync source\n@brief Delete MCPWM timer\n@brief Group of supported MCPWM fault event callbacks …\n@brief MCPWM fault event callback function\n@brief MCPWM fault event data\n@brief Type of MCPWM fault handle\n@brief Set event callbacks for MCPWM fault\n@brief Generator action on specific brake event\n@brief Generator action on specific comparator event\n@brief Generator action on specific fault event\n@brief Type of MCPWM generator handle\n@brief Generator action on specific sync event\n@brief Generator action on specific timer event\n@brief MCPWM generator actions\n&lt; Generator action: Force to high level\n&lt; Generator action: Keep the same level\n&lt; Generator action: Force to low level\n&lt; Generator action: Toggle level\n@brief MCPWM generator configuration\n@brief Set generator action on MCPWM brake event\n@brief Set generator action on MCPWM compare event\n@brief Set generator action on MCPWM Fault event\n@brief Set generator action on MCPWM Sync event\n@brief Set generator action on MCPWM timer event\n@brief Set generator actions on multiple MCPWM brake events\n@brief Set generator actions on multiple MCPWM compare …\n@brief Set generator actions on multiple MCPWM timer events\n@brief Set dead time for MCPWM generator\n@brief Set force level for MCPWM generator\n@brief MCPWM GPIO fault configuration structure\n@brief MCPWM GPIO sync source configuration\n@brief Create MCPWM capture channel\n@brief Create MCPWM capture timer\n@brief Create MCPWM comparator\n@brief Allocate MCPWM generator from given operator\n@brief Create MCPWM GPIO fault\n@brief Create MCPWM GPIO sync source\n@brief Create MCPWM operator\n@brief Create MCPWM software fault\n@brief Create MCPWM software sync source\n@brief Create MCPWM timer\n@brief Create MCPWM timer sync source\n@brief Type of MCPWM operator handle\n@brief Apply carrier feature for MCPWM operator\n@brief MCPWM operator brake mode\n&lt; Brake mode: CBC (cycle by cycle)\n&lt; MCPWM operator invalid brake mode\n&lt; Brake mode: OST (one shot)\n@brief MCPWM operator configuration\n@brief Connect MCPWM operator and timer, so that the …\n@brief Group of supported MCPWM operator event callbacks …\n@brief Try to make the operator recover from fault\n@brief Set event callbacks for MCPWM operator\n@brief Set brake method for MCPWM operator\n@brief Activate the software fault, trigger the fault …\n@brief MCPWM software fault configuration structure\n@brief Activate the software sync, trigger the sync event …\n@brief MCPWM software sync configuration structure\n@brief Type of MCPWM sync handle\n@brief MCPWM timer configuration\n@brief MCPWM timer count modes\n&lt; MCPWM timer counting down\n&lt; MCPWM timer paused\n&lt; MCPWM timer counting up\n&lt; MCPWM timer counting up and down\n@brief MCPWM timer count direction\n&lt; Counting direction: Decrease\n&lt; Counting direction: Increase\n@brief Disable MCPWM timer\n@brief Enable MCPWM timer\n@brief Group of supported MCPWM timer event callbacks …\n@brief MCPWM timer event callback function\n@brief MCPWM timer event data\n@brief MCPWM timer events\n&lt; MCPWM timer counts to zero (i.e. counter is empty)\n&lt; MCPWM timer counts to peak (i.e. counter is full)\n&lt; MCPWM timer invalid event\n@brief Type of MCPWM timer handle\n@brief Set event callbacks for MCPWM timer\n@brief Set a new period for MCPWM timer\n@brief Set sync phase for MCPWM timer\n@brief Send specific start/stop commands to MCPWM timer\n@brief MCPWM timer commands, specify the way to start or …\n&lt; MCPWM timer starts couting, and don’t stop until …\n&lt; MCPWM timer starts counting and stops when next count …\n&lt; MCPWM timer starts counting and stops when next count …\n&lt; MCPWM timer stops when next count reaches zero\n&lt; MCPWM timer stops when next count reaches peak\n@brief MCPWM Timer sync phase configuration\n@brief MCPWM timer sync source configuration\n@brief Type defined for MD5 context\n&lt; MD5 hash callback function for data vector\n&lt;  medium RSSI threshold, used to determine whether the …\n&lt; RMT memory block number\n&lt; Size of memory block, in number of <code>rmt_symbol_word_t</code>, …\n&lt; Size of memory block, in number of <code>rmt_symbol_word_t</code>, …\nMemory pool descriptor\nCreate the list of all memory pools managed by memp. …\n@brief Mesh address\n&lt; Mesh adv size for scan duplicate\n&lt; mesh softAP configuration\n@brief Mesh softAP configuration\n@brief Mesh networking IE\n@brief Mesh initialization configuration\n@brief Mesh chain assoc\n@brief Mesh chain layer\n@brief The crypto callback function structure used in mesh …\n@brief Mesh data for esp_mesh_send() and esp_mesh_recv()\n@brief Mesh disconnect reason code\n&lt; cyclic is detected\n&lt; in different mesh ID\n&lt; use an empty password to connect to an encrypted parent\n&lt; unknown IE\n&lt; the connected device is changed to a leaf\n&lt; parent is idle\n&lt; parent has stopped the mesh\n&lt; connect to an unencrypted parent/router\n&lt; parent with very poor RSSI\n&lt; root conflict is detected\n&lt; scan fail\n&lt; waive root\n@brief Channel switch information\n@brief Child connected information\n@brief Child disconnected information\n@brief Parent connected information\n@brief Parent disconnected information\n@brief find a mesh network that this device can join\n&lt; channel switch\n&lt; a child is connected on softAP interface\n&lt; a child is disconnected on softAP interface\n&lt; when the channel field in mesh configuration is set to …\n&lt; layer changes over the mesh network\n&lt; network state, such as whether current mesh network has …\n&lt; no parent found\n&lt; parent is connected on station interface\n&lt; parent is disconnected on station interface\n&lt; child duty\n&lt; device duty\n&lt; parent duty\n&lt; the root address is obtained. It is posted by mesh stack …\n&lt; the root is asked yield by a more powerful existing …\n&lt; when devices join a network, if the setting of Fixed …\n&lt; root switch acknowledgment responds the above request …\n&lt; root switch request sent from a new voted root candidate\n&lt; if users specify BSSID of the router in mesh …\n&lt; routing table is changed by adding newly joined children\n&lt; routing table is changed by removing leave children\n&lt; if self-organized networking is disabled, user can call …\n&lt; mesh is started\n&lt; mesh is stopped\n&lt; the root stops reconnecting to the router and non-root …\n&lt; state represents whether the root is able to access …\n&lt; the process of voting a new root is started either by …\n&lt; the process of voting a new root is stopped\n@brief Mesh event information\n@brief Layer change information\n@brief Network state information\n@brief No parent found information\n@brief PS duty information\n@brief Root address\n@brief Other powerful root address\n@brief Root fixed\n@brief Root switch request information\n@brief New router information\n@brief Routing table change\n@brief Scan done　event information\n@brief The reachability of the root to a DS (distribute …\n&lt; the root is able to access external IP network\n&lt; the root isn’t able to access external IP network\n@brief vote started information\n&lt; mesh ID, only the same mesh id can form a unified mesh …\n&lt; mesh network identification\n@brief Mesh option\n@brief Protocol of transmitted application data\n&lt; IP network mesh communication of node’s AP interface\n&lt; binary\n&lt; HTTP protocol\n&lt; JSON format\n&lt; MQTT protocol\n&lt; IP network mesh communication of node’s STA interface\n@brief Vote address configuration\n@brief Router configuration\n@brief Mesh RSSI threshold\n@brief The number of packets available in the queue …\n@brief Mesh switch parent\n@brief For reliable transmission, mesh stack provides …\n&lt; no retransmission on mesh stack\n&lt; provide E2E (end-to-end) retransmission on mesh stack …\n&lt; provide P2P (point-to-point) retransmission on mesh …\n@brief The number of packets pending in the queue waiting …\n&lt; mesh device type, include idle, root, node, etc, refer …\n@brief Device type\n&lt; hasn’t joined the mesh network yet\n&lt; has no forwarding ability\n&lt; intermediate device. Has the ability to forward packets …\n&lt; the only sink of the mesh network. Has the ability to …\n&lt; connect to router with a standlone Wi-Fi station mode, …\n@brief Vote reason\n&lt; vote is initiated by children\n&lt; vote is initiated by the root\n@brief Vote\n&lt; timeout for retransmitting of failed packet\n&lt; The type of HTTP request, -1 if unsupported method\n&lt; Method supported by the URI\n&lt; HTTP Method\n&lt; The type of HTTP request, -1 if unsupported method\n&lt; Method supported by the URI\n&lt; manufacturer identification number\nThe digest to use for MGF1 in PSS.\n&lt; management queue\n&lt; WiFi management short buffer number, the minimum value …\n&lt; EMAC MII Clock Configuration\n&lt; minimum active scan time per channel, units: millisecond\n&lt; Time.\n&lt; minimum ce length\n&lt; Minimal chip revision supported by image After the Major …\n&lt; Minimal chip revision supported by image, in format: …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Min connection interval\n&lt; Min connection interval\n&lt; The min value of the integral part, integer range: […\n&lt; Advertising data show slave preferred connection min …\n&lt;  Lifetime minimum free heap size. Equivalent to …\n&lt; mip address\n&lt; mip address\n@brief Mirror the LCD panel on specific axis\n&lt; [out] Input data from slave, little endian\n&lt; GPIO pin for Master In Slave Out (=spi_q) signal, or -1 …\n&lt; Input data length, in bytes\n&lt; mkdir without context pointer\n&lt; mkdir with context pointer\nThis function could be called to add or delete an entry in …\n&lt; MMC version (for CID format)\n&lt;Set filter mode. The input of the filter is the raw value …\n&lt; I2S work mode\n&lt;Set filter mode. The input of the filter is the raw value …\n&lt; SPI mode, representing a pair of (CPOL, CPHA) …\n&lt; GPIO mode: set input/output mode\n&lt; Mode of TWAI controller\n&lt; I2C mode\n&lt; I2S work mode\n&lt; I2S channel communication mode\n&lt; SPI mode, representing a pair of (CPOL, CPHA) …\n&lt; periodic advertising sync transfer mode\n&lt; Model name of the device. If empty, the default model …\n&lt; Model number of the device. If empty, the default model …\n&lt;  modulation index, 0x00:standard modulation index, …\n&lt; Date.\n&lt; acceptable times of parent networking IE change before …\n&lt; Output data to salve\n&lt; GPIO pin for Master Out Slave In (=spi_d) signal, or -1 …\n&lt; Output data length, in bytes\n&lt; LWT message, may be NULL terminated\n&lt; <em>MQTT</em> messaged id of message\n&lt; LWT message length, if msg isn’t NULL terminated must …\n&lt; Number of messages in RX queue waiting to be read\n&lt; Number of messages queued for transmission or awaiting …\nmaximum transfer unit (in bytes)\n&lt; MTU size\n&lt; MTU size\n&lt; Gatt server callback param of ESP_GATTS_MTU_EVT\n&lt; MTU size\nmaximum transfer unit (in bytes), updated by RA\n@brief allocate a chunk of memory with specific alignment\n@brief Perform an aligned allocation from the provided …\n@brief free() a buffer aligned in a given heap.\n@brief Check heap integrity\n@brief Dump heap information to stdout\n@brief free() a buffer in a given heap.\n@brief Return free heap size\n@brief Return the size that a particular pointer was …\n@brief Return metadata about a given heap\n@brief Opaque handle to a registered heap\n@brief Structure to access heap metadata via …\n@brief malloc() a buffer in a given heap\n@brief Return the lifetime minimum free heap size\n@brief realloc() a buffer in a given heap.\n@brief Register a new heap for use\n@brief Associate a private lock pointer with a heap\n&lt; the number of nodes that voted for me\nName of the handler, which is passed to protocomm layer\n!&lt; Timer name, used in esp_timer_dump function\n&lt; product name (MMC v1 has the longest)\ndescriptive abbreviation\n&lt; A human-friendly name.\nName of the handler, which is passed to protocomm layer\n&lt; Name of bluetooth device\n@brief   This structure maps handler required by protocomm …\n&lt; Number of namespaces.\n&lt; Namespace to which key-value belong\n&lt; configuration of NAN\n&lt; Nano option for printf/scan family enable flag\n&lt; For Short Weierstrass: The number of bits in \\p P. For …\n&lt; total channel number\n&lt; NAN Datapath Identifier\n&lt; NAN Datapath Identifier\n&lt; NDP instance id\n&lt; NDP instance id\n&lt; NDP instance id\n&lt; The read operation need to do response\n&lt; The write operation need to do response\n&lt; delay time applied to falling edge, 0 means no falling …\n@brief  Callback function type to get neighbor report\nGeneric data structure used for all lwIP network …\n&lt; netif handle\n&lt; netif handle\nThe default network interface.\n@ingroup netif Argument supplied to netif_ext_callback_fn.\nArgs to …\nArgs to LWIP_NSC_IPV6_ADDR_STATE_CHANGED callback\nArgs to LWIP_NSC_IPV6_SET callback\nArgs to LWIP_NSC_LINK_CHANGED callback\nArgs to LWIP_NSC_STATUS_CHANGED callback\n@ingroup netif Function used for extended netif status …\nFunction prototype for netif igmp_mac_filter functions\nFunction prototype for netif init functions. Set up flags …\nFunction prototype for netif-&gt;input functions. This …\nFunction prototype for netif-&gt;linkoutput functions. Only …\nThe list of network interfaces.\nMAC Filter Actions, these are passed to a netif’s …\nAdd a filter entry\nDelete a filter entry\nFunction prototype for netif mld_mac_filter functions\n@ingroup netif Extended netif status callback (NSC) …\nFunction prototype for netif-&gt;output functions. Called by …\nFunction prototype for netif-&gt;output_ip6 functions. Called …\nFunction prototype for netif status- or link-callback …\n&lt; Interface IPV4 netmask\n&lt; Network configuration\n&lt; network state, such as whether current mesh network has …\n&lt; new home channel of the device\nFunction which is to be called by the manager to generate …\nFunction which is to be called by the manager to generate …\n&lt; new layer\n&lt; the new auth mode of AP\n&lt; new second channel of the device\nStarts new secure transport session with specified ID\nStarts new secure transport session with specified ID\nThe next entry in the sequence.\nThe next entry in the sequence.\nnext pbuf in singly linked pbuf chain\nnext pbuf in singly linked pbuf chain\npointer to next in linked list\nThe next entry in the sequence.\nThe next entry in the sequence.\nNext element in the linked list of entries. \\p NULL …\nNext element in the linked list of CRL. \\p NULL indicates …\nNext certificate in the linked list that constitutes the …\n&lt; Indicates no ack required\n&lt; no parent found\n&lt;Noise threshold coefficient. Higher = More noise …\n&lt;Noise threshold coefficient. Higher = More noise …\n&lt; Configure non-blocking mode. If set to true the …\n&lt; Configure non-blocking mode. If set to true the …\n&lt; max non-mesh connections\n&lt; Normal adv size for scan duplicate\n&lt; Gatt client callback param of ESP_GATTC_NOTIFY_EVT\n&lt; callback used to notify that the controller has a packet …\n&lt; callback used to notify that the controller has a packet …\n&lt; callback used to notify that the host can send packet to …\n&lt; callback used to notify that the host can send packet to …\nPointer to the Name-UUID lookup table\nPointer to the Name-UUID lookup table\nNumber of entries in the Name-UUID lookup table\nNumber of entries in the Name-UUID lookup table\n&lt; number of stations in the list (other entries are …\nnumber of this interface. Used for @ref if_api and @ref …\n&lt; The number of address in the gattc cache address list\n&lt; The number of the attribute\n&lt; The number of discard packets\n&lt; The number of the attribute handle to be added to the …\n&lt; number of packets received, only valid if update_evt is …\n&lt; number of preconfigured NTP servers\n&lt; number of preconfigured NTP servers\n&lt; Scan result number\n&lt; The number of transmitted RMT symbols, including one EOF …\n&lt; The number of received RMT symbols\n&lt; number of scan results\n&lt; the number of APs scanned\n&lt; Numerator part of division\n@brief      Close the storage handle and free any …\n@brief      Write any pending changes to non-volatile …\n&lt; WiFi NVS flash enable flag\n@brief       Create an iterator to enumerate NVS entries …\n@brief       Create an iterator to enumerate NVS entries …\n@brief       Fills nvs_entry_info_t structure with …\n@brief information about entry obtained from …\n@brief       Advances the iterator to next item matching …\n@brief      Erase all key-value pairs in a namespace\n@brief      Erase key-value pair with given key name.\n@brief      Lookup key-value pair with given key name.\n@brief Deinitialize NVS storage for the default NVS …\n@brief Deinitialize NVS storage for the given NVS partition\n@brief Erase the default NVS partition\n@brief Erase specified NVS partition\n@brief Erase custom partition.\n@brief Generate and store NVS keys in the provided esp …\n@brief Callback function prototype for generating the NVS …\n@brief Generate (and store) the NVS keys using the …\n@brief   Fetch the configuration structure for the default …\n@brief Initialize the default NVS partition.\n@brief Initialize NVS flash storage for the specified …\n@brief Initialize NVS flash storage for the partition …\n&lt;  Callback for the nvs_flash_key_gen implementation\n&lt;  Callback for the nvs_flash_read_keys implementation\n@brief Callback function prototype for reading the NVS …\n@brief Read NVS security configuration from a partition.\n@brief Read NVS security configuration set by the …\n@brief Registers the given security scheme for NVS …\n@brief Initialize the default NVS partition.\n@brief Initialize NVS flash storage for the specified …")